{"version":3,"file":"index-35867d77.js","sources":["../../../src/rogu/utils/assignmentMaterial.ts","../../../src/rogu/utils/constants.ts","../../../src/rogu/utils/repliedMessage.ts","../../../src/utils/index.ts"],"sourcesContent":["export const isAssignmentMessage = (customType: string): boolean =>\n  customType === \"assignment\";\n\nexport const isMaterialMessage = (customType: string): boolean =>\n  customType === \"material\";\n\nexport const convertCtaLinkToWebLink = (\n  cta: string,\n  customType: string\n): string => {\n  const listOfSerials = cta.split(\"&\");\n  const workspaceSerial = listOfSerials[1].split(\"=\")[1];\n  const classroomSerial = listOfSerials[2].split(\"=\")[1];\n  const serial = listOfSerials[3].split(\"=\")[1];\n  const type_ = customType === \"assignment\" ? \"assignment\" : \"material\";\n  const url = `https://kelas.ruangguru.com/workspace/${workspaceSerial}/classroom/${classroomSerial}/${type_}/detail/${serial}?from=chatroom`;\n\n  return url;\n};\n\nexport const convertAssignmentDueUTCtoLocale = (dueAt: string): string => {\n  const localeDate = new Date(dueAt).toLocaleString();\n  return localeDate;\n};\n","export const META_ARRAY_VALUE_MAX_CHAR = 128;\nexport const REPLIED_MESSAGE_MAX_CHAR = 200;\nexport const REPLIED_MESSAGE_QUOTE_FORMAT = '>';\n\nexport const REGEX_LINE_BREAK = /\\r?\\n|\\r/g;\n\n// Note: Source thread: https://stackoverflow.com/questions/3809401/what-is-a-good-regular-expression-to-match-a-url\n// Note: Source demo: https://regexr.com/3e6m0\nexport const REGEX_URL = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+~#?&//=]*)/g;\n// export const REGEX_URL = /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*?)/g;\n","import { MessageMetaArray, SendBirdInstance } from 'sendbird';\n\nimport { CoreMessageType } from '../../utils';\nimport {\n  META_ARRAY_VALUE_MAX_CHAR,\n  REGEX_LINE_BREAK,\n  REPLIED_MESSAGE_MAX_CHAR,\n  REPLIED_MESSAGE_QUOTE_FORMAT,\n} from './constants';\n\nexport enum RepliedMessageType {\n  Assignment = 'assignment',\n  File = 'file',\n  Image = 'image',\n  Material = 'material',\n  Text = 'text',\n  Video = 'video',\n}\n\n// For JS usage\nexport const REPLIED_MESSAGE_TYPE = {\n  Assignment: 'assignment',\n  File: 'file',\n  Image: 'image',\n  Material: 'material',\n  Text: 'text',\n  Video: 'video',\n};\n\nexport type RepliedMessage = {\n  originalMessage?: string;\n  parentMessageBody: string;\n  parentMessageCreatedAt: number;\n  parentMessageId: string;\n  parentMessageMediaUrl?: string;\n  parentMessageMimeType?: string;\n  parentMessageNickname: string;\n  parentMessageType: RepliedMessageType;\n};\n\nexport const formatedStringToRepliedMessage = (\n  message: string\n): RepliedMessage => {\n  // TODO: consider to use regex instead\n  const repliedMessage = message\n    .split('\\n')\n    .filter((word) => isQuoteFormat(word))\n    .map((word) => word.substr(1));\n  const [parentMessageNickname, ...rest] = repliedMessage;\n  const parentMessageBody = rest.join('\\n');\n  const originalMessage = message\n    .split('\\n')\n    .filter((word) => !isQuoteFormat(word))\n    .join('\\n');\n  return {\n    originalMessage,\n    parentMessageId: '',\n    parentMessageBody,\n    parentMessageNickname,\n    parentMessageType: RepliedMessageType.Text,\n    parentMessageCreatedAt: 0,\n  };\n};\n\nexport const repliedMessageToFormatedString = ({\n  originalMessage,\n  parentMessageBody,\n  parentMessageNickname,\n}: RepliedMessage): string =>\n  [\n    '>',\n    parentMessageNickname,\n    '\\n>',\n    parentMessageBody,\n    '\\n',\n    originalMessage,\n  ].join('');\n\nexport const getParentMessageId = (\n  message: CoreMessageType\n): string[] | undefined => {\n  return message?.metaArrays?.[0]?.value;\n};\n\nconst isQuoteFormat = (word: string): boolean => {\n  return word.charAt(0) === REPLIED_MESSAGE_QUOTE_FORMAT;\n};\n\nexport const stringToMetaArrayValue = (str: string): Array<string> => {\n  const metaArrayValue: Array<string> = [];\n  let end = META_ARRAY_VALUE_MAX_CHAR;\n  for (let i = 0; i < str.length; i += META_ARRAY_VALUE_MAX_CHAR) {\n    metaArrayValue.push(str.substring(i, end));\n    end += META_ARRAY_VALUE_MAX_CHAR;\n  }\n\n  return metaArrayValue;\n};\n\nexport const repliedMessageToMetaArrays = (\n  sdk: SendBirdInstance,\n  repliedMessage: RepliedMessage\n): Array<MessageMetaArray> => {\n  const metaArrays = [];\n\n  Object.entries(repliedMessage).forEach(([key, value]) => {\n    metaArrays.push(\n      new sdk.MessageMetaArray(key, stringToMetaArrayValue(String(value)))\n    );\n  });\n\n  return metaArrays;\n};\n\nexport const metaArraysToRepliedMessage = (\n  metaArrays: Array<MessageMetaArray>\n): RepliedMessage =>\n  metaArrays.reduce(\n    (repliedMessage: RepliedMessage, meta: MessageMetaArray) => {\n      repliedMessage[meta.key] = meta.value?.join('');\n\n      return repliedMessage;\n    },\n    {\n      parentMessageBody: '',\n      parentMessageCreatedAt: 0,\n      parentMessageId: '',\n      parentMessageMediaUrl: '',\n      parentMessageMimeType: '*',\n      parentMessageNickname: '',\n      parentMessageType: RepliedMessageType.Text,\n    }\n  );\n\nexport const normalizeRepliedMessageBody = (messageBody: string): string =>\n  messageBody\n    // Remove line break (`\\n`) to avoid breaking the replied message workaround\n    .replace(REGEX_LINE_BREAK, ' ')\n    // Trim the replied message body to ensure that the character length is below the limit\n    .substring(0, REPLIED_MESSAGE_MAX_CHAR);\n","import format from 'date-fns/format';\nimport {\n  AdminMessage,\n  Emoji,\n  EmojiCategory,\n  EmojiContainer,\n  FileMessage,\n  GroupChannel,\n  GroupChannelListQuery,\n  Member,\n  MessageListParams,\n  OpenChannel,\n  Reaction,\n  SendBirdInstance,\n  User,\n  UserMessage,\n} from 'sendbird';\nimport { isAssignmentMessage, isMaterialMessage } from '../rogu/utils';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: ['video/mpeg', 'video/ogg', 'video/webm', 'video/mp4'],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n};\n\nexport interface UIKitMessageTypes {\n  ADMIN: 'ADMIN';\n  TEXT: 'TEXT';\n  FILE: 'FILE';\n  THUMBNAIL: 'THUMBNAIL';\n  OG: 'OG';\n  UNKNOWN: 'UNKNOWN';\n}\nconst UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\nexport interface UIKitFileTypes {\n  IMAGE: 'IMAGE';\n  AUDIO: 'AUDIO';\n  VIDEO: 'VIDEO';\n  GIF: 'GIF';\n  OTHERS: 'OTHERS';\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  OTHERS: 'OTHERS',\n};\n\nexport interface SendingMessageStatus {\n  NONE: 'none';\n  SUCCEEDED: 'succeeded';\n  FAILED: 'failed';\n  PENDING: 'pending';\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\ninterface OutgoingMessageStates {\n  NONE: 'NONE';\n  PENDING: 'PENDING';\n  SENT: 'SENT';\n  FAILED: 'FAILED';\n  DELIVERED: 'DELIVERED';\n  READ: 'READ';\n  // delivered and read are only in group channel\n}\nexport const OutgoingMessageStates: OutgoingMessageStates = {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ',\n};\n\nexport type CoreMessageType = (AdminMessage | UserMessage | FileMessage) & {\n  // Add `isOperatorMessage` attribute manually since Sendbird type declaration doesnt provide it explicitly\n  isOperatorMessage?: boolean;\n};\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean =>\n  SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean =>\n  SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean =>\n  isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean =>\n  SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\nexport const getOutgoingMessageStates = (): OutgoingMessageStates => ({\n  ...OutgoingMessageStates,\n});\nexport const getOutgoingMessageState = (\n  channel: GroupChannel | OpenChannel,\n  message: UserMessage | FileMessage\n): string => {\n  if (message.sendingStatus === 'pending') return OutgoingMessageStates.PENDING;\n  if (message.sendingStatus === 'failed') return OutgoingMessageStates.FAILED;\n  if (channel?.isGroupChannel?.()) {\n    /* GroupChannel only */\n    if ((channel as GroupChannel).getUnreadMemberCount(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if (\n      (channel as GroupChannel).getUndeliveredMemberCount(message) === 0\n    ) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') return OutgoingMessageStates.SENT;\n  return OutgoingMessageStates.NONE;\n};\nexport const isSentMessage = (\n  channel: GroupChannel | OpenChannel,\n  message: UserMessage | FileMessage\n): boolean =>\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.SENT ||\n  getOutgoingMessageState(channel, message) ===\n    OutgoingMessageStates.DELIVERED ||\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\nexport const isDeliveredMessage = (\n  channel: GroupChannel,\n  message: UserMessage | FileMessage\n): boolean =>\n  getOutgoingMessageState(channel, message) ===\n    OutgoingMessageStates.DELIVERED ||\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\nexport const isReadMessage = (\n  channel: GroupChannel,\n  message: UserMessage | FileMessage\n): boolean =>\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (\n  channel: GroupChannel | OpenChannel,\n  message: UserMessage | FileMessage\n): boolean =>\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.FAILED;\nexport const isPendingMessage = (\n  channel: GroupChannel | OpenChannel,\n  message: UserMessage | FileMessage\n): boolean =>\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.PENDING;\nexport const isSentStatus = (state: string): boolean =>\n  state === OutgoingMessageStates.SENT ||\n  state === OutgoingMessageStates.DELIVERED ||\n  state === OutgoingMessageStates.READ;\n\nexport const isAdminMessage = (message: AdminMessage): boolean =>\n  message &&\n  (message.isAdminMessage?.() ||\n    (message['messageType'] && message.messageType === 'admin'));\nexport const isUserMessage = (message: UserMessage): boolean =>\n  message &&\n  (message.isUserMessage?.() ||\n    (message['messageType'] && message.messageType === 'user'));\nexport const isFileMessage = (message: FileMessage): boolean =>\n  message &&\n  (message.isFileMessage?.() ||\n    (message['messageType'] && message.messageType === 'file'));\n\nexport const isOGMessage = (message: UserMessage): boolean =>\n  !!(\n    message &&\n    isUserMessage(message) &&\n    message?.ogMetaData &&\n    message?.ogMetaData?.url\n  );\nexport const isTextMessage = (message: UserMessage): boolean =>\n  isUserMessage(message) &&\n  !isOGMessage(message) &&\n  !isAssignmentMessage(message.customType) &&\n  !isMaterialMessage(message.customType);\nexport const isThumbnailMessage = (message: FileMessage): boolean =>\n  message && isFileMessage(message) && isSupportedFileView(message.type);\nexport const isImageMessage = (message: FileMessage): boolean =>\n  message && isThumbnailMessage(message) && isImage(message.type);\nexport const isVideoMessage = (message: FileMessage): boolean =>\n  message && isThumbnailMessage(message) && isVideo(message.type);\nexport const isGifMessage = (message: FileMessage): boolean =>\n  message && isThumbnailMessage(message) && isGif(message.type);\nexport const isAudioMessage = (message: FileMessage): boolean =>\n  message && isFileMessage(message) && isAudio(message.type);\n\nexport const isEditedMessage = (message: UserMessage): boolean =>\n  isUserMessage(message) && message?.updatedAt > 0;\nexport const isEnabledOGMessage = (message: UserMessage): boolean =>\n  !message || !message.ogMetaData || !message.ogMetaData.url ? false : true;\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({\n  ...UIKitMessageTypes,\n});\nexport const getUIKitMessageType = (message: CoreMessageType): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage)\n      ? UIKitMessageTypes.OG\n      : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    return isThumbnailMessage(message as FileMessage)\n      ? UIKitMessageTypes.THUMBNAIL\n      : UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({\n  ...SendingMessageStatus,\n});\n\nconst reducer = (\n  accumulator: Array<string>,\n  currentValue: string | Array<string>\n): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (\n  classNames: string | Array<string | Array<string>>\n): string =>\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames;\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean =>\n  reaction.userIds.some(\n    (reactorUserId: string): boolean => reactorUserId === userId\n  );\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (\n  reaction: Reaction,\n  userId: string,\n  memberNicknamesMap: Map<string, string>,\n  stringSet: StringSet\n): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you =\n      reaction.userIds.length === 1\n        ? stringSet.TOOLTIP__YOU\n        : stringSet.TOOLTIP__AND_YOU;\n  }\n  return `${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map(\n      (reactorUserId: string) =>\n        memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER\n    )\n    .join(', ')}${you}`;\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendBirdInstance;\n    };\n    userStore: {\n      user: User;\n    };\n  };\n  config: {\n    useReaction: boolean;\n  };\n}\nexport const getCurrentUserId = (store: UIKitStore): string =>\n  store?.stores?.userStore?.user?.userId;\nexport const getUseReaction = (\n  store: UIKitStore,\n  channel: GroupChannel | OpenChannel\n): boolean => {\n  if (!store?.config?.useReaction) return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.isUsingReaction) return false;\n  if (channel?.isGroupChannel())\n    return !(\n      (channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper\n    );\n  return store?.config?.useReaction;\n};\n\nexport const isMessageSentByMe = (\n  userId: string,\n  message: UserMessage | FileMessage\n): boolean =>\n  userId && message?.sender?.userId && userId === message.sender.userId;\n\nexport const isMessageSentByOperator = (message: CoreMessageType): boolean =>\n  message?.isOperatorMessage || false;\n\nconst URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return (\n    fullStr.substr(0, frontChars) +\n    separator +\n    fullStr.substr(fullStr.length - backChars)\n  );\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> =>\n  emojiContainer?.emojiCategories\n    ?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce(\n      (prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr),\n      []\n    );\nexport const getEmojiMapAll = (\n  emojiContainer: EmojiContainer\n): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\n\nexport const getUserName = (user: User): string =>\n  user?.friendName || user?.nickname || user?.userId;\nexport const getSenderName = (message: UserMessage | FileMessage): string =>\n  message.sender && getUserName(message.sender);\nexport const getMessageCreatedAt = (\n  message: UserMessage | FileMessage\n): string => format(message.createdAt || 0, 'HH:mm');\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const isFriend = (user: User): boolean =>\n  !!(user.friendDiscoveryKey || user.friendName);\n\nexport const filterMessageListParams = (\n  params: MessageListParams,\n  message: UserMessage | FileMessage\n): boolean => {\n  if (params?.messageType && params.messageType !== message.messageType) {\n    return false;\n  }\n  if (params?.customTypes?.length > 0) {\n    const customTypes = params.customTypes.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIds && params?.senderUserIds?.length > 0) {\n    if (message?.isUserMessage() || message.isFileMessage()) {\n      const messageSender =\n        (message as UserMessage | FileMessage).sender || message['_sender'];\n      if (!params?.senderUserIds?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (\n    !params?.includeParentMessageInfo &&\n    (message?.parentMessageId || message?.parentMessage)\n  ) {\n    return false;\n  }\n  return true;\n};\n\ninterface SDKChannelListParamsPrivateProps extends GroupChannelListQuery {\n  _searchFilter: {\n    search_query: string;\n    search_fields: Array<'member_nickname' | 'channel_name'>;\n  };\n  _userIdsFilter: {\n    userIds: Array<string>;\n    includeMode: boolean;\n    queryType: 'AND' | 'OR';\n  };\n}\nexport const filterChannelListParams = (\n  params: SDKChannelListParamsPrivateProps,\n  channel: GroupChannel,\n  currentUserId: string\n): boolean => {\n  if (\n    !params?.includeEmpty &&\n    channel?.lastMessage &&\n    channel.lastMessage === null\n  ) {\n    return false;\n  }\n  if (\n    params?._searchFilter?.search_query &&\n    params._searchFilter.search_fields?.length > 0\n  ) {\n    const searchFilter = params._searchFilter;\n    const searchQuery = searchFilter.search_query;\n    const searchFields = searchFilter.search_fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (\n        !searchFields.some((searchField) => {\n          switch (searchField) {\n            case 'channel_name': {\n              return channel.name\n                .toLowerCase()\n                .includes(searchQuery.toLowerCase());\n            }\n            case 'member_nickname': {\n              return channel.members.some((member: Member) =>\n                member.nickname\n                  .toLowerCase()\n                  .includes(searchQuery.toLowerCase())\n              );\n            }\n            default: {\n              return true;\n            }\n          }\n        })\n      ) {\n        return false;\n      }\n    }\n  }\n  if (params?._userIdsFilter?.userIds?.length > 0) {\n    const userIdsFilter = params._userIdsFilter;\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: string[] = userIdsFilter.userIds;\n    const memberIds = channel.members.map((member: Member) => member.userId);\n    if (!includeMode) {\n      // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel.members.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) {\n      // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (params?.includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (params?.includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (\n    params?.customTypesFilter?.length > 0 &&\n    !params.customTypesFilter.includes(channel?.customType)\n  ) {\n    return false;\n  }\n  if (\n    params?.customTypeStartsWithFilter &&\n    !new RegExp(`^${params.customTypeStartsWithFilter}`).test(\n      channel?.customType\n    )\n  ) {\n    return false;\n  }\n  if (\n    params?.channelNameContainsFilter &&\n    !channel?.name\n      ?.toLowerCase()\n      .includes(params.channelNameContainsFilter.toLowerCase())\n  ) {\n    return false;\n  }\n  if (params?.nicknameContainsFilter) {\n    const lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (\n      channel?.members?.every(\n        (member: Member) =>\n          !member.nickname.toLowerCase().includes(lowerCasedSubString)\n      )\n    ) {\n      return false;\n    }\n  }\n  if (\n    params?.channelUrlsFilter?.length > 0 &&\n    !params.channelUrlsFilter.includes(channel?.url)\n  ) {\n    return false;\n  }\n  if (params?.memberStateFilter) {\n    switch (params.memberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (\n          channel?.myMemberState !== 'invited' ||\n          !isFriend(channel.inviter)\n        ) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (\n          !channel?.isHidden ||\n          channel?.hiddenState !== 'hidden_allow_auto_unhide'\n        ) {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (\n          !channel?.isHidden ||\n          channel?.hiddenState !== 'hidden_prevent_auto_unhide'\n        ) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => {\n  // [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return (\n      pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number))\n    );\n  } else {\n    return leftList.length === 0 ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (\n  channels: Array<GroupChannel>,\n  channel: GroupChannel\n): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel.url)) {\n    return channels.map((ch: GroupChannel) =>\n      ch.url === channel.url ? channel : ch\n    );\n  }\n  const targetIndex = binarySearch(\n    channels.map(\n      (channel: GroupChannel) =>\n        channel?.lastMessage?.createdAt || channel?.createdAt\n    ),\n    channel?.lastMessage?.createdAt || channel?.createdAt\n  );\n  return [\n    ...channels.slice(0, targetIndex),\n    channel,\n    ...channels.slice(targetIndex, channels.length),\n  ];\n};\n"],"names":["isAssignmentMessage","customType","isMaterialMessage","convertCtaLinkToWebLink","cta","listOfSerials","split","workspaceSerial","classroomSerial","serial","type_","url","convertAssignmentDueUTCtoLocale","dueAt","localeDate","Date","toLocaleString","META_ARRAY_VALUE_MAX_CHAR","REPLIED_MESSAGE_MAX_CHAR","REPLIED_MESSAGE_QUOTE_FORMAT","REGEX_LINE_BREAK","REGEX_URL","RepliedMessageType","REPLIED_MESSAGE_TYPE","Assignment","File","Image","Material","Text","Video","formatedStringToRepliedMessage","message","repliedMessage","filter","word","isQuoteFormat","map","substr","parentMessageNickname","rest","parentMessageBody","join","originalMessage","parentMessageId","parentMessageType","parentMessageCreatedAt","repliedMessageToFormatedString","_a","charAt","stringToMetaArrayValue","str","metaArrayValue","end","i","length","push","substring","repliedMessageToMetaArrays","sdk","metaArrays","Object","entries","forEach","key","value","MessageMetaArray","String","metaArraysToRepliedMessage","reduce","meta","parentMessageMediaUrl","parentMessageMimeType","normalizeRepliedMessageBody","messageBody","replace","SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","UIKitMessageTypes","ADMIN","TEXT","FILE","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","OTHERS","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","OutgoingMessageStates","SENT","DELIVERED","READ","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","getUIKitFileType","getOutgoingMessageStates","getOutgoingMessageState","channel","sendingStatus","isGroupChannel","getUnreadMemberCount","getUndeliveredMemberCount","isSentMessage","isFailedMessage","isPendingMessage","isSentStatus","state","isAdminMessage","messageType","isUserMessage","isFileMessage","isOGMessage","ogMetaData","isTextMessage","isThumbnailMessage","isImageMessage","isVideoMessage","isGifMessage","isAudioMessage","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","getSendingMessageStatus","reducer","accumulator","currentValue","Array","isArray","getClassName","classNames","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","TOOLTIP__YOU","TOOLTIP__AND_YOU","get","TOOLTIP__UNKNOWN_USER","isMessageSentByMe","sender","isMessageSentByOperator","isOperatorMessage","URL_REG","isUrl","test","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","emojiCategories","emojiCategory","emojis","prevArr","currArr","concat","getEmojiMapAll","emojiMap","Map","category","emoji","set","getUserName","user","friendName","nickname","getSenderName","getMessageCreatedAt","format","createdAt","hasSameMembers","a","b","sortedA","__spreadArray","sort","sortedB","isFriend","friendDiscoveryKey","filterMessageListParams","params","customTypes","item","includes","senderUserIds","messageSender","includeParentMessageInfo","parentMessage","filterChannelListParams","currentUserId","includeEmpty","lastMessage","_searchFilter","search_query","search_fields","searchFilter","searchQuery_1","searchFields","searchField","name","toLowerCase","members","member","_userIdsFilter","userIdsFilter","includeMode","queryType","memberIds_1","every","includeFrozen","isFrozen","customTypesFilter","customTypeStartsWithFilter","RegExp","channelNameContainsFilter","nicknameContainsFilter","lowerCasedSubString_1","channelUrlsFilter","memberStateFilter","myMemberState","inviter","hiddenChannelFilter","isHidden","hiddenState","unreadChannelFilter","unreadMessageCount","publicChannelFilter","isPublic","superChannelFilter","isSuper","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","ch","targetIndex"],"mappings":"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"}