{"version":3,"file":"index.js","sources":["../../../src/hooks/useSendbirdStateContext.tsx","../../../src/rogu/smart-components/Conversation/dux/actionTypes.js","../../../src/rogu/smart-components/Conversation/utils.js","../../../src/rogu/smart-components/Conversation/dux/initialState.js","../../../src/rogu/smart-components/Conversation/dux/reducers.js","../../../src/rogu/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../../src/rogu/smart-components/Conversation/hooks/useGetChannel.js","../../../src/rogu/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../../src/rogu/smart-components/Conversation/hooks/useHandleReconnect.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollDownCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useResendMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useSendMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../../src/rogu/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollToMessage.ts","../../../src/rogu/ui/MessageInput/index.jsx","../../../src/rogu/smart-components/Conversation/components/RemoveMessage.jsx","../../../src/rogu/smart-components/Conversation/components/MessageHOC.jsx","../../../src/rogu/smart-components/Conversation/components/ConversationScroll.jsx","../../../src/rogu/smart-components/Conversation/components/Notification.jsx","../../../src/rogu/smart-components/Conversation/components/FrozenNotification.tsx","../../../src/rogu/smart-components/Conversation/components/TypingIndicator.jsx","../../../src/rogu/smart-components/Conversation/components/MessageInputWrapper.tsx","../../../src/rogu/smart-components/Conversation/index.jsx"],"sourcesContent":["/**\n * Example:\n * const MyComponent = () => {\n *  const context = useSendbirdStateContext();\n *  const sdk = sendbirdSelectors.getSdk(context);\n *  return (<div>...</div>);\n * }\n */\nimport { useContext } from 'react';\n\nimport { SendbirdSdkContext } from '../lib/SendbirdSdkContext';\nimport { SendBirdState } from '../index';\n\nfunction useSendbirdStateContext (): SendBirdState {\n  const context: SendBirdState = useContext(SendbirdSdkContext);\n  return context;\n}\n\nexport default useSendbirdStateContext;\n","export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nimport { getSendingMessageStatus, getOutgoingMessageStates } from '../../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...filteredAllMessages,\n          ...receivedMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { message } = action.payload;\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../../utils/uuid';\nimport compareIds from '../../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, currentGroupChannel.url) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                currentGroupChannel.markAsRead();\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, currentGroupChannel.url) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../../ui/ContextMenu';\nimport ReactionButton from '../../../../ui/ReactionButton';\nimport ImageRenderer from '../../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../../types';\nimport { Logger } from '../../../../index';\n\ninterface useScrollToMessageDynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setHighLightedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface useScrollToMessageStaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setHighLightedMessageId,\n  allMessages,\n}: useScrollToMessageDynamicParams, {\n  logger,\n}: useScrollToMessageStaticParams): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setHighLightedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setHighLightedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setHighLightedMessageId(messageId);\n        }\n      });\n    }, [\n      setIntialTimeStamp,\n      setHighLightedMessageId,\n      allMessages,\n    ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, {\n  useState, useRef, useEffect, useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport IconButton from '../../../ui/IconButton';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\n\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n// import IconSend from '../../svgs/icon-send.svg';\n// import IconAttach from '../../svgs/icon-attach.svg';\n\nconst LINE_HEIGHT = 36;\nconst noop = () => {};\nconst KeyCode = {\n  SHIFT: 16,\n  ENTER: 13,\n};\n\nconst handleUploadFile = (callback) => (event) => {\n  if (event.target.files && event.target.files[0]) {\n    callback(event.target.files[0]);\n  }\n  // eslint-disable-next-line no-param-reassign\n  event.target.value = '';\n};\n\nconst MessageInput = React.forwardRef((props, ref) => {\n  const {\n    isEdit,\n    disabled,\n    value,\n    name,\n    placeholder,\n    maxLength,\n    onFileUpload,\n    onSendMessage,\n    onCancelEdit,\n    onStartTyping,\n  } = props;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const fileInputRef = useRef(null);\n  const [inputValue, setInputValue] = useState(value);\n  const [isShiftPressed, setIsShiftPressed] = useState(false);\n\n  const setHeight = () => {\n    try {\n      const elem = ref.current;\n      const MAX_HEIGHT = window.document.body.offsetHeight * 0.6;\n      if (elem && elem.scrollHeight >= LINE_HEIGHT) {\n        if (MAX_HEIGHT < elem.scrollHeight) {\n          elem.style.height = 'auto';\n          elem.style.height = `${MAX_HEIGHT}px`;\n        } else {\n          elem.style.height = 'auto';\n          elem.style.height = `${elem.scrollHeight}px`;\n        }\n      } else {\n        elem.style.height = '';\n      }\n    } catch (error) {\n      // error\n    }\n  };\n\n  // after setHeight called twice, the textarea goes to the initialized\n  useEffect(() => {\n    setHeight();\n    return setHeight;\n  }, [inputValue]);\n\n  const sendMessage = () => {\n    if (inputValue && inputValue.trim().length > 0) {\n      const trimmedInputValue = inputValue.trim();\n      if (isEdit) {\n        onSendMessage(name, trimmedInputValue, () => {\n          onCancelEdit();\n        });\n      } else {\n        onSendMessage(trimmedInputValue);\n        setInputValue('');\n      }\n    }\n  };\n\n  return (\n    <form\n      className={[\n        isEdit ? 'sendbird-message-input__edit' : '',\n        disabled ? 'sendbird-message-input-form__disabled ' : '',\n      ].join(' sendbird-message-input__container ')}\n    >\n      <div\n        className={[\n          'sendbird-message-input',\n          disabled ? 'sendbird-message-input__disabled' : '',\n        ].join(' ')}\n      >\n        <textarea\n          className=\"sendbird-message-input--textarea\"\n          disabled={disabled}\n          ref={ref}\n          name={name}\n          value={inputValue}\n          maxLength={maxLength}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n            onStartTyping();\n          }}\n          onKeyDown={(e) => {\n            if (e.keyCode === KeyCode.SHIFT) {\n              setIsShiftPressed(true);\n            }\n            if (!isShiftPressed && e.keyCode === KeyCode.ENTER) {\n              e.preventDefault();\n              sendMessage();\n            }\n          }}\n          onKeyUp={(e) => {\n            if (e.keyCode === KeyCode.SHIFT) {\n              setIsShiftPressed(false);\n            }\n          }}\n        />\n        {/* placeholder */}\n        {!inputValue && (\n          <Label\n            className=\"sendbird-message-input--placeholder\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {placeholder || stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER}\n          </Label>\n        )}\n        {/* send icon */}\n        {/* {\n          (!isEdit && inputValue && inputValue.trim().length > 0) && (\n            <IconButton\n              className=\"sendbird-message-input--send\"\n              height=\"32px\"\n              width=\"32px\"\n              onClick={sendMessage}\n            >\n              <Icon\n                type={IconTypes.SEND}\n                fillColor={IconColors.PRIMARY}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </IconButton>\n          )\n        } */}\n        {/* upload icon */}\n        {!isEdit && (\n          <IconButton\n            className=\"sendbird-message-input--attach\"\n            height=\"32px\"\n            width=\"32px\"\n            onClick={() => {\n              // todo: clear previous input\n              fileInputRef.current.click();\n            }}\n          >\n            <Icon\n              type={IconTypes.ATTACH}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"20px\"\n              height=\"20px\"\n            />\n            <input\n              className=\"sendbird-message-input--attach-input\"\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleUploadFile(onFileUpload)}\n            />\n          </IconButton>\n        )}\n\n        {!isEdit && (\n          <IconButton\n            className=\"sendbird-message-input--send\"\n            height=\"36px\"\n            width=\"36px\"\n            onClick={sendMessage}\n          >\n            <Icon\n              type={IconTypes.SEND}\n              fillColor={IconColors.WHITE}\n              width=\"20px\"\n              height=\"20px\"\n            />\n          </IconButton>\n        )}\n      </div>\n      {/* Edit */}\n\n      {isEdit && (\n        <div className=\"sendbird-message-input--edit-action\">\n          <Button\n            className=\"sendbird-message-input--edit-action__cancel\"\n            type={ButtonTypes.SECONDARY}\n            size={ButtonSizes.SMALL}\n            onClick={onCancelEdit}\n          >\n            {stringSet.BUTTON__CANCEL}\n          </Button>\n          <Button\n            className=\"sendbird-message-input--edit-action__save\"\n            type={ButtonTypes.PRIMARY}\n            size={ButtonSizes.SMALL}\n            onClick={() => {\n              if (inputValue) {\n                const trimmedInputValue = inputValue.trim();\n                onSendMessage(name, trimmedInputValue, () => {\n                  onCancelEdit();\n                });\n              }\n            }}\n          >\n            {stringSet.BUTTON__SAVE}\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n});\n\nMessageInput.propTypes = {\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  isEdit: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  maxLength: PropTypes.number,\n  onFileUpload: PropTypes.func,\n  onSendMessage: PropTypes.func,\n  onStartTyping: PropTypes.func,\n  onCancelEdit: PropTypes.func,\n};\n\nMessageInput.defaultProps = {\n  value: '',\n  onSendMessage: noop,\n  name: 'sendbird-message-input',\n  isEdit: false,\n  disabled: false,\n  placeholder: '',\n  maxLength: 5000,\n  onFileUpload: noop,\n  onCancelEdit: noop,\n  onStartTyping: noop,\n};\n\nexport default MessageInput;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../../ui/Modal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState, useRef, useMemo, useLayoutEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport MessageContent from '../../../../ui/MessageContent';\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  highLightedMessageId,\n  toggleReaction,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(\n        message,\n        currentGroupChannel,\n        chainTop,\n        chainBottom,\n      );\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = userId === sender.userId\n    || message.requestState === 'pending'\n    || message.requestState === 'failed';\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={`\n          sendbird-msg-hoc sendbird-msg--scroll-ref\n          ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n        `}\n      >\n        {/* date-separator */}\n        {hasSeparator && (\n          <DateSeparator>\n            <Label\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )}\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => {\n          setShowEdit(false);\n        }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={`\n        sendbird-msg-hoc sendbird-msg--scroll-ref\n        ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n      `}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {hasSeparator && (\n        <DateSeparator>\n          <Label\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {format(message.createdAt, 'MMMM dd, yyyy')}\n          </Label>\n        </DateSeparator>\n      )}\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        // useReplying={} TODO: Set useReplying\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n      />\n      {/* Modal */}\n      {showRemove && (\n        <RemoveMessageModal\n          onCloseModal={() => setShowRemove(false)}\n          onDeleteMessage={() => {\n            deleteMessage(message);\n          }}\n        />\n      )}\n      {showFileViewer && (\n        <FileViewer\n          onClose={() => setShowFileViewer(false)}\n          message={message}\n          onDelete={() => {\n            deleteMessage(message, () => {\n              setShowFileViewer(false);\n            });\n          }}\n          isByMe={isByMe}\n        />\n      )}\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(\n      PropTypes.shape({\n        emojis: PropTypes.arrayOf(\n          PropTypes.shape({\n            key: PropTypes.string,\n            url: PropTypes.string,\n          }),\n        ),\n      }),\n    ),\n  }),\n  toggleReaction: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  highLightedMessageId: null,\n  toggleReaction: () => {},\n  scrollToMessage: () => {},\n  emojiContainer: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      // show status for pending/failed messages\n                      message={m}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => {},\n  scrollToMessage: () => {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info(\n          'Channel > Typing Indicator: onTypingStatusUpdated',\n          groupChannel,\n        );\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from \"react\";\nimport Sendbird from \"sendbird\";\n\nimport { RenderGroupChannelMessageInputProps } from \"../index\";\nimport * as utils from \"../utils.js\";\n\nimport MessageInput from \"../../../ui/MessageInput\";\nimport { LocalizationContext } from \"../../../../lib/LocalizationContext\";\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(\n    renderProps: RenderGroupChannelMessageInputProps\n  ): JSX.Element;\n}\n\nconst MessageInputWrapper = (\n  {\n    channel,\n    user,\n    onSendMessage,\n    onFileUpload,\n    renderMessageInput,\n    isOnline,\n    initialized,\n  }: Props,\n  ref: React.RefObject<HTMLInputElement>\n): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled =\n    !initialized ||\n    utils.isDisabledBecauseFrozen(channel) ||\n    utils.isDisabledBecauseMuted(channel) ||\n    !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={\n        (utils.isDisabledBecauseFrozen(channel) &&\n          stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED) ||\n        (utils.isDisabledBecauseMuted(channel) &&\n          stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport withSendbirdContext from '../../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../../ui/ConnectionStatus';\nimport ChatHeader from '../../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setHighLightedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  currentGroupChannel.markAsRead();\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["useSendbirdStateContext","context","useContext","SendbirdSdkContext","RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED","FAILED","PENDING","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getAllEmojisFromEmojiContainer","emojiContainer","emojiCategories","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","filter","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","messageType","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","React","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ReactionButton","ImageRenderer","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","_a","_b","setIntialTimeStamp","setHighLightedMessageId","isPresent","LINE_HEIGHT","noop","KeyCode","SHIFT","ENTER","handleUploadFile","callback","event","target","files","MessageInput","forwardRef","props","ref","isEdit","disabled","placeholder","maxLength","onFileUpload","onSendMessage","onCancelEdit","onStartTyping","LocalizationContext","stringSet","fileInputRef","useState","inputValue","setInputValue","isShiftPressed","setIsShiftPressed","setHeight","elem","MAX_HEIGHT","window","body","style","trimmedInputValue","join","keyCode","preventDefault","Label","LabelTypography","BODY_1","LabelColors","ONBACKGROUND_3","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER","IconButton","click","ATTACH","IconColors","CONTENT_INVERSE","SEND","WHITE","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","BUTTON__CANCEL","PRIMARY","BUTTON__SAVE","propTypes","PropTypes","oneOfType","string","bool","number","func","defaultProps","RemoveMessage","onCloseModal","onDeleteMessage","Modal","MODAL__DELETE_MESSAGE__TITLE","isRequired","MessageHoc","editDisabled","hasSeparator","updateMessage","scrollToMessage","resendMessage","chainTop","chainBottom","membersMap","highLightedMessageId","renderCustomMessage","showEdit","setShowEdit","showRemove","setShowRemove","showFileViewer","setShowFileViewer","isAnimated","setIsAnimated","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","isByMe","DateSeparator","CAPTION_2","ONBACKGROUND_2","marginBottom","MessageContent","RemoveMessageModal","FileViewer","shape","isFileMessage","isUserMessage","isDateseparator","ogMetaData","instanceOf","arrayOf","ConversationScroll","onScroll","onScrollDown","element","clientHeight","nodes","querySelectorAll","first","last","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","menuDisabled","MessageHOC","CHEVRON_DOWN","Component","readStatus","Notification","count","time","onClick","timeArray","split","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","ONCONTENT_1","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","user","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConversationPanel","stores","sdkStore","userStore","config","theme","reconnect","dispatchers","queries","startingPoint","highlightedMessage","showSearchIcon","onSearchClick","renderChatHeader","renderUserProfile","disableUserProfile","onChatHeaderActionClick","sdkError","messageListQuery","warn","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","ChatHeader","LOADING","ConnectionStatus","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}