{"version":3,"file":"index.js","sources":["../../../src/rogu/utils/date.ts","../../../src/rogu/utils/message.ts","../../../src/hooks/useSendbirdStateContext.tsx","../../../src/rogu/smart-components/Conversation/dux/actionTypes.js","../../../src/rogu/smart-components/Conversation/utils.js","../../../src/rogu/smart-components/Conversation/dux/initialState.js","../../../src/rogu/smart-components/Conversation/dux/reducers.js","../../../src/rogu/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../../src/rogu/smart-components/Conversation/hooks/useGetChannel.js","../../../src/rogu/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../../src/rogu/smart-components/Conversation/hooks/useHandleReconnect.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollDownCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useResendMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useSendMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../../src/rogu/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../../src/rogu/smart-components/Conversation/hooks/useScrollToMessage.ts","../../../src/rogu/ui/Label/types.js","../../../src/rogu/ui/Label/utils.js","../../../src/rogu/ui/Label/index.jsx","../../../src/rogu/ui/Icon/type.js","../../../src/rogu/ui/Icon/index.jsx","../../../src/rogu/ui/MessageStatus/index.jsx","../../../src/rogu/ui/TextButton/index.jsx","../../../src/rogu/ui/TextMessageItemBody/index.tsx","../../../src/rogu/ui/OGMessageItemBody/index.tsx","../../../src/rogu/ui/AssignmentMessageItemBody/index.tsx","../../../src/rogu/ui/MaterialMessageItemBody/index.tsx","../../../src/rogu/ui/MessageContent/utils.ts","../../../src/rogu/ui/ContextMenu/items/MenuItems.jsx","../../../src/rogu/ui/ContextMenu/index.jsx","../../../src/rogu/ui/Toast/index.jsx","../../../src/rogu/ui/MessageItemMenu/index.tsx","../../../src/rogu/ui/MessageContent/index.tsx","../../../src/rogu/ui/MessageInput/index.jsx","../../../src/rogu/smart-components/Conversation/components/RemoveMessage.jsx","../../../src/rogu/ui/ImageRenderer/index.jsx","../../../src/rogu/ui/Avatar/index.tsx","../../../src/rogu/ui/FileViewer/index.jsx","../../../src/rogu/smart-components/Conversation/components/MessageHOC.jsx","../../../src/rogu/ui/DateSeparator/utils.tsx","../../../src/rogu/ui/DateSeparator/index.tsx","../../../src/rogu/smart-components/Conversation/components/ConversationScroll.jsx","../../../src/rogu/smart-components/Conversation/components/Notification.jsx","../../../src/rogu/smart-components/Conversation/components/FrozenNotification.tsx","../../../src/rogu/smart-components/Conversation/components/TypingIndicator.jsx","../../../src/rogu/smart-components/Conversation/components/MessageInputWrapper.tsx","../../../src/rogu/smart-components/Conversation/index.jsx"],"sourcesContent":["import { Day } from \"date-fns\";\n\nexport type DayStringType = { [key in Day]: string };\n\nexport const getDayString = (dayNumber: Day, strings: DayStringType):string =>\n  strings[dayNumber];\n","import { format } from 'date-fns'\n\nimport { CoreMessageType } from \"../../utils\"\n\n// eslint-disable-next-line\nexport const groupMessagesByDate = (messages: Array<CoreMessageType>) => {\n    return messages.reduce(\n        (groupedMessagesByDate, currMessage) => {\n          const messageDate = format(currMessage.createdAt, \"dd/MM/yyyy\");\n          const currentGroup = groupedMessagesByDate.get(messageDate);\n\n          if (currentGroup) {\n            groupedMessagesByDate.set(messageDate, [\n              ...currentGroup,\n              currMessage,\n            ]);\n          } else {\n            groupedMessagesByDate.set(messageDate, [currMessage]);\n          }\n\n          return groupedMessagesByDate\n        },\n        new Map(),\n      );\n      \n};\n\nexport default groupMessagesByDate;","/**\n * Example:\n * const MyComponent = () => {\n *  const context = useSendbirdStateContext();\n *  const sdk = sendbirdSelectors.getSdk(context);\n *  return (<div>...</div>);\n * }\n */\nimport { useContext } from 'react';\n\nimport { SendbirdSdkContext } from '../lib/SendbirdSdkContext';\nimport { SendBirdState } from '../index';\n\nfunction useSendbirdStateContext (): SendBirdState {\n  const context: SendBirdState = useContext(SendbirdSdkContext);\n  return context;\n}\n\nexport default useSendbirdStateContext;\n","export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nimport { getSendingMessageStatus, getOutgoingMessageStates } from '../../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...filteredAllMessages,\n          ...receivedMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { message } = action.payload;\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../../utils/uuid';\nimport compareIds from '../../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, currentGroupChannel.url) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                currentGroupChannel.markAsRead();\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, currentGroupChannel.url) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../../ui/ContextMenu';\nimport ReactionButton from '../../../../ui/ReactionButton';\nimport ImageRenderer from '../../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../../types';\nimport { Logger } from '../../../../index';\n\ninterface useScrollToMessageDynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setHighLightedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface useScrollToMessageStaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setHighLightedMessageId,\n  allMessages,\n}: useScrollToMessageDynamicParams, {\n  logger,\n}: useScrollToMessageStaticParams): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setHighLightedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setHighLightedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setHighLightedMessageId(messageId);\n        }\n      });\n    }, [\n      setIntialTimeStamp,\n      setHighLightedMessageId,\n      allMessages,\n    ],\n  );\n}\n\nexport default useScrollToMessage;\n","export const Typography = {\n  H_1: 'H_1',\n  H_2: 'H_2',\n  H_3: 'H_3',\n  SUBTITLE_1: 'SUBTITLE_1',\n  SUBTITLE_2: 'SUBTITLE_2',\n  BODY_1: 'BODY_1',\n  BODY_2: 'BODY_2',\n  BODY_3: 'BODY_3',\n  BUTTON_1: 'BUTTON_1',\n  BUTTON_2: 'BUTTON_2',\n  CAPTION_1: 'CAPTION_1',\n  CAPTION_2: 'CAPTION_2',\n  CAPTION_3: 'CAPTION_3',\n  TYPING_INDICATOR: 'TYPING_INDICATOR',\n};\n\nexport const Colors = {\n  ONBACKGROUND_1: 'ONBACKGROUND_1',\n  ONBACKGROUND_2: 'ONBACKGROUND_2',\n  ONBACKGROUND_3: 'ONBACKGROUND_3',\n  ONBACKGROUND_4: 'ONBACKGROUND_4',\n  ONBACKGROUND_5: 'ONBACKGROUND_5',\n  ONCONTENT_1: 'ONCONTENT_1',\n  ONCONTENT_2: 'ONCONTENT_2',\n  PRIMARY: 'PRIMARY',\n  ERROR: 'ERROR',\n  SECONDARY_3: 'SECONDARY_3',\n};\n","import { Typography, Colors } from './types';\n\nexport function changeTypographyToClassName(type) {\n  switch (type) {\n    case Typography.H_1: return 'sendbird-label--h-1';\n    case Typography.H_2: return 'sendbird-label--h-2';\n    case Typography.H_3: return 'rogu-label--h-3';\n    case Typography.SUBTITLE_1: return 'sendbird-label--subtitle-1';\n    case Typography.SUBTITLE_2: return 'sendbird-label--subtitle-2';\n    case Typography.BODY_1: return 'sendbird-label--body-1';\n    case Typography.BODY_2: return 'sendbird-label--body-2';\n    case Typography.BODY_3: return 'rogu-label--body-3';\n    case Typography.BUTTON_1: return 'sendbird-label--button-1';\n    case Typography.BUTTON_2: return 'sendbird-label--button-2';\n    case Typography.CAPTION_1: return 'sendbird-label--caption-1';\n    case Typography.CAPTION_2: return 'sendbird-label--caption-2';\n    case Typography.CAPTION_3: return 'sendbird-label--caption-3';\n    case Typography.TYPING_INDICATOR: return 'sendbird-label--typing-indicator';\n    default: return null;\n  }\n}\n\nexport function changeColorToClassName(color) {\n  switch (color) {\n    case Colors.ONBACKGROUND_1: return 'sendbird-label--color-onbackground-1';\n    case Colors.ONBACKGROUND_2: return 'sendbird-label--color-onbackground-2';\n    case Colors.ONBACKGROUND_3: return 'sendbird-label--color-onbackground-3';\n    case Colors.ONBACKGROUND_4: return 'sendbird-label--color-onbackground-4';\n    case Colors.ONBACKGROUND_5: return 'rogu-label--color-onbackground-5';\n    case Colors.ONCONTENT_1: return 'sendbird-label--color-oncontent-1';\n    case Colors.ONCONTENT_2: return 'sendbird-label--color-oncontent-2';\n    case Colors.PRIMARY: return 'sendbird-label--color-primary'; // should be Primary-3 fix me\n    case Colors.ERROR: return 'sendbird-label--color-error';\n    case Colors.SECONDARY_3: return 'sendbird-label--color-secondary-3';\n    default: return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport { Typography, Colors } from './types';\nimport { changeTypographyToClassName, changeColorToClassName } from './utils';\nimport getStringSet from './stringSet';\n\nexport default function Label({\n  children, className, color, style, type,\n}) {\n  return (\n    <span\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-label',\n        type ? changeTypographyToClassName(type) : '',\n        color ? changeColorToClassName(color) : '',\n      ].join(' ')}\n      style={style}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  type: PropTypes.oneOf([...Object.keys(Typography), '']),\n  color: PropTypes.oneOf([...Object.keys(Colors), '']),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.element,\n    PropTypes.any,\n  ]),\n  style: PropTypes.object,\n};\n\nLabel.defaultProps = {\n  className: [],\n  type: '',\n  color: '',\n  children: null,\n  style: undefined,\n};\n\nconst LabelTypography = Typography;\nconst LabelColors = Colors;\nconst LabelStringSet = getStringSet('en');\nexport { LabelTypography, LabelColors, LabelStringSet };\n","export default {\n  ADD: 'ADD',\n  ARROW_LEFT: 'ARROW_LEFT',\n  ATTACH: 'ATTACH',\n  BAN: 'BAN',\n  BROADCAST: 'BROADCAST',\n  CAMERA: 'CAMERA',\n  CHANNELS: 'CHANNELS',\n  CHAT: 'CHAT',\n  CHAT_FILLED: 'CHAT_FILLED',\n  CHEVRON_DOWN: 'CHEVRON_DOWN',\n  CHEVRON_RIGHT: 'CHEVRON_RIGHT',\n  CLOSE: 'CLOSE',\n  COLLAPSE: 'COLLAPSE',\n  COPY: 'COPY',\n  CREATE: 'CREATE',\n  DELETE: 'DELETE',\n  DISCONNECTED: 'DISCONNECTED',\n  DOCUMENT: 'DOCUMENT',\n  DONE: 'DONE',\n  DONE_ALL: 'DONE_ALL',\n  DOWNLOAD: 'DOWNLOAD',\n  EDIT: 'EDIT',\n  EMOJI_MORE: 'EMOJI_MORE',\n  ERROR: 'ERROR',\n  EXPAND: 'EXPAND',\n  FILE_AUDIO: 'FILE_AUDIO',\n  FILE_DOCUMENT: 'FILE_DOCUMENT',\n  FREEZE: 'FREEZE',\n  GIF: 'GIF',\n  INFO: 'INFO',\n  LEAVE: 'LEAVE',\n  MEMBERS: 'MEMBERS',\n  MESSAGE: 'MESSAGE',\n  MODERATIONS: 'MODERATIONS',\n  MORE: 'MORE',\n  MUTE: 'MUTE',\n  NOTIFICATIONS: 'NOTIFICATIONS',\n  NOTIFICATIONS_OFF_FILLED: 'NOTIFICATIONS_OFF_FILLED',\n  OPERATOR: 'OPERATOR',\n  PHOTO: 'PHOTO',\n  PLAY: 'PLAY',\n  PLUS: 'PLUS',\n  QUESTION: 'QUESTION',\n  REFRESH: 'REFRESH',\n  REPLY: 'REPLY',\n  REMOVE: 'REMOVE',\n  SEARCH: 'SEARCH',\n  SEND: 'SEND',\n  SETTINGS_FILLED: 'SETTINGS_FILLED',\n  SPINNER: 'SPINNER',\n  SUPERGROUP: 'SUPERGROUP',\n  THUMBNAIL_NONE: 'THUMBNAIL_NONE',\n  TOGGLE_OFF: 'TOGGLE_OFF',\n  TOGGLE_ON: 'TOGGLE_ON',\n  USER: 'USER',\n  ROGU_PENDING: 'ROGU_PENDING',\n  ROGU_SENT: 'ROGU_SENT',\n  ROGU_READ_ALL: 'ROGU_READ_ALL',\n  ROGU_ERROR: 'ROGU_ERROR',\n  ROGU_COPY: 'ROGU_COPY',\n  ROGU_REPLY: 'ROGU_REPLY',\n  ROGU_RESEND: 'ROGU_RESEND',\n  ROGU_CLOSE: 'ROGU_CLOSE',\n  ROGU_DOWNLOAD: 'ROGU_DOWNLOAD',\n  ROGU_DELETE: 'ROGU_DELETE',\n  ROGU_ASSIGNMENT: 'ROGU_ASSIGNMENT',\n  ROGU_MATERIAL: 'ROGU_MATERIAL',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Type from './type';\n\nimport IconAdd from '../../../svgs/icon-add.svg';\nimport IconArrowLeft from '../../../svgs/icon-arrow-left.svg';\nimport IconAttach from '../../../svgs/icon-attach.svg';\nimport IconBan from '../../../svgs/icon-ban.svg';\nimport IconBroadcast from '../../../svgs/icon-broadcast.svg';\nimport IconCamera from '../../../svgs/icon-camera.svg';\nimport IconChannels from '../../../svgs/icon-channels.svg';\nimport IconChat from '../../../svgs/icon-chat.svg';\nimport IconChatFilled from '../../../svgs/icon-chat-filled.svg';\nimport IconChevronDown from '../../../svgs/icon-chevron-down.svg';\nimport IconChevronRight from '../../../svgs/icon-chevron-right.svg';\nimport IconClose from '../../../svgs/icon-close.svg';\nimport IconCollapse from '../../../svgs/icon-collapse.svg';\nimport IconCopy from '../../../svgs/icon-copy.svg';\nimport IconCreate from '../../../svgs/icon-create.svg';\nimport IconDelete from '../../../svgs/icon-delete.svg';\nimport IconDisconnected from '../../../svgs/icon-disconnected.svg';\nimport IconDocument from '../../../svgs/icon-document.svg';\nimport IconDone from '../../../svgs/icon-done.svg';\nimport IconDoneAll from '../../../svgs/icon-done-all.svg';\nimport IconDownload from '../../../svgs/icon-download.svg';\nimport IconEdit from '../../../svgs/icon-edit.svg';\nimport IconEmojiMore from '../../../svgs/icon-emoji-more.svg';\nimport IconError from '../../../svgs/icon-error.svg';\nimport IconExpand from '../../../svgs/icon-expand.svg';\nimport IconFileAudio from '../../../svgs/icon-file-audio.svg';\nimport IconFileDocument from '../../../svgs/icon-file-document.svg';\nimport IconFreeze from '../../../svgs/icon-freeze.svg';\nimport IconGif from '../../../svgs/icon-gif.svg';\nimport IconInfo from '../../../svgs/icon-info.svg';\nimport IconLeave from '../../../svgs/icon-leave.svg';\nimport IconMembers from '../../../svgs/icon-members.svg';\nimport IconMessage from '../../../svgs/icon-message.svg';\nimport IconModerations from '../../../svgs/icon-moderations.svg';\nimport IconMore from '../../../svgs/icon-more.svg';\nimport IconMute from '../../../svgs/icon-mute.svg';\nimport IconNotifications from '../../../svgs/icon-notifications.svg';\nimport IconNotificationsOffFilled from '../../../svgs/icon-notifications-off-filled.svg';\nimport IconOperator from '../../../svgs/icon-operator.svg';\nimport IconPhoto from '../../../svgs/icon-photo.svg';\nimport IconPlay from '../../../svgs/icon-play.svg';\nimport IconPlus from '../../../svgs/icon-plus.svg';\nimport IconQuestion from '../../../svgs/icon-question.svg';\nimport IconRefresh from '../../../svgs/icon-refresh.svg';\nimport IconRemove from '../../../svgs/icon-remove.svg';\nimport IconReply from '../../../svgs/icon-reply-filled.svg';\nimport IconSearch from '../../../svgs/icon-search.svg';\nimport IconSend from '../../../svgs/icon-send.svg';\nimport IconSettingsFilled from '../../../svgs/icon-settings-filled.svg';\nimport IconSpinner from '../../../svgs/icon-spinner.svg';\nimport IconSupergroup from '../../../svgs/icon-supergroup.svg';\nimport IconThumbnailNone from '../../../svgs/icon-thumbnail-none.svg';\nimport IconToggleOff from '../../../svgs/icon-toggleoff.svg';\nimport IconToggleOn from '../../../svgs/icon-toggleon.svg';\nimport IconUser from '../../../svgs/icon-user.svg';\nimport RoguIconMsgFailed from '../../../svgs/rogu-icon-msg-failed.svg';\nimport RoguIconMsgPending from '../../../svgs/rogu-icon-msg-pending.svg';\nimport RoguIconMsgSent from '../../../svgs/rogu-icon-msg-sent.svg';\nimport RoguIconMsgReadAll from '../../../svgs/rogu-icon-msg-read-all.svg';\nimport RoguIconMsgCopy from '../../../svgs/rogu-icon-copy.svg';\nimport RoguIconMsgReply from '../../../svgs/rogu-icon-reply.svg';\nimport RoguIconMsgResend from '../../../svgs/rogu-icon-resend.svg';\nimport RoguIconClose from '../../../svgs/rogu-icon-close.svg';\nimport RoguIconDownload from '../../../svgs/rogu-icon-download.svg';\nimport RoguIconDelete from '../../../svgs/rogu-icon-delete.svg';\nimport RoguIconAssignment from '../../../svgs/rogu-icon-assignment.svg';\nimport RoguIconMaterial from '../../../svgs/rogu-icon-material.svg';\n\nconst Colors = {\n  DEFAULT: 'DEFAULT',\n  PRIMARY: 'PRIMARY',\n  SECONDARY: 'SECONDARY',\n  CONTENT: 'CONTENT',\n  CONTENT_INVERSE: 'CONTENT_INVERSE',\n  WHITE: 'WHITE',\n  SENT: 'SENT',\n  READ: 'READ',\n  ON_BACKGROUND_1: 'ON_BACKGROUND_1',\n  ON_BACKGROUND_2: 'ON_BACKGROUND_2',\n  ON_BACKGROUND_3: 'ON_BACKGROUND_3',\n  BACKGROUND_3: 'BACKGROUND_3',\n  ERROR: 'ERROR',\n};\n\nfunction changeColorToClassName(color) {\n  switch (color) {\n    case Colors.PRIMARY: return 'sendbird-icon-color--primary';\n    case Colors.SECONDARY: return 'sendbird-icon-color--secondary';\n    case Colors.CONTENT: return 'sendbird-icon-color--content';\n    case Colors.CONTENT_INVERSE: return 'sendbird-icon-color--content-inverse';\n    case Colors.WHITE: return 'sendbird-icon-color--white';\n    case Colors.SENT: return 'sendbird-icon-color--sent';\n    case Colors.READ: return 'sendbird-icon-color--read';\n    case Colors.ON_BACKGROUND_1: return 'sendbird-icon-color--on-background-1';\n    case Colors.ON_BACKGROUND_2: return 'sendbird-icon-color--on-background-2';\n    case Colors.ON_BACKGROUND_3: return 'sendbird-icon-color--on-background-3';\n    case Colors.BACKGROUND_3: return 'sendbird-icon-color--background-3';\n    case Colors.ERROR: return 'sendbird-icon-color--error';\n    default: return '';\n  }\n}\n\nfunction changeTypeToIconComponent(type) {\n  switch (type) {\n    case Type.ADD: return <IconAdd />;\n    case Type.ARROW_LEFT: return <IconArrowLeft />;\n    case Type.ATTACH: return <IconAttach />;\n    case Type.BAN: return <IconBan />;\n    case Type.BROADCAST: return <IconBroadcast />;\n    case Type.CAMERA: return <IconCamera />;\n    case Type.CHANNELS: return <IconChannels />;\n    case Type.CHAT: return <IconChat />;\n    case Type.CHAT_FILLED: return <IconChatFilled />;\n    case Type.CHEVRON_DOWN: return <IconChevronDown />;\n    case Type.CHEVRON_RIGHT: return <IconChevronRight />;\n    case Type.CLOSE: return <IconClose />;\n    case Type.COLLAPSE: return <IconCollapse />;\n    case Type.COPY: return <IconCopy />;\n    case Type.CREATE: return <IconCreate />;\n    case Type.DELETE: return <IconDelete />;\n    case Type.DISCONNECTED: return <IconDisconnected />;\n    case Type.DOCUMENT: return <IconDocument />;\n    case Type.DONE: return <IconDone />;\n    case Type.DONE_ALL: return <IconDoneAll />;\n    case Type.DOWNLOAD: return <IconDownload />;\n    case Type.EDIT: return <IconEdit />;\n    case Type.EMOJI_MORE: return <IconEmojiMore />;\n    case Type.ERROR: return <IconError />;\n    case Type.EXPAND: return <IconExpand />;\n    case Type.FILE_AUDIO: return <IconFileAudio />;\n    case Type.FILE_DOCUMENT: return <IconFileDocument />;\n    case Type.FREEZE: return <IconFreeze />;\n    case Type.GIF: return <IconGif />;\n    case Type.INFO: return <IconInfo />;\n    case Type.LEAVE: return <IconLeave />;\n    case Type.MEMBERS: return <IconMembers />;\n    case Type.MESSAGE: return <IconMessage />;\n    case Type.MODERATIONS: return <IconModerations />;\n    case Type.MORE: return <IconMore />;\n    case Type.MUTE: return <IconMute />;\n    case Type.NOTIFICATIONS: return <IconNotifications />;\n    case Type.NOTIFICATIONS_OFF_FILLED: return <IconNotificationsOffFilled />;\n    case Type.OPERATOR: return <IconOperator />;\n    case Type.PHOTO: return <IconPhoto />;\n    case Type.PLAY: return <IconPlay />;\n    case Type.PLUS: return <IconPlus />;\n    case Type.QUESTION: return <IconQuestion />;\n    case Type.REFRESH: return <IconRefresh />;\n    case Type.REMOVE: return <IconRemove />;\n    case Type.REPLY: return <IconReply />;\n    case Type.SEARCH: return <IconSearch />;\n    case Type.SEND: return <IconSend />;\n    case Type.SETTINGS_FILLED: return <IconSettingsFilled />;\n    case Type.SPINNER: return <IconSpinner />;\n    case Type.SUPERGROUP: return <IconSupergroup />;\n    case Type.THUMBNAIL_NONE: return <IconThumbnailNone />;\n    case Type.TOGGLE_OFF: return <IconToggleOff />;\n    case Type.TOGGLE_ON: return <IconToggleOn />;\n    case Type.USER: return <IconUser />;\n    case Type.ROGU_PENDING: return <RoguIconMsgPending />;\n    case Type.ROGU_SENT: return <RoguIconMsgSent />;\n    case Type.ROGU_READ_ALL: return <RoguIconMsgReadAll />;\n    case Type.ROGU_ERROR: return <RoguIconMsgFailed />;\n    case Type.ROGU_COPY: return <RoguIconMsgCopy />;\n    case Type.ROGU_REPLY: return <RoguIconMsgReply />;\n    case Type.ROGU_RESEND: return <RoguIconMsgResend />;\n    case Type.ROGU_CLOSE: return <RoguIconClose />;\n    case Type.ROGU_DOWNLOAD: return <RoguIconDownload />;\n    case Type.ROGU_DELETE: return <RoguIconDelete />;\n    case Type.ROGU_ASSIGNMENT: return <RoguIconAssignment />;\n    case Type.ROGU_MATERIAL: return <RoguIconMaterial />;\n    default: return 'icon'; // If you see this text 'icon' replace icon for it\n  }\n}\n\nexport default function Icon({\n  className,\n  type,\n  fillColor,\n  width,\n  height,\n  onClick,\n  children,\n}) {\n  const iconStyle = {\n    width: typeof width === 'string' ? width : `${width}px`,\n    minWidth: typeof width === 'string' ? width : `${width}px`,\n    height: typeof height === 'string' ? height : `${height}px`,\n    minHeight: typeof height === 'string' ? height : `${height}px`,\n  };\n  return (\n    <div\n      className={[\n        ...Array.isArray(className) ? className : [className],\n        'sendbird-icon',\n        changeColorToClassName(fillColor),\n      ].join(' ')}\n      role=\"button\"\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex=\"0\"\n      style={iconStyle}\n    >\n      {children || changeTypeToIconComponent(type)}\n    </div>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  type: PropTypes.oneOfType([\n    PropTypes.oneOf(Object.keys(Type)),\n    PropTypes.string,\n  ]).isRequired,\n  fillColor: PropTypes.oneOf(Object.keys(Colors)),\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onClick: PropTypes.func,\n  children: PropTypes.element,\n};\n\nIcon.defaultProps = {\n  className: '',\n  fillColor: Colors.DEFAULT,\n  width: 26,\n  height: 26,\n  onClick: () => { },\n  children: null,\n};\n\nexport const IconTypes = Type;\nexport const IconColors = Colors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nimport {\n  getMessageCreatedAt,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../../utils';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  status,\n}) {\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.ROGU_SENT,\n    [MessageStatusTypes.DELIVERED]: IconTypes.ROGU_SENT,\n    [MessageStatusTypes.READ]: IconTypes.ROGU_READ_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ROGU_ERROR,\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'rogu-message-status',\n      ].join(' ')}\n    >\n      {isSentStatus(status) && (\n        <Label\n          className=\"rogu-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {getMessageCreatedAt(message)}\n        </Label>\n      )}\n      {(status === MessageStatusTypes.PENDING)\n        ? (\n          <div className=\"rogu-flex\">\n            <Label\n              className=\"rogu-message-status__text\"\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              Mengirim\n            </Label>\n            <Icon\n              className=\"rogu-message-status__icon\"\n              type={IconTypes.ROGU_PENDING}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </div>\n        )\n        : (\n          <div className=\"rogu-flex\">\n            {status === MessageStatusTypes.FAILED\n              && (\n              <Label\n                className=\"rogu-message-status__text\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                Gagal terkirim\n              </Label>\n              )}\n            <Icon\n              className=\"rogu-message-status__icon\"\n              type={iconType[status] || IconTypes.ERROR}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </div>\n        )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  status: PropTypes.string,\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  status: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport { changeColorToClassName, Colors } from '../../../utils/color';\n\nexport default function TextButton({\n  className,\n  color,\n  disabled,\n  underline,\n  onClick,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        changeColorToClassName(color),\n        'rogu-text-button',\n        underline ? 'rogu-text-button--no-underline' : '',\n        disabled ? 'rogu-text-button--disabled' : '',\n      ].join(' ')}\n      role=\"button\"\n      tabIndex={0}\n      onClick={onClick}\n      onKeyPress={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nTextButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  underline: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    .isRequired,\n};\n\nTextButton.defaultProps = {\n  className: '',\n  color: Colors.ONBACKGROUND_1,\n  disabled: false,\n  underline: false,\n  onClick: () => {},\n};\n","import React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  ReactElement,\n} from \"react\";\n\nimport TextButton from \"../TextButton\";\nimport Label, { LabelTypography, LabelColors } from \"../Label\";\nimport { getClassName } from \"../../../utils\";\nimport { LocalizationContext } from \"../../../lib/LocalizationContext\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: string;\n  viewerCaptionMode?: boolean;\n  isHidden?: boolean;\n}\n\ntype ClampType = \"init\" | \"clamped\" | \"expanded\";\n\nexport default function TextMessageItemBody({\n  className,\n  isByMe = false,\n  message,\n  viewerCaptionMode = false,\n  isHidden = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [clampState, setClampState] = useState<ClampType>(\"init\");\n  const textRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (\n      textRef.current &&\n      textRef.current.scrollHeight > textRef.current.clientHeight\n    ) {\n      setClampState(\"clamped\");\n    }\n  }, [textRef.current]);\n\n  function handleExpand() {\n    setClampState(\"expanded\");\n  }\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        \"rogu-text-message-item-body\",\n        clampState == \"expanded\" ? \"rogu-text-message-item-body--expanded\" : \"\",\n        !isByMe ? \"rogu-text-message-item-body--incoming\" : \"\",\n        viewerCaptionMode ? \"viewer-mode\" : \"\",\n        viewerCaptionMode && isHidden ? 'hidden' : '',\n      ])}\n    >\n      <div ref={textRef} className=\"rogu-text-message-item-body__inner\">\n        {message?.split(/\\r/).map((word, i) =>\n          word === \"\" ? (\n            <br key={i} />\n          ) : (\n            <Label\n              className=\"rogu-text-message-item-body__message\"\n              color={LabelColors.ONBACKGROUND_1}\n              key={i}\n              type={LabelTypography.BODY_1}\n            >\n              {word}\n            </Label>\n          )\n        )}\n      </div>\n\n      {clampState === \"clamped\" && (\n        <TextButton\n          className=\"rogu-text-message-item-body__read-more\"\n          onClick={handleExpand}\n        >\n          <Label>{stringSet.BUTTON__READ_MORE}</Label>\n        </TextButton>\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport LinkLabel from '../../../ui/LinkLabel';\nimport ImageRenderer from '../../../ui/ImageRenderer';\n\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../../utils';\nimport uuidv4 from '../../../utils/uuid';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes } from '../Icon';\n\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'rogu-og-message-item-body',\n      isByMe ? 'rogu-og-message--outgoing' : 'rogu-og-message--incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'rogu-og-message-reactions' : '',\n    ])}>\n\n      <div className=\"rogu-og-message-item-body__og-container\" onClick={openOGUrl}>\n        <div\n          className=\"rogu-og-message-item-body__og-thumbnail\"          \n        >\n          <ImageRenderer\n            className=\"rogu-og-message-item-body__og-thumbnail__image\"\n            url={message?.ogMetaData?.defaultImage?.url || ''}\n            alt={message?.ogMetaData?.defaultImage?.alt}\n            width=\"60px\"\n            height=\"60px\"\n            defaultComponent={(\n              <div className=\"rogu-og-message-item-body__og-thumbnail__place-holder\">\n                <Icon\n                  className=\"rogu-og-message-item-body__og-thumbnail__place-holder__icon\"\n                  type={IconTypes.THUMBNAIL_NONE}\n                  width=\"60px\"\n                  height=\"60px\"\n                />\n              </div>\n            )}\n          />\n        </div>\n        <div\n          className=\"rogu-og-message-item-body__description\"          \n        >\n          {message?.ogMetaData?.title && (\n            <Label\n              className=\"rogu-og-message-item-body__description__title\"\n              type={LabelTypography.SUBTITLE_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {message.ogMetaData.title}\n            </Label>\n          )}\n          {message?.ogMetaData?.description && (\n            <Label\n              className=\"rogu-og-message-item-body__description__description\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {message.ogMetaData.description}\n            </Label>\n          )}\n          {message?.ogMetaData?.url && (\n            <Label\n              className=\"rogu-og-message-item-body__description__url\"\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {message.ogMetaData.url}\n            </Label>\n          )}\n        </div>\n\n      </div>\n      \n      \n      \n      <div className=\"rogu-og-message-item-body__text-bubble\">\n        {\n          message?.message.split(' ').map((word: string) => (\n            isUrl(word)\n              ? (\n                <LinkLabel\n                  className=\"rogu-og-message-item-body__text-bubble__message\"\n                  key={uuidv4()}\n                  src={word}\n                  type={LabelTypography.BODY_1}\n                  color={isByMe ? LabelColors.ONBACKGROUND_1 : LabelColors.SECONDARY_3}\n                >\n                  {word}\n                </LinkLabel>\n              )\n              : (\n                <Label\n                  className=\"rogu-og-message-item-body__text-bubble__message\"\n                  key={uuidv4()}\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {word + ' '}\n                </Label>\n              )\n          ))\n        }\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"rogu-og-message-item-body__text-bubble__message\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </div>\n      <div className=\"rogu-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes } from '../Icon';\nimport {\n  getClassName,\n} from '../../../utils';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport {convertCtaLinkToWebLink, convertAssignmentDueUTCtoLocale} from '../../utils';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function AssignmentMessageItemBody({\n  className,\n  message,\n  isByMe,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const assignmentData = JSON.parse(message?.data);\n\n  const openAssignment = (): void => {\n    if (assignmentData?.ctaWeb && assignmentData?.ctaWeb.length > 0){\n      window.open(assignmentData?.ctaWeb);\n    } else{\n      window.open(convertCtaLinkToWebLink(assignmentData?.cta, \"assignment\"));\n    }\n  };\n \n\n  return (\n    <div \n    className={getClassName([\n      className,\n      'rogu-assignment-message-item-body',\n      isByMe ? 'rogu-assignment-message-item-body--outgoing' : 'rogu-assignment-message-item-body--incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className=\"rogu-assignment-message-item-body__container\"\n        onClick={openAssignment}\n        onKeyPress={openAssignment}>\n        <Icon\n            className=\"rogu-assignment-message-item-body__icon\"\n            type={IconTypes.ROGU_ASSIGNMENT}\n            width=\"30\"\n            height=\"30\"\n          />\n        <div className=\"rogu-assignment-message-item-body__text-container\">\n          <Label className=\"rogu-assignment-message-item-body__text-title\" color={LabelColors.ONBACKGROUND_1} type={LabelTypography.SUBTITLE_2}>\n            {assignmentData?.title}\n          </Label>\n          <div>\n            <Label color={LabelColors.ONBACKGROUND_2} type={LabelTypography.BODY_2}>\n              {stringSet.ASSIGNMENT}\n            </Label>\n            \n            {\n              assignmentData?.dueAt && assignmentData?.dueAt.length > 0 && <Label className=\"rogu-assignment-message-item-body__text-deadline\" color={LabelColors.ONBACKGROUND_2} type={LabelTypography.BODY_2}>\n                \n              {stringSet.ASSIGNMENT_DEADLINE + \" \"+ convertAssignmentDueUTCtoLocale(assignmentData?.dueAt)}\n             \n            </Label>\n            }\n          </div>\n        </div>\n      </div>\n     \n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from \"react\";\nimport { UserMessage } from \"sendbird\";\nimport \"./index.scss\";\n\nimport Label, { LabelTypography, LabelColors } from \"../Label\";\nimport { getClassName } from \"../../../utils\";\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Icon, { IconTypes } from '../Icon';\nimport { convertCtaLinkToWebLink } from \"../../utils\";\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n}\n\nexport default function MaterialMessageItemBody({\n  className,\n  message,\n  isByMe,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const materialData = JSON.parse(message?.data);\n\n  const openMaterial = (): void => {\n    if (materialData?.ctaWeb && materialData?.ctaWeb.length > 0){\n      window.open(materialData?.ctaWeb);\n    } else{\n      window.open(convertCtaLinkToWebLink(materialData?.cta, \"material\"));\n    }\n  };\n  return (\n    <div className={getClassName([\n      className, \n      \"rogu-material-message-item-body\", \n      isByMe ? 'rogu-material-message-item-body--outgoing' : 'rogu-material-message-item-body--incoming', \n      message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n      <div\n        className=\"rogu-material-message-item-body__container\"\n        onClick={openMaterial}>\n        <Icon\n            className=\"rogu-material-message-item-body__icon\"\n            type={IconTypes.ROGU_MATERIAL}\n            width=\"30\"\n            height=\"30\"\n          />\n        <div className=\"rogu-material-message-item-body__text-container\">\n          <Label className=\"rogu-material-message-item-body__text-title\" color={LabelColors.ONBACKGROUND_1} type={LabelTypography.SUBTITLE_2}>\n            {materialData?.title}\n          </Label>\n          <Label color={LabelColors.ONBACKGROUND_2} type={LabelTypography.BODY_2}>\n            {stringSet.MATERIAL}\n          </Label>  \n        </div>\n      </div>\n    </div>\n  );\n}\n","const colorSet = {\n  \"#DF4141\": [\"A\", \"B\", \"C\", \"D\"],\n  \"#61CE5E\": [\"E\", \"F\", \"G\", \"H\"],\n  \"#6073E2\": [\"I\", \"J\", \"K\", \"L\"],\n  \"#F89825\": [\"M\", \"N\", \"O\", \"P\"],\n  \"#2EB5C0\": [\"Q\", \"R\", \"S\", \"T\"],\n  \"#BB58D0\": [\"U\", \"V\", \"W\", \"X\"],\n  \"#00A5FF\": [\"Y\", \"Z\"],\n};\n\nexport const generateColorFromString = (str: string): string => {\n  const firstChar = str[0] || \"\";\n  const normalizedFirstChar = firstChar.toUpperCase();\n\n  let color = \"inherit\";\n  for (const [hex, chars] of Object.entries(colorSet)) {\n    if (chars.includes(normalizedFirstChar)) {\n      color = hex;\n      break;\n    }\n  }\n\n  return color;\n};\n\nexport default generateColorFromString;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport default class MenuItems extends Component {\n  constructor(props) {\n    super(props);\n    this.menuRef = React.createRef();\n    this.state = {\n      menuStyle: {},\n      handleClickOutside: () => { },\n    };\n  }\n\n  componentDidMount() {\n    this.setupEvents();\n    this.getMenuPosition();\n    this.showParent();\n  }\n\n  componentWillUnmount() {\n    this.cleanUpEvents();\n    this.hideParent();\n  }\n\n  showParent = () => {\n    const { parentContainRef = {} } = this.props;\n    const { current } = parentContainRef;\n    if (parentContainRef && current) {\n      current.classList.add('sendbird-icon--pressed');\n    }\n  }\n\n  hideParent = () => {\n    const { parentContainRef = {} } = this.props;\n    const { current } = parentContainRef;\n    if (parentContainRef && current) {\n      current.classList.remove('sendbird-icon--pressed');\n    }\n  }\n\n  setupEvents = () => {\n    const { closeDropdown } = this.props;\n    const { menuRef } = this;\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeDropdown();\n      }\n    };\n    this.setState({\n      handleClickOutside,\n    });\n\n    document.addEventListener('mousedown', handleClickOutside);\n  }\n\n  cleanUpEvents = () => {\n    const {\n      handleClickOutside,\n    } = this.state;\n    document.removeEventListener('mousedown', handleClickOutside);\n  }\n\n  getMenuPosition = () => {\n    const { parentRef, openLeft } = this.props;\n    const parentRect = parentRef.current.getBoundingClientRect();\n    const x = parentRect.x || parentRect.left;\n    const y = parentRect.y || parentRect.top;\n    const menuStyle = {\n      top: y,\n      left: x,\n    };\n\n    if (!this.menuRef.current) return menuStyle;\n\n    const { innerWidth, innerHeight } = window;\n    const rect = this.menuRef.current.getBoundingClientRect();\n    if (y + rect.height > innerHeight) {\n      menuStyle.top -= rect.height;\n    }\n\n    if (x + rect.width > innerWidth && !openLeft) {\n      menuStyle.left -= rect.width;\n    }\n\n    if (menuStyle.top < 0) {\n      menuStyle.top = rect.height < innerHeight ? (innerHeight - rect.height) / 2 : 0;\n    }\n\n    if (menuStyle.left < 0) {\n      menuStyle.left = rect.width < innerWidth ? (innerWidth - rect.width) / 2 : 0;\n    }\n\n    menuStyle.top += 32;\n    if (openLeft) {\n      const padding = Number.isNaN(rect.width - 30)\n        ? 108 // default\n        : rect.width - 30;\n      menuStyle.left -= padding;\n    }\n\n    return this.setState({ menuStyle });\n  }\n\n  render() {\n    const { menuStyle } = this.state;\n    const { children, style } = this.props;\n    return (\n      createPortal(\n        (\n          <>\n            <div className=\"rogu-dropdown__menu-backdrop\" />\n            <ul\n              className=\"rogu-dropdown__menu\"\n              ref={this.menuRef}\n              style={{\n                display: 'inline-block',\n                position: 'fixed',\n                left: `${Math.round(menuStyle.left)}px`,\n                top: `${Math.round(menuStyle.top)}px`,\n                ...style,\n              }}\n            >\n              {children}\n            </ul>\n          </>\n        ),\n        document.getElementById('sendbird-dropdown-portal'),\n      )\n    );\n  }\n}\nMenuItems.propTypes = {\n  closeDropdown: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]).isRequired,\n  style: PropTypes.shape({}),\n  // https://stackoverflow.com/a/51127130\n  parentRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  parentContainRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  openLeft: PropTypes.bool,\n};\nMenuItems.defaultProps = {\n  style: {},\n  openLeft: false,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { getClassName } from '../../../utils';\n\nimport MenuItems_ from './items/MenuItems';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nconst ENTER = 13;\n\nexport const MenuItems = MenuItems_;\n\nexport const MenuItem = ({\n  className,\n  children,\n  onClick,\n  disable,\n  iconType,\n}) => {\n  const handleClickEvent = (e) => { if (!disable) onClick(e); };\n  return (\n    <li\n      className={getClassName([className, 'rogu-dropdown__menu-item', disable ? 'disable' : ''])}\n      role=\"menuitem\"\n      onClick={handleClickEvent}\n      onKeyPress={(e) => { if (e.keyCode === ENTER) handleClickEvent(e); }}\n      tabIndex={0}\n    >\n      <Icon\n        className=\"rogu-dropdown__menu-item-icon\"\n        type={iconType}\n        fillColor={disable ? IconColors.ON_BACKGROUND_3 : IconColors.ON_BACKGROUND_1}\n        width=\"18px\"\n        height=\"18px\"\n      />\n      <Label\n        className=\"rogu-dropdown__menu-item__text\"\n        type={LabelTypography.BUTTON_2}\n        color={disable ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1}\n      >\n        {children}\n      </Label>\n    </li>\n  );\n};\n\nMenuItem.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  disable: PropTypes.func,\n  iconType: IconTypes,\n};\n\nMenuItem.defaultProps = {\n  className: '',\n  disable: false,\n  iconType: IconTypes.ADD,\n};\n\n// Root components should be appended before ContextMenu is rendered\nexport const MenuRoot = () => (\n  <div id=\"sendbird-dropdown-portal\" />\n);\nexport const EmojiReactionListRoot = () => (\n  <div id=\"sendbird-emoji-list-portal\" />\n);\n\nexport default function ContextMenu({ menuTrigger, menuItems }) {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className=\"sendbird-context-menu\" style={{ display: 'inline' }}>\n      {menuTrigger(() => setShowMenu(!showMenu))}\n      {showMenu && menuItems(() => setShowMenu(false))}\n    </div>\n  );\n}\n\nContextMenu.propTypes = {\n  menuTrigger: PropTypes.func.isRequired,\n  menuItems: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Toast({ message }) {\n  return createPortal(\n    (\n      <div className=\"rogu-fileviewer__toast__message show\">\n        <Label\n          type={LabelTypography.BODY_3}\n          color={LabelColors.ONBACKGROUND_5}\n        >\n          {message}\n        </Label>\n      </div>\n    ),\n    document.getElementById('rogu-toast-root'),\n  );\n}\n\nToast.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { ReactElement, useContext, useRef, useState } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\n\nimport IconButton from '../../../ui/IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isThumbnailMessage\n} from '../../../utils';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, {MenuItems, MenuItem} from '../ContextMenu';\nimport Toast from '../Toast';\n\nimport \"./index.scss\";\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe,\n  disabled,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setSupposedHover,\n  showFileViewer,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [showToast, setShowToast] = useState(false);\n\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message.isResendable() && isByMe);\n  const showMenuItemDelete: boolean = (isSentMessage(channel, message) && isByMe);\n  {/* hide menu edit */}\n  const showMenuItemEdit: boolean =false && (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n\n  {/* show menu view on image or video */}\n  const showMenuItemView:boolean = isThumbnailMessage(message as FileMessage);\n\n  if (!(showMenuItemCopy || showMenuItemEdit || showMenuItemResend || showMenuItemDelete || showMenuItemView)) {\n    return null;\n  }\n\n  const onCopyClick = (message:string) => {\n    copyToClipboard(message);\n    setShowToast(true);\n    setTimeout(() => {\n      setShowToast(false);\n    }, 3000);\n  };\n\n  return (\n    <div\n      className={getClassName([className, 'rogu-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"rogu-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"16px\"\n            height=\"16px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"rogu-message-item-menu__trigger__icon\"\n              type={IconTypes.CHEVRON_DOWN}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"rogu-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    // TODO: Add replying message logic\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                  iconType={IconTypes.ROGU_REPLY}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    onCopyClick((message as UserMessage)?.message);                    \n                    closeDropdown();\n                  }}\n                  iconType={IconTypes.ROGU_COPY}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemView && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    showFileViewer(true);\n                    closeDropdown();\n                    \n                  }}\n                  iconType={IconTypes.DOWNLOAD}\n                >\n                  {stringSet.MESSAGE_MENU__VIEW}\n                </MenuItem>\n              )}\n              \n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                  iconType={IconTypes.ROGU_RESEND}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"rogu-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                  iconType={IconTypes.ROGU_DELETE}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n      {showToast && (\n        <Toast message={stringSet.TOAST__COPY} />\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement, useRef, useContext } from \"react\";\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage } from \"sendbird\";\nimport Label, { LabelTypography, LabelColors } from \"../Label\";\nimport MessageStatus from \"../MessageStatus\";\nimport TextMessageItemBody from \"../TextMessageItemBody\";\nimport OGMessageItemBody from \"../OGMessageItemBody\";\n\nimport Avatar from \"../../../ui/Avatar\";\nimport ClientAdminMessage from \"../../../ui/AdminMessage\";\nimport FileMessageItemBody from \"../../../ui/FileMessageItemBody\";\nimport ThumbnailMessageItemBody from \"../../../ui/ThumbnailMessageItemBody\";\nimport UnknownMessageItemBody from \"../../../ui/UnknownMessageItemBody\";\n\nimport { LocalizationContext } from \"../../../lib/LocalizationContext\";\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  isMessageSentByMe,\n  isMessageSentByOperator,\n  getOutgoingMessageState,\n  getSenderName,\n  getMessageCreatedAt,\n  isSentMessage,\n  isPendingMessage,\n  CoreMessageType,\n} from \"../../../utils\";\n\nimport {isAssignmentMessage, isMaterialMessage} from '../../utils';\nimport AssignmentMessageItemBody from \"../AssignmentMessageItemBody\";\nimport MaterialMessageItemBody from \"../MaterialMessageItemBody\";\nimport { generateColorFromString } from \"./utils\";\nimport \"./index.scss\";\n\nimport MessageItemMenu from \"../MessageItemMenu\";\n\ninterface Props {\n  chainBottom?: boolean;\n  chainTop?: boolean;\n  channel: GroupChannel;\n  className?: string | Array<string>;\n  message: AdminMessage | UserMessage | FileMessage;\n  nicknamesMap?: Map<string, string>;\n  userId: string;\n  useReplying?: boolean;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  toggleReaction?: (\n    message: UserMessage | FileMessage,\n    reactionKey: string,\n    isReacted: boolean\n  ) => void;\n  disabled?: boolean;\n}\n\nexport default function MessageContent({\n  channel,\n  chainBottom = false,\n  chainTop = false,\n  className,\n  message,\n  // nicknamesMap,\n  userId,\n  // useReaction = false,\n  // useReplying,\n  // scrollToMessage,\n  showEdit,\n  showFileViewer,\n  showRemove,\n  resendMessage,\n  disabled=false,\n}: // showRemove,\n// toggleReaction,\nProps): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const messageTypes = getUIKitMessageTypes();\n  const avatarRef = useRef(null);\n\n\n  const isByMe: boolean =\n    isPendingMessage(channel, message as UserMessage | FileMessage) ||\n    !isSentMessage(channel, message as UserMessage | FileMessage) ||\n    isMessageSentByMe(userId, message as UserMessage | FileMessage);\n  const isOperatorMessage: boolean = isMessageSentByOperator(\n    message as CoreMessageType\n  );\n\n  const isByMeClassName = isByMe\n    ? \"rogu-message-content--outgoing\"\n    : \"rogu-message-content--incoming\";\n  const chainBottomClassName = chainBottom\n    ? \"rogu-message-content--chain-bottom\"\n    : \"\";\n  const chainTopClassName = chainTop ? \"rogu-message-content--chain-top\" : \"\";\n\n  if (message?.isAdminMessage?.() || message?.messageType === \"admin\") {\n    return <ClientAdminMessage message={message} />;\n  }\n\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        \"rogu-message-content\",\n        isByMeClassName,\n        chainBottomClassName,\n        chainTopClassName,\n      ])}\n    >      \n      {/* Profile picture */}\n      {!isByMe && !chainTop && (\n        <Avatar\n          className=\"rogu-message-content__avatar\"\n          src={message?.sender?.profileUrl || \"\"}\n          ref={avatarRef}\n          height=\"2rem\"\n          width=\"2rem\"\n        />\n      )}\n\n      <div className=\"rogu-message-content__content\">\n        {/* Bubble wrapper */}\n        <div className=\"rogu-message-content__bubble\">\n          <div className=\"rogu-message-content__bubble__header\">\n            {/* Sender's name */}\n            {!isByMe && !chainTop && (\n            <>\n              <Label\n                className=\"rogu-message-content__sender-name\"\n                color={LabelColors.ONBACKGROUND_2}\n                style={{\n                  color: generateColorFromString(\n                    message?.sender?.nickname || \"\"\n                  ),\n                }}\n                type={LabelTypography.CAPTION_1}\n              >\n                {getSenderName(message)}                \n              </Label>\n              {/* Teacher label */}\n              {isOperatorMessage && !chainTop && (\n                <Label\n                  className=\"rogu-message-content__operator-label\"\n                  type={LabelTypography.CAPTION_3}\n                >\n                  {stringSet.LABEL__OPERATOR}\n                </Label>\n              )}\n\n              <MessageItemMenu\n              className=\"rogu-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              showFileViewer={showFileViewer}/>\n            </>\n            )}\n          </div>\n\n          <div className=\"rogu-message-content__bubble__body\">\n            <div className=\"rogu-message-content__buble__body-text\">\n            {/* Message content */}\n            {isTextMessage(message as UserMessage) && (\n              <TextMessageItemBody\n                isByMe={isByMe}\n                message={message?.message}\n              />\n            )}\n            {isOGMessage(message as UserMessage) && (\n              <OGMessageItemBody\n                message={message as UserMessage}\n                isByMe={isByMe}\n              />\n            )}\n            {\n              isAssignmentMessage(message.customType) && (\n                <AssignmentMessageItemBody message={message as UserMessage} isByMe={isByMe} />\n              )\n            }\n            {\n              isMaterialMessage(message.customType) && (\n                <MaterialMessageItemBody message={message as UserMessage} isByMe={isByMe} />\n              )\n            }\n            {getUIKitMessageType(message as FileMessage) ===\n              messageTypes.FILE && (\n              <FileMessageItemBody\n                message={message as FileMessage}\n                isByMe={isByMe}\n              />\n            )}\n            {isThumbnailMessage(message as FileMessage) && (\n              <ThumbnailMessageItemBody\n                message={message as FileMessage}\n                isByMe={isByMe}\n                showFileViewer={showFileViewer}\n              />\n            )}\n            {getUIKitMessageType(message as FileMessage) ===\n              messageTypes.UNKNOWN && (\n              <UnknownMessageItemBody message={message} isByMe={isByMe} />\n            )}\n            </div>\n            {\n              ((!isByMe && chainTop) || isByMe) && (\n                <MessageItemMenu\n                  className=\"rogu-message-content-menu__normal-menu\"\n                  channel={channel}\n                  message={message as UserMessage | FileMessage}\n                  isByMe={isByMe}\n                  disabled={disabled}\n                  showEdit={showEdit}\n                  showRemove={showRemove}\n                  resendMessage={resendMessage}\n                  showFileViewer={showFileViewer}/>\n\n              )\n            }\n            \n\n          </div>\n          \n          \n        </div>\n\n        {/* Message status */}\n        {!chainBottom && (\n          <div className={\"rogu-message-content__misc\"}>\n            {isByMe ? (\n              <MessageStatus\n                message={message}\n                status={getOutgoingMessageState(channel, message)}\n              />\n            ) : (\n              <Label\n                className={\"rogu-message-content__created-at\"}\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {getMessageCreatedAt(message)}\n              </Label>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  useState, useRef, useEffect, useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport IconButton from '../../../ui/IconButton';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport { getClassName } from '../../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst LINE_HEIGHT = 36;\nconst noop = () => {};\nconst KeyCode = {\n  SHIFT: 16,\n  ENTER: 13,\n};\n\nconst handleUploadFile = (callback) => (event) => {\n  if (event.target.files && event.target.files[0]) {\n    callback(event.target.files[0]);\n  }\n  // eslint-disable-next-line no-param-reassign\n  event.target.value = '';\n};\n\nconst MessageInput = React.forwardRef((props, ref) => {\n  const {\n    isEdit,\n    disabled,\n    value,\n    name,\n    placeholder,\n    maxLength,\n    onFileUpload,\n    onSendMessage,\n    onCancelEdit,\n    onStartTyping,\n  } = props;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const fileInputRef = useRef(null);\n  const [inputValue, setInputValue] = useState(value);\n  const [isShiftPressed, setIsShiftPressed] = useState(false);\n\n  const setHeight = () => {\n    try {\n      const elem = ref.current;\n      const MAX_HEIGHT = window.document.body.offsetHeight * 0.6;\n      if (elem && elem.scrollHeight >= LINE_HEIGHT) {\n        if (MAX_HEIGHT < elem.scrollHeight) {\n          elem.style.height = 'auto';\n          elem.style.height = `${MAX_HEIGHT}px`;\n        } else {\n          elem.style.height = 'auto';\n          elem.style.height = `${elem.scrollHeight}px`;\n        }\n      } else {\n        elem.style.height = '';\n      }\n    } catch (error) {\n      // error\n    }\n  };\n\n  // after setHeight called twice, the textarea goes to the initialized\n  useEffect(() => {\n    setHeight();\n    return setHeight;\n  }, [inputValue]);\n\n  const sendMessage = () => {\n    if (inputValue && inputValue.trim().length > 0) {\n      const trimmedInputValue = inputValue.trim();\n      if (isEdit) {\n        onSendMessage(name, trimmedInputValue, () => {\n          onCancelEdit();\n        });\n      } else {\n        onSendMessage(trimmedInputValue);\n        setInputValue('');\n      }\n    }\n  };\n\n  return (\n    <form\n      className={[\n        isEdit ? 'rogu-message-input__edit' : '',\n        disabled ? 'rogu-message-input-form__disabled ' : '',\n      ].join(' rogu-message-input__container ')}\n    >\n      <div\n        className={[\n          'rogu-message-input',\n          disabled ? 'rogu-message-input__disabled' : '',\n        ].join(' ')}\n      >\n        <textarea\n          className=\"rogu-message-input--textarea\"\n          disabled={disabled}\n          ref={ref}\n          name={name}\n          value={inputValue}\n          maxLength={maxLength}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n            onStartTyping();\n          }}\n          onKeyDown={(e) => {\n            if (e.keyCode === KeyCode.SHIFT) {\n              setIsShiftPressed(true);\n            }\n            if (!isShiftPressed && e.keyCode === KeyCode.ENTER) {\n              e.preventDefault();\n              sendMessage();\n            }\n          }}\n          onKeyUp={(e) => {\n            if (e.keyCode === KeyCode.SHIFT) {\n              setIsShiftPressed(false);\n            }\n          }}\n        />\n        {/* placeholder */}\n        {!inputValue && (\n          <Label\n            className=\"rogu-message-input--placeholder\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {placeholder || stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER}\n          </Label>\n        )}\n        {/* send icon */}\n        {/* {\n          (!isEdit && inputValue && inputValue.trim().length > 0) && (\n            <IconButton\n              className=\"rogu-message-input--send\"\n              height=\"32px\"\n              width=\"32px\"\n              onClick={sendMessage}\n            >\n              <Icon\n                type={IconTypes.SEND}\n                fillColor={IconColors.PRIMARY}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </IconButton>\n          )\n        } */}\n        {/* upload icon */}\n        {!isEdit && (\n          <IconButton\n            className=\"rogu-message-input--attach\"\n            height=\"32px\"\n            width=\"32px\"\n            onClick={() => {\n              // todo: clear previous input\n              fileInputRef.current.click();\n            }}\n          >\n            <Icon\n              type={IconTypes.ATTACH}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"20px\"\n              height=\"20px\"\n            />\n            <input\n              className=\"rogu-message-input--attach-input\"\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleUploadFile(onFileUpload)}\n            />\n          </IconButton>\n        )}\n\n        {!isEdit && (\n          <IconButton\n            className={getClassName(['rogu-message-input--send', disabled ? 'rogu-message-input--send-disabled' : ''])}\n            height=\"36px\"\n            width=\"36px\"\n            onClick={sendMessage}\n          >\n            <Icon\n              type={IconTypes.SEND}\n              fillColor={IconColors.WHITE}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </IconButton>\n        )}\n      </div>\n      {/* Edit */}\n\n      {isEdit && (\n        <div className=\"rogu-message-input--edit-action\">\n          <Button\n            className=\"rogu-message-input--edit-action__cancel\"\n            type={ButtonTypes.SECONDARY}\n            size={ButtonSizes.SMALL}\n            onClick={onCancelEdit}\n          >\n            {stringSet.BUTTON__CANCEL}\n          </Button>\n          <Button\n            className=\"rogu-message-input--edit-action__save\"\n            type={ButtonTypes.PRIMARY}\n            size={ButtonSizes.SMALL}\n            onClick={() => {\n              if (inputValue) {\n                const trimmedInputValue = inputValue.trim();\n                onSendMessage(name, trimmedInputValue, () => {\n                  onCancelEdit();\n                });\n              }\n            }}\n          >\n            {stringSet.BUTTON__SAVE}\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n});\n\nMessageInput.propTypes = {\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  isEdit: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  maxLength: PropTypes.number,\n  onFileUpload: PropTypes.func,\n  onSendMessage: PropTypes.func,\n  onStartTyping: PropTypes.func,\n  onCancelEdit: PropTypes.func,\n};\n\nMessageInput.defaultProps = {\n  value: '',\n  onSendMessage: noop,\n  name: 'rogu-message-input',\n  isEdit: false,\n  disabled: false,\n  placeholder: '',\n  maxLength: 5000,\n  onFileUpload: noop,\n  onCancelEdit: noop,\n  onStartTyping: noop,\n};\n\nexport default MessageInput;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../../ui/Modal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\n/*\n  ImageRenderer displays image with url or source\n  it checks if the source exist with img tag first\n  if it exists onLoad is called, if not onError is called\n  and those properties switch img tag to real purposing element\n*/\n\n// TODO: Set up the official constant of width and height with DesignTeam\n\nexport default function ImageRenderer({\n  className,\n  url,\n  alt,\n  width,\n  height,\n  defaultComponent,\n  circle,\n  placeHolder, // a function returing JSX / (style) => Element\n}) {\n  const [showDefaultComponent, setShowDefaultComponent] = useState(false);\n  const [showPlaceHolder, setShowPlaceHolder] = useState(true);\n\n  const DefaultComponent = useMemo(() => {\n    if (typeof defaultComponent === 'function') {\n      return defaultComponent();\n    }\n    return defaultComponent;\n  }, [defaultComponent]);\n\n  const PlaceHolder = useMemo(() => {\n    if (placeHolder && typeof placeHolder === 'function') {\n      return placeHolder({\n        style: {\n          width: '100%',\n          minWidth: width,\n          maxWidth: '400px',\n          height,\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        },\n      });\n    }\n    return null;\n  }, [placeHolder]);\n\n  const HiddenImageLoader = useMemo(() => {\n    setShowDefaultComponent(false);\n    // reset the state when url is changed\n    return (\n      <img\n        className=\"sendbird-image-renderer__hidden-image-loader\"\n        src={url}\n        alt={alt}\n        onLoad={() => setShowPlaceHolder(false)}\n        onError={() => setShowDefaultComponent(true)}\n      />\n    );\n  }, [url]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-image-renderer',\n      ].join(' ')}\n      style={{\n        width: '100%',\n        minWidth: width,\n        maxWidth: '400px',\n        height,\n      }}\n    >\n      {showPlaceHolder && PlaceHolder}\n      {\n        showDefaultComponent\n          ? DefaultComponent\n          : (\n            <div\n              className=\"sendbird-image-renderer__image\"\n              style={{\n                width: '100%',\n                minWidth: width,\n                maxWidth: '400px',\n                height,\n                position: 'absolute',\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundImage: `url(${url})`,\n                borderRadius: circle ? '50%' : null,\n              }}\n            />\n          )\n      }\n      {HiddenImageLoader}\n    </div>\n  );\n}\n\nImageRenderer.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  defaultComponent: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  placeHolder: PropTypes.func,\n  circle: PropTypes.bool,\n};\nImageRenderer.defaultProps = {\n  className: '',\n  defaultComponent: null,\n  placeHolder: null,\n  alt: '',\n  width: null,\n  height: null,\n  circle: false,\n};\n","import React, { ReactElement } from 'react';\n\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\nimport { uuidv4 } from '../../../utils/uuid';\nimport pxToNumber from '../../../utils/pxToNumber';\n\nconst imageRendererClassName = 'sendbird-avatar-img';\n\ninterface DefaultComponentProps {\n  width: string | number,\n  height: string | number,\n}\n\nconst DefaultComponent = ({ width, height }: DefaultComponentProps): ReactElement => {\n  let iconWidth = pxToNumber(width);\n  let iconHeight = pxToNumber(height);\n  if (typeof iconWidth === 'number') {\n    iconWidth *= 0.575;\n  }\n  if (typeof iconHeight === 'number') {\n    iconHeight *= 0.575;\n  }\n\n  return (\n    <div className=\"sendbird-avatar-img--default\" style={{ width, height }}>\n      <Icon\n        type={IconTypes.USER}\n        fillColor={IconColors.CONTENT}\n        width={iconWidth}\n        height={iconHeight}\n      />\n    </div>\n  );\n};\n\nconst _defaultComponent = ({\n  width,\n  height,\n}: DefaultComponentProps) => (\n  <DefaultComponent width={width} height={height} />\n);\n\ninterface AvatarInnerProps {\n  height: string | number,\n  width: string | number,\n  src?: string | Array<string>,\n  alt?: string,\n  customDefaultComponent?({ width, height }: { width: number | string, height: number | string }): ReactElement;\n}\n\nexport const AvatarInner = ({\n  src = '',\n  alt = '',\n  height,\n  width,\n  customDefaultComponent,\n}: AvatarInnerProps): ReactElement => {\n  const defaultComponent = () => customDefaultComponent ? customDefaultComponent({ width, height }) : _defaultComponent({ width, height });\n\n  if (typeof src === 'string') {\n    return (\n      <ImageRenderer\n        className={imageRendererClassName}\n        url={src}\n        height={height}\n        width={width}\n        alt={alt}\n        defaultComponent={defaultComponent}\n      />\n    );\n  }\n\n  if (src && src.length) {\n    if (src.length === 1) {\n      return (\n        <ImageRenderer\n          className={imageRendererClassName}\n          url={src[0]}\n          height={height}\n          width={width}\n          alt={alt}\n          defaultComponent={defaultComponent}\n        />\n      );\n    }\n\n    if (src.length === 2) {\n      return (\n        <div className=\"sendbird-avatar--inner__two-child\">\n          <ImageRenderer\n            className={imageRendererClassName}\n            url={src[0]}\n            height={height}\n            width={width}\n            alt={alt}\n            defaultComponent={defaultComponent}\n          />\n          <ImageRenderer\n            className={imageRendererClassName}\n            url={src[1]}\n            height={height}\n            width={width}\n            alt={alt}\n            defaultComponent={defaultComponent}\n          />\n        </div>\n      );\n    }\n\n    if (src.length === 3) {\n      return (\n        <>\n          <div className=\"sendbird-avatar--inner__three-child--upper\">\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[0]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n          </div>\n          <div className=\"sendbird-avatar--inner__three-child--lower\">\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[1]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[2]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"sendbird-avatar--inner__four-child\">\n        {\n          src.slice(0, 4)\n            .map((i) => (\n              <ImageRenderer\n                className={imageRendererClassName}\n                url={i}\n                height={height}\n                width={width}\n                alt={alt}\n                key={uuidv4()}\n                defaultComponent={defaultComponent}\n              />\n            ))\n        }\n      </div>\n    );\n  }\n  // default img\n  return (\n    <ImageRenderer\n      className={imageRendererClassName}\n      url=\"\"\n      height={height}\n      width={width}\n      alt={alt}\n      defaultComponent={defaultComponent}\n    />\n  );\n};\n\ninterface AvatarProps {\n  className?: string | Array<string>,\n  height?: string | number,\n  width?: string | number,\n  src?: string | Array<string>,\n  alt?: string,\n  onClick?(): void,\n  customDefaultComponent?({ width, height }: { width: number | string, height: number | string }): ReactElement;\n}\n\nfunction Avatar(\n  {\n    className = '',\n    src = '',\n    alt = '',\n    width = '56px',\n    height = '56px',\n    onClick,\n    customDefaultComponent,\n  }: AvatarProps,\n  ref: React.Ref<HTMLDivElement>,\n): ReactElement {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-avatar',\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      style={{ height, width }}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <AvatarInner\n        src={src}\n        width={width}\n        height={height}\n        alt={alt}\n        customDefaultComponent={customDefaultComponent}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(Avatar);\n","import React, {\n  useContext, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { format } from 'date-fns';\n\nimport './index.scss';\nimport Avatar from '../Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes } from '../Icon';\nimport { MODAL_ROOT } from '../../../hooks/useModal/ModalRoot';\nimport TextMessageItemBody from '../TextMessageItemBody';\n\nimport {\n  isImage, isVideo, isSupportedFileView,\n} from '../../../utils';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Toast from '../Toast';\n\nexport const FileViewerComponent = ({\n  // sender\n  profileUrl,\n  userName,\n  // file\n  captionMsg,\n  type,\n  url,\n  // others\n  isByMe,\n  onClose,\n  onDelete,\n  createdAt,\n}) => {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const [showToast, setShowToast] = useState(false);\n  const [isCaptionHidden, setIsCaptionHidden] = useState(false);\n  const contentRef = useRef();\n\n  const onMediaFocus = () => {\n    setIsCaptionHidden(true);\n  };\n\n  const onMediaBlur = () => {\n    setIsCaptionHidden(false);\n  };\n\n  const onDownloadClick = () => {\n    setShowToast(true);\n    setTimeout(() => {\n      setShowToast(false);\n    }, 3000);\n  };\n  return (\n    <div className=\"rogu-fileviewer\">\n      <div className=\"rogu-fileviewer__header\">\n        <div className=\"rogu-fileviewer__header__left\">\n          <div className=\"rogu-fileviewer__header__left__avatar\">\n            <Avatar height=\"32px\" width=\"32px\" src={profileUrl} />\n          </div>\n          <div className=\"rogu-fileviewer__header__left__metadata\">\n            <div>\n              <Label\n                className=\"rogu-fileviewer__header__left__sender-name\"\n                type={LabelTypography.H_3}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {userName}\n              </Label>\n            </div>\n            <div>\n              <Label\n                className=\"rogu-fileviewer__header__left__createdat\"\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_2}\n              >\n                {format(createdAt, 'dd/MM/yyyy HH.mm')}\n              </Label>\n            </div>\n          </div>\n        </div>\n        <div className=\"rogu-fileviewer__header__right\">\n          {\n            isSupportedFileView(type) && (\n              <div className=\"rogu-fileviewer__header__right__actions\">\n                <a\n                  className=\"rogu-fileviewer__header__right__actions__download\"\n                  rel=\"noopener noreferrer\"\n                  href={url}\n                  onClick={onDownloadClick}\n                >\n                  <Icon\n                    type={IconTypes.ROGU_DOWNLOAD}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </a>\n                {\n                  onDelete && isByMe && (\n                    <div className=\"rogu-fileviewer__header__right__actions__delete\">\n                      <Icon\n                        type={IconTypes.ROGU_DELETE}\n                        height=\"24px\"\n                        width=\"24px\"\n                        onClick={onDelete}\n                      />\n                    </div>\n                  )\n                }\n              </div>\n            )\n          }\n          <div className=\"rogu-fileviewer__header__right__actions__close\">\n            <Icon\n              type={IconTypes.ROGU_CLOSE}\n              height=\"24px\"\n              width=\"24px\"\n              onClick={onClose}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"rogu-fileviewer__content\">\n        {isVideo(type) && (\n          // eslint-disable-next-line jsx-a11y/media-has-caption\n          <video\n            onFocus={onMediaFocus}\n            onBlur={onMediaBlur}\n            controls\n            className=\"rogu-fileviewer__content__video\"\n            ref={contentRef}\n          >\n            <source src={url} type={type} />\n          </video>\n        )}\n        {\n          isImage(type) && (\n            <img\n              onFocus={onMediaFocus}\n              onBlur={onMediaBlur}\n              // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n              tabIndex=\"0\"\n              ref={contentRef}\n              src={url}\n              alt={`Uploaded by ${userName}`}\n              className=\"rogu-fileviewer__content__img\"\n            />\n          )\n        }\n        {captionMsg\n          && (\n            <TextMessageItemBody\n              message={captionMsg}\n              viewerCaptionMode\n              isHidden={isCaptionHidden}\n            />\n          )}\n        {\n          !isSupportedFileView(type) && (\n            <div className=\"rogu-fileviewer__content__unsupported\">\n              <Label type={LabelTypography.H_1} color={LabelColors.ONBACKGROUND_1}>\n                Unsupported message\n              </Label>\n            </div>\n          )\n        }\n      </div>\n      {showToast && (\n        <Toast message={stringSet.TOAST__DOWNLOAD} />\n      )}\n    </div>\n  );\n};\n\nFileViewerComponent.propTypes = {\n  profileUrl: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  captionMsg: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  isByMe: PropTypes.bool,\n  createdAt: PropTypes.number.isRequired,\n};\n\nFileViewerComponent.defaultProps = {\n  isByMe: true,\n};\n\nexport default function FileViewer(props) {\n  const {\n    message,\n    isByMe,\n    onClose,\n    onDelete,\n  } = props;\n  const {\n    sender,\n    type,\n    url,\n    name: captionMsg = '',\n    createdAt,\n  } = message;\n  const { profileUrl, nickname: userName = '' } = sender;\n  return createPortal(\n    (\n      <FileViewerComponent\n        profileUrl={profileUrl}\n        userName={userName}\n        type={type}\n        url={url}\n        captionMsg={captionMsg}\n        onClose={onClose}\n        onDelete={onDelete}\n        isByMe={isByMe}\n        createdAt={createdAt}\n      />\n    ),\n    document.getElementById(MODAL_ROOT),\n  );\n}\n\nFileViewer.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      profileUrl: PropTypes.string,\n      userName: PropTypes.string,\n    }),\n    type: PropTypes.string,\n    url: PropTypes.string,\n    fileName: PropTypes.string,\n    createdAt: PropTypes.number,\n  }).isRequired,\n  isByMe: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nFileViewer.defaultProps = {\n  isByMe: true,\n};\n","import React, {\n  useState, useRef, useMemo, useLayoutEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n// import format from 'date-fns/format';\n\n// Rogu components\nimport MessageContent from '../../../ui/MessageContent';\n// import Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport RemoveMessageModal from './RemoveMessage';\n\n// Sendbird original components\n// import DateSeparator from '../../../ui/DateSeparator';\nimport FileViewer from '../../../ui/FileViewer';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  // hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  highLightedMessageId,\n  toggleReaction,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(\n        message,\n        currentGroupChannel,\n        chainTop,\n        chainBottom,\n      );\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = userId === sender.userId\n    || message.requestState === 'pending'\n    || message.requestState === 'failed';\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={`\n          sendbird-msg-hoc sendbird-msg--scroll-ref\n          ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n        `}\n      >\n        {/* date-separator */}\n        {\n          // hasSeparator && null\n          // <DateSeparator>\n          //   <Label\n          //     type={LabelTypography.CAPTION_2}\n          //     color={LabelColors.ONBACKGROUND_2}\n          //   >\n          //     {format(message.createdAt, 'MMMM dd, yyyy')}\n          //   </Label>\n          // </DateSeparator>\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => {\n          setShowEdit(false);\n        }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={`\n        sendbird-msg-hoc sendbird-msg--scroll-ref\n        ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n      `}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {/* {hasSeparator && <DateSeparator createdAt={message.createdAt} />} */}\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        // useReplying={} TODO: Set useReplying\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n      />\n      {/* Modal */}\n      {showRemove && (\n        <RemoveMessageModal\n          onCloseModal={() => setShowRemove(false)}\n          onDeleteMessage={() => {\n            deleteMessage(message);\n          }}\n        />\n      )}\n      {showFileViewer && (\n        <FileViewer\n          onClose={() => setShowFileViewer(false)}\n          message={message}\n          onDelete={() => {\n            deleteMessage(message, () => {\n              setShowFileViewer(false);\n            });\n          }}\n          isByMe={isByMe}\n        />\n      )}\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  // hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(\n      PropTypes.shape({\n        emojis: PropTypes.arrayOf(\n          PropTypes.shape({\n            key: PropTypes.string,\n            url: PropTypes.string,\n          }),\n        ),\n      }),\n    ),\n  }),\n  toggleReaction: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  // hasSeparator: false,\n  disabled: false,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n};\n","import { differenceInCalendarDays, format, getDay } from \"date-fns\";\n\nimport { getDayString, DayStringType } from \"../../utils\";\n\nexport type DateSeparatorStringsType = {\n  today: string;\n  yesterday: string;\n  days: DayStringType;\n};\n\nexport const getDateSeparatorDifference = (\n  createdAt: Date | number,\n  strings: DateSeparatorStringsType\n): string => {\n  const diffWithToday = differenceInCalendarDays(new Date(), createdAt);\n\n  if (diffWithToday === 0) {\n    return strings.today;\n  } else if (diffWithToday === 1) {\n    return strings.yesterday;\n  } else if (diffWithToday <= 7) {\n    return getDayString(getDay(createdAt), strings.days);\n  } else {\n    return format(createdAt, \"dd/MM/yyyy\");\n  }\n};\n\nexport default getDateSeparatorDifference;\n","import React, { useContext } from \"react\";\n\nimport \"./index.scss\";\nimport Label, { LabelTypography } from \"../Label\";\n\nimport { getClassName } from \"../../../utils\";\nimport { getDateSeparatorDifference } from \"./utils\";\nimport { LocalizationContext } from \"../../../lib/LocalizationContext\";\n\nexport type DateSeparatorProps = {\n  className?: string;\n  createdAt: Date | number;\n};\n\nexport default function DateSeparator({\n  className,\n  createdAt,\n}: DateSeparatorProps):JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className={getClassName([className, \"rogu-date-separator\"])}>\n      <Label\n        className=\"rogu-date-separator__content\"\n        type={LabelTypography.CAPTION_1}\n      >\n        {getDateSeparatorDifference(createdAt, {\n          today: stringSet.LABEL__DATE_TODAY,\n          yesterday: stringSet.LABEL__DATE_YESTERDAY,\n          days: {\n            0: stringSet.LABEL__DAY_SUNDAY,\n            1: stringSet.LABEL__DAY_MONDAY,\n            2: stringSet.LABEL__DAY_TUESDAY,\n            3: stringSet.LABEL__DAY_WEDNESDAY,\n            4: stringSet.LABEL__DAY_THURSDAY,\n            5: stringSet.LABEL__DAY_FRIDAY,\n            6: stringSet.LABEL__DAY_SATURDAY,\n          },\n        })}\n      </Label>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport { groupMessagesByDate } from '../../../utils';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const { scrollTop, clientHeight, scrollHeight } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(\n        '.sendbird-msg--scroll-ref',\n      );\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(\n        '.sendbird-msg--scroll-ref',\n      );\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  };\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {Array.from(groupMessagesByDate(allMessages).values()).map(\n              (messages) => {\n                const currentCreatedAt = messages[0]?.createdAt;\n\n                return (\n                  <>\n                    <DateSeparator createdAt={currentCreatedAt} />\n                    {messages.map((m, idx) => {\n                      const previousMessage = messages[idx - 1];\n                      const nextMessage = messages[idx + 1];\n                      const [chainTop, chainBottom] = useMessageGrouping\n                        ? compareMessagesForGrouping(\n                          previousMessage,\n                          m,\n                          nextMessage,\n                        )\n                        : [false, false];\n\n                      if (renderChatItem) {\n                        return (\n                          <div\n                            key={m.messageId || m.reqId}\n                            className=\"sendbird-msg--scroll-ref\"\n                          >\n                            {renderChatItem({\n                              message: m,\n                              highLightedMessageId,\n                              channel: currentGroupChannel,\n                              // hasSeparator: hasSeparator,\n                              onDeleteMessage: deleteMessage,\n                              onUpdateMessage: updateMessage,\n                              onResendMessage: resendMessage,\n                              onScrollToMessage: scrollToMessage,\n                              emojiContainer,\n                              chainTop,\n                              chainBottom,\n                              menuDisabled: disabled,\n                            })}\n                          </div>\n                        );\n                      }\n\n                      return (\n                        <MessageHOC\n                          highLightedMessageId={highLightedMessageId}\n                          renderCustomMessage={renderCustomMessage}\n                          key={m.messageId || m.reqId}\n                          userId={userId}\n                          // show status for pending/failed messages\n                          message={m}\n                          scrollToMessage={scrollToMessage}\n                          currentGroupChannel={currentGroupChannel}\n                          disabled={disabled}\n                          membersMap={membersMap}\n                          chainTop={chainTop}\n                          useReaction={useReaction}\n                          emojiAllMap={emojiAllMap}\n                          emojiContainer={emojiContainer}\n                          editDisabled={editDisabled}\n                          // hasSeparator={hasSeparator}\n                          chainBottom={chainBottom}\n                          updateMessage={updateMessage}\n                          deleteMessage={deleteMessage}\n                          resendMessage={resendMessage}\n                          toggleReaction={toggleReaction}\n                          memoizedEmojiListItems={memoizedEmojiListItems}\n                        />\n                      );\n                    })}\n                  </>\n                );\n              },\n            )}\n            {/* {allMessages.map((m, idx) => {\n              const previousMessage = allMessages[idx - 1];\n              const nextMessage = allMessages[idx + 1];\n              const [chainTop, chainBottom] = useMessageGrouping\n                ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                : [false, false];\n              const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n              const currentCreatedAt = m.createdAt;\n              // https://stackoverflow.com/a/41855608\n              const hasSeparator = !(\n                previousMessageCreatedAt\n                && isSameDay(currentCreatedAt, previousMessageCreatedAt)\n              );\n              if (renderChatItem) {\n                return (\n                  <div\n                    key={m.messageId || m.reqId}\n                    className=\"sendbird-msg--scroll-ref\"\n                  >\n                    {renderChatItem({\n                      message: m,\n                      highLightedMessageId,\n                      channel: currentGroupChannel,\n                      onDeleteMessage: deleteMessage,\n                      onUpdateMessage: updateMessage,\n                      onResendMessage: resendMessage,\n                      onScrollToMessage: scrollToMessage,\n                      emojiContainer,\n                      chainTop,\n                      chainBottom,\n                      hasSeparator,\n                      menuDisabled: disabled,\n                    })}\n                  </div>\n                );\n              }\n\n              return (\n                <MessageHOC\n                  highLightedMessageId={highLightedMessageId}\n                  renderCustomMessage={renderCustomMessage}\n                  key={m.messageId || m.reqId}\n                  userId={userId}\n                  // show status for pending/failed messages\n                  message={m}\n                  scrollToMessage={scrollToMessage}\n                  currentGroupChannel={currentGroupChannel}\n                  disabled={disabled}\n                  membersMap={membersMap}\n                  chainTop={chainTop}\n                  useReaction={useReaction}\n                  emojiAllMap={emojiAllMap}\n                  emojiContainer={emojiContainer}\n                  editDisabled={editDisabled}\n                  hasSeparator={hasSeparator}\n                  chainBottom={chainBottom}\n                  updateMessage={updateMessage}\n                  deleteMessage={deleteMessage}\n                  resendMessage={resendMessage}\n                  toggleReaction={toggleReaction}\n                  memoizedEmojiListItems={memoizedEmojiListItems}\n                />\n              );\n            })} */}\n          </div>\n        </div>\n        {showScrollBot && (\n          <div\n            className=\"sendbird-conversation__scroll-bottom-button\"\n            onClick={onClickScrollBot}\n            onKeyDown={onClickScrollBot}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              type={IconTypes.CHEVRON_DOWN}\n              fillColor={IconColors.PRIMARY}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([PropTypes.element, PropTypes.shape({})]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(\n    PropTypes.shape({\n      createdAt: PropTypes.number,\n    }),\n  ).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => {},\n  scrollToMessage: () => {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => {},\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  // ex: time = '13.46 14 December 2021', then split into array\n  const timeArray = time.split(' ');\n  // add string 'on' after first element of timeArray\n  // before: timeArray = ['13.46', '14', 'December', '2021']\n  timeArray.splice(1, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  // after: timeArray = ['13.46', 'on', '14', 'December', '2021']\n  return (\n    // eslint-disable-next-line\n    <div className=\"rogu-notification\" onClick={onClick}>\n      <Label className=\"rogu-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info(\n          'Channel > Typing Indicator: onTypingStatusUpdated',\n          groupChannel,\n        );\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.TYPING_INDICATOR} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from \"react\";\nimport Sendbird from \"sendbird\";\n\nimport { RenderGroupChannelMessageInputProps } from \"../index\";\nimport * as utils from \"../utils.js\";\n\nimport MessageInput from \"../../../ui/MessageInput\";\nimport { LocalizationContext } from \"../../../../lib/LocalizationContext\";\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(\n    renderProps: RenderGroupChannelMessageInputProps\n  ): JSX.Element;\n}\n\nconst MessageInputWrapper = (\n  {\n    channel,\n    user,\n    onSendMessage,\n    onFileUpload,\n    renderMessageInput,\n    isOnline,\n    initialized,\n  }: Props,\n  ref: React.RefObject<HTMLInputElement>\n): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled =\n    !initialized ||\n    utils.isDisabledBecauseFrozen(channel) ||\n    utils.isDisabledBecauseMuted(channel) ||\n    !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={\n        (utils.isDisabledBecauseFrozen(channel) &&\n          stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED) ||\n        (utils.isDisabledBecauseMuted(channel) &&\n          stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport withSendbirdContext from '../../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../../ui/ConnectionStatus';\nimport ChatHeader from '../../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setHighLightedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  currentGroupChannel.markAsRead();\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["getDayString","dayNumber","strings","groupMessagesByDate","messages","reduce","groupedMessagesByDate","currMessage","messageDate","format","createdAt","currentGroup","get","set","Map","useSendbirdStateContext","context","useContext","SendbirdSdkContext","RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED","FAILED","PENDING","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","subscribe","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getAllEmojisFromEmojiContainer","emojiContainer","emojiCategories","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","nextMessage","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","filter","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","messageType","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","React","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ReactionButton","ImageRenderer","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","_a","_b","setIntialTimeStamp","setHighLightedMessageId","isPresent","Typography","H_1","H_2","H_3","SUBTITLE_1","SUBTITLE_2","BODY_1","BODY_2","BODY_3","BUTTON_1","BUTTON_2","CAPTION_1","CAPTION_2","CAPTION_3","TYPING_INDICATOR","Colors","ONBACKGROUND_1","ONBACKGROUND_2","ONBACKGROUND_3","ONBACKGROUND_4","ONBACKGROUND_5","ONCONTENT_1","ONCONTENT_2","PRIMARY","ERROR","SECONDARY_3","changeTypographyToClassName","changeColorToClassName","color","Label","children","className","style","Array","isArray","join","propTypes","PropTypes","oneOfType","string","arrayOf","oneOf","number","element","any","object","defaultProps","undefined","LabelTypography","LabelColors","ADD","ARROW_LEFT","ATTACH","BAN","BROADCAST","CAMERA","CHANNELS","CHAT","CHAT_FILLED","CHEVRON_DOWN","CHEVRON_RIGHT","CLOSE","COLLAPSE","COPY","CREATE","DELETE","DISCONNECTED","DOCUMENT","DONE","DONE_ALL","DOWNLOAD","EDIT","EMOJI_MORE","EXPAND","FILE_AUDIO","FILE_DOCUMENT","FREEZE","GIF","INFO","LEAVE","MEMBERS","MESSAGE","MODERATIONS","MORE","MUTE","NOTIFICATIONS","NOTIFICATIONS_OFF_FILLED","OPERATOR","PHOTO","PLAY","PLUS","REFRESH","REPLY","REMOVE","SEARCH","SEND","SETTINGS_FILLED","SPINNER","SUPERGROUP","THUMBNAIL_NONE","TOGGLE_OFF","TOGGLE_ON","USER","ROGU_PENDING","ROGU_SENT","ROGU_READ_ALL","ROGU_ERROR","ROGU_COPY","ROGU_REPLY","ROGU_RESEND","ROGU_CLOSE","ROGU_DOWNLOAD","ROGU_DELETE","ROGU_ASSIGNMENT","ROGU_MATERIAL","DEFAULT","SECONDARY","CONTENT","CONTENT_INVERSE","WHITE","SENT","READ","ON_BACKGROUND_1","ON_BACKGROUND_2","ON_BACKGROUND_3","BACKGROUND_3","changeTypeToIconComponent","Type","IconAdd","IconArrowLeft","IconAttach","IconBan","IconBroadcast","IconCamera","IconChannels","IconChat","IconChatFilled","IconChevronDown","IconChevronRight","IconClose","IconCollapse","IconCopy","IconCreate","IconDelete","IconDisconnected","IconDocument","IconDone","IconDoneAll","IconDownload","IconEdit","IconEmojiMore","IconError","IconExpand","IconFileAudio","IconFileDocument","IconFreeze","IconGif","IconInfo","IconLeave","IconMembers","IconMessage","IconModerations","IconMore","IconMute","IconNotifications","IconNotificationsOffFilled","IconOperator","IconPhoto","IconPlay","IconPlus","IconQuestion","IconRefresh","IconRemove","IconReply","IconSearch","IconSend","IconSettingsFilled","IconSpinner","IconSupergroup","IconThumbnailNone","IconToggleOff","IconToggleOn","IconUser","RoguIconMsgPending","RoguIconMsgSent","RoguIconMsgReadAll","RoguIconMsgFailed","RoguIconMsgCopy","RoguIconMsgReply","RoguIconMsgResend","RoguIconClose","RoguIconDownload","RoguIconDelete","RoguIconAssignment","RoguIconMaterial","fillColor","onClick","iconStyle","minWidth","minHeight","isRequired","func","IconColors","MessageStatusTypes","MessageStatus","status","iconType","DELIVERED","isSentStatus","shape","friendName","profileUrl","TextButton","disabled","underline","bool","TextMessageItemBody","isByMe","_c","viewerCaptionMode","_d","isHidden","stringSet","LocalizationContext","_e","useState","clampState","setClampState","textRef","clientHeight","handleExpand","getClassName","split","word","i","BUTTON__READ_MORE","OGMessageItemBody","_k","_l","mouseHover","openOGUrl","ogMetaData","window","open","defaultImage","alt","title","description","isUrl","LinkLabel","isEditedMessage","MESSAGE_EDITED","AssignmentMessageItemBody","assignmentData","JSON","parse","data","openAssignment","ctaWeb","convertCtaLinkToWebLink","cta","ASSIGNMENT","dueAt","ASSIGNMENT_DEADLINE","convertAssignmentDueUTCtoLocale","MaterialMessageItemBody","materialData","openMaterial","MATERIAL","colorSet","generateColorFromString","str","firstChar","normalizedFirstChar","toUpperCase","entries","_i","hex","chars","includes","MenuItems","props","classList","add","menuRef","handleClickOutside","event","contains","target","setState","addEventListener","removeEventListener","openLeft","parentRect","getBoundingClientRect","x","left","y","top","menuStyle","innerWidth","innerHeight","rect","padding","createRef","setupEvents","getMenuPosition","showParent","cleanUpEvents","hideParent","createPortal","display","position","Math","round","getElementById","Component","instanceOf","Element","ENTER","MenuItems_","MenuItem","disable","handleClickEvent","keyCode","ContextMenu","menuTrigger","menuItems","showMenu","setShowMenu","Toast","MessageItemMenu","showRemove","resendMessage","setSupposedHover","showFileViewer","showToast","setShowToast","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","showMenuItemResend","isFailedMessage","showMenuItemDelete","isSentMessage","showMenuItemEdit","showMenuItemView","isThumbnailMessage","onCopyClick","copyToClipboard","toggleDropdown","IconButton","close","parentMessageId","MESSAGE_MENU__REPLY","MESSAGE_MENU__COPY","MESSAGE_MENU__VIEW","MESSAGE_MENU__RESEND","threadInfo","replyCount","MESSAGE_MENU__DELETE","TOAST__COPY","MessageContent","chainBottom","_f","chainTop","showEdit","_g","messageTypes","getUIKitMessageTypes","avatarRef","isPendingMessage","isMessageSentByMe","isOperatorMessage","isMessageSentByOperator","isByMeClassName","chainBottomClassName","chainTopClassName","ClientAdminMessage","Avatar","getSenderName","LABEL__OPERATOR","isTextMessage","isOGMessage","isAssignmentMessage","customType","isMaterialMessage","getUIKitMessageType","FILE","FileMessageItemBody","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","getOutgoingMessageState","LINE_HEIGHT","noop","KeyCode","SHIFT","handleUploadFile","callback","files","MessageInput","forwardRef","ref","isEdit","placeholder","maxLength","onFileUpload","onSendMessage","onCancelEdit","onStartTyping","fileInputRef","inputValue","setInputValue","isShiftPressed","setIsShiftPressed","setHeight","elem","MAX_HEIGHT","body","trimmedInputValue","preventDefault","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER","click","Button","ButtonTypes","ButtonSizes","SMALL","BUTTON__CANCEL","BUTTON__SAVE","RemoveMessage","onCloseModal","onDeleteMessage","Modal","MODAL__DELETE_MESSAGE__TITLE","defaultComponent","circle","placeHolder","showDefaultComponent","setShowDefaultComponent","showPlaceHolder","setShowPlaceHolder","DefaultComponent","PlaceHolder","maxWidth","justifyContent","alignItems","HiddenImageLoader","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","borderRadius","imageRendererClassName","iconWidth","iconHeight","_defaultComponent","AvatarInner","customDefaultComponent","slice","__spreadArray","FileViewerComponent","userName","captionMsg","onClose","onDelete","isCaptionHidden","setIsCaptionHidden","contentRef","onMediaFocus","onMediaBlur","onDownloadClick","isSupportedFileView","isVideo","isImage","TOAST__DOWNLOAD","FileViewer","MODAL_ROOT","fileName","MessageHoc","editDisabled","updateMessage","scrollToMessage","membersMap","highLightedMessageId","renderCustomMessage","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","marginBottom","RemoveMessageModal","isFileMessage","isDateseparator","getDateSeparatorDifference","diffWithToday","differenceInCalendarDays","today","yesterday","getDay","days","DateSeparator","LABEL__DATE_TODAY","LABEL__DATE_YESTERDAY","LABEL__DAY_SUNDAY","LABEL__DAY_MONDAY","LABEL__DAY_TUESDAY","LABEL__DAY_WEDNESDAY","LABEL__DAY_THURSDAY","LABEL__DAY_FRIDAY","LABEL__DAY_SATURDAY","ConversationScroll","onScroll","onScrollDown","nodes","querySelectorAll","first","last","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolderTypes","NO_MESSAGES","from","values","currentCreatedAt","idx","previousMessage","onUpdateMessage","onResendMessage","onScrollToMessage","menuDisabled","MessageHOC","readStatus","Notification","count","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","user","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConversationPanel","stores","sdkStore","userStore","config","theme","reconnect","dispatchers","queries","startingPoint","highlightedMessage","showSearchIcon","onSearchClick","renderChatHeader","renderUserProfile","disableUserProfile","onChatHeaderActionClick","sdkError","messageListQuery","warn","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","ChatHeader","LOADING","ConnectionStatus","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAiBC,OAAjB;AAC1B,SAAAA,OAAO,CAACD,SAAD,CAAP;AAAkB,CADb;;ACCA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD;AAC/B,SAAOA,QAAQ,CAACC,MAAT,CACH,UAACC,qBAAD,EAAwBC,WAAxB;AACE,QAAMC,WAAW,GAAGC,cAAM,CAACF,WAAW,CAACG,SAAb,EAAwB,YAAxB,CAA1B;AACA,QAAMC,YAAY,GAAGL,qBAAqB,CAACM,GAAtB,CAA0BJ,WAA1B,CAArB;;AAEA,QAAIG,YAAJ,EAAkB;AAChBL,MAAAA,qBAAqB,CAACO,GAAtB,CAA0BL,WAA1B,0EACKG,sBACHJ,oBAFF;AAID,KALD,MAKO;AACLD,MAAAA,qBAAqB,CAACO,GAAtB,CAA0BL,WAA1B,EAAuC,CAACD,WAAD,CAAvC;AACD;;AAED,WAAOD,qBAAP;AACD,GAfE,EAgBH,IAAIQ,GAAJ,EAhBG,CAAP;AAmBH,CApBM;;ACLP;;;;;;;;;AAaA,SAASC,uBAAT;AACE,MAAMC,OAAO,GAAkBC,gBAAU,CAACC,sCAAD,CAAzC;AACA,SAAOF,OAAP;AACD;;AChBM,IAAMG,cAAc,GAAG,gBAAvB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,wBAAwB,GAAG,0BAAjC;AAEA,IAAMC,wBAAwB,GAAG,0BAAjC;AACA,IAAMC,yBAAyB,GAAG,2BAAlC;AAEA,IAAMC,oBAAoB,GAAG,sBAA7B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,sBAAsB,GAAG,wBAA/B;AAEA,IAAMC,sBAAsB,GAAG,wBAA/B;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,YAAY,GAAG,cAArB;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAMC,2BAA2B,GAAG,6BAApC;;ACtBmBC,gCAAwB;AAClD,IAAMC,SAAS,GAAG,WAAlB;;8BACuCC,+BAAuB,EAA9D;AAAA,IAAQC,WAAR,2BAAQA,SAAR;AAAA,4BAAmBC,MAAnB;AAAA,QAA2BC,SAA3B,2BAA2BA;;AAEpB,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmB;AAAA,MAAlBC,SAAkB,uEAAN,CAAM;AAC/C,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAGF,SAAnB;;AACA,MAAIE,UAAU,GAAGD,SAAjB,EAA4B;AAC1B;AACD;;AACD,MAAI;AACF,QAAME,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,0CAAvB,CAAlB,CADE;;AAGFF,IAAAA,SAAS,CAACG,SAAV,GAAsBH,SAAS,CAACI,YAAhC;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,UAAU,CAAC,YAAM;AACfV,MAAAA,cAAc,CAACG,UAAU,GAAG,CAAd,CAAd;AACD,KAFS,EAEP,MAAMA,UAFC,CAAV;AAGD;AACF,CAfM;AAiBA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAgB;AACjDA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,CAAD,EAAO;AACxB,QAAI;AACFA,MAAAA,CAAC,CAACC,MAAF;AACD,KAFD,CAEE,gBAAM;AAEP;AACF,GAND;AAOD,CARM;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaC,MAAb,EAAqBC,UAArB,EAAoC;AAC/D,MAAMP,UAAU,GAAG,IAAI7C,GAAJ,EAAnB;AACA,MAAI,CAACmD,MAAD,IAAW,CAACA,MAAM,CAACE,SAAvB,EAAkC,OAAOR,UAAP;AAClCA,EAAAA,UAAU,CAAC9C,GAAX,CAAeuD,yBAAf,EAAyCH,MAAM,CAACE,SAAP,CAAiBC,yBAAjB,EAA2C,UAACC,GAAD,EAAS;AAC3F,QAAQC,OAAR,GAA6BD,GAA7B,CAAQC,OAAR;AAAA,QAAiBC,OAAjB,GAA6BF,GAA7B,CAAiBE,OAAjB;AACAxB,IAAAA,cAAc;;AACd,QAAIuB,OAAO,IAAKN,UAAU,KAAKM,OAAO,CAACE,GAAvC,EAA6C;AAC3CN,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAEC,qBADG;AAETC,QAAAA,OAAO,EAAEJ;AAFA,OAAD,CAAV;AAID;AACF,GATwC,CAAzC;AAUAZ,EAAAA,UAAU,CAAC9C,GAAX,CAAeuD,0BAAf,EAA0CH,MAAM,CAACE,SAAP,CAAiBC,0BAAjB,EAA4C,UAACC,GAAD,EAAS;AAC7F,QAAQC,OAAR,GAA6BD,GAA7B,CAAQC,OAAR;AAAA,QAAiBC,OAAjB,GAA6BF,GAA7B,CAAiBE,OAAjB;;AACA,QAAID,OAAO,IAAKN,UAAU,KAAKM,OAAO,CAACE,GAAvC,EAA6C;AAC3CN,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAEC,oBADG;AAETC,QAAAA,OAAO,EAAEJ;AAFA,OAAD,CAAV;AAID;AACF,GARyC,CAA1C;AASAZ,EAAAA,UAAU,CAAC9C,GAAX,CAAeuD,yBAAf,EAAyCH,MAAM,CAACE,SAAP,CAAiBC,yBAAjB,EAA2C,UAACC,GAAD,EAAS;AAC3F,QAAQC,OAAR,GAA6BD,GAA7B,CAAQC,OAAR;AAAA,QAAiBC,OAAjB,GAA6BF,GAA7B,CAAiBE,OAAjB;AACAxB,IAAAA,cAAc;;AACd,QAAIuB,OAAO,IAAKN,UAAU,KAAKM,OAAO,CAACE,GAAvC,EAA6C;AAC3CN,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAEC,qBADG;AAETC,QAAAA,OAAO,EAAEJ;AAFA,OAAD,CAAV;AAID;AACF,GATwC,CAAzC;AAUAZ,EAAAA,UAAU,CAAC9C,GAAX,CAAeuD,2BAAf,EAA2CH,MAAM,CAACE,SAAP,CAAiBC,2BAAjB,EAA6C,UAACC,GAAD,EAAS;AAC/F,QAAQC,OAAR,GAA2CD,GAA3C,CAAQC,OAAR;AAAA,QAAiBC,OAAjB,GAA2CF,GAA3C,CAAiBE,OAAjB;AAAA,QAA0BK,YAA1B,GAA2CP,GAA3C,CAA0BO,YAA1B;;AACA,QAAIA,YAAY,IAAIN,OAAhB,IAA4BN,UAAU,KAAKM,OAAO,CAACE,GAAvD,EAA6D;AAC3DN,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAEC,kBADG;AAETC,QAAAA,OAAO,EAAE;AAAEL,UAAAA,OAAO,EAAPA,OAAF;AAAWC,UAAAA,OAAO,EAAPA;AAAX;AAFA,OAAD,CAAV;AAID;AACF,GAR0C,CAA3C;AASAZ,EAAAA,UAAU,CAAC9C,GAAX,CAAeuD,sBAAf,EAAsCH,MAAM,CAACE,SAAP,CAAiBC,sBAAjB,EAAwC,UAACC,GAAD,EAAS;AACrF,QAAQC,OAAR,GAA+BD,GAA/B,CAAQC,OAAR;AAAA,QAAiBO,SAAjB,GAA+BR,GAA/B,CAAiBQ,SAAjB;;AACA,QAAIP,OAAO,IAAKN,UAAU,KAAKM,OAAO,CAACE,GAAvC,EAA6C;AAC3CN,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAEC,kBADG;AAETC,QAAAA,OAAO,EAAEE;AAFA,OAAD,CAAV;AAID;AACF,GARqC,CAAtC;AAUA,SAAOlB,UAAP;AACD,CApDM;AAoFA,IAAMmB,UAAU,GAAG,SAAbA,UAAa,GAAuB;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;AAC/C,MAAQC,MAAR,GAAmBD,YAAnB,CAAQC,MAAR;AACA,SAAOA,MAAM,KAAK,UAAlB;AACD,CAHM;AAKA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAuB;AAAA,MAAtBF,YAAsB,uEAAP,EAAO;AAC5D,MAAQG,QAAR,GAAqBH,YAArB,CAAQG,QAAR;AACA,SAAOA,QAAQ,IAAI,CAACJ,UAAU,CAACC,YAAD,CAA9B;AACD,CAHM;AAKA,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAuB;AAAA,MAAtBJ,YAAsB,uEAAP,EAAO;AAC3D,MAAQK,YAAR,GAAyBL,YAAzB,CAAQK,YAAR;AACA,SAAOA,YAAY,KAAK,OAAxB;AACD,CAHM;AASA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,GAAyB;AAAA,MAAxBC,cAAwB,uEAAP,EAAO;AACrE,8BAAiCA,cAAjC,CAAQC,eAAR;AAAA,MAAQA,eAAR,sCAA0B,EAA1B;AACA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAGF,eAAe,CAACG,MAA5D,EAAoED,aAAa,IAAI,CAArF,EAAwF;AACtF,QAAQE,MAAR,GAAmBJ,eAAe,CAACE,aAAD,CAAlC,CAAQE,MAAR;;AACA,SAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGD,MAAM,CAACD,MAA7C,EAAqDE,UAAU,IAAI,CAAnE,EAAsE;AACpEJ,MAAAA,SAAS,CAACK,IAAV,CAAeF,MAAM,CAACC,UAAD,CAArB;AACD;AACF;;AACD,SAAOJ,SAAP;AACD,CAXM;AAoBA,IAAMM,iCAAiC,GAAG,SAApCA,iCAAoC,GAAyB;AAAA,MAAxBR,cAAwB,uEAAP,EAAO;AACxE,+BAAiCA,cAAjC,CAAQC,eAAR;AAAA,MAAQA,eAAR,uCAA0B,EAA1B;AACA,MAAMQ,YAAY,GAAG,IAAIjF,GAAJ,EAArB;;AAEA,OAAK,IAAI2E,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAGF,eAAe,CAACG,MAA5D,EAAoED,aAAa,IAAI,CAArF,EAAwF;AACtF,QAAQE,MAAR,GAAmBJ,eAAe,CAACE,aAAD,CAAlC,CAAQE,MAAR;;AACA,SAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGD,MAAM,CAACD,MAA7C,EAAqDE,UAAU,IAAI,CAAnE,EAAsE;AACpE,+BAAqBD,MAAM,CAACC,UAAD,CAA3B;AAAA,UAAQI,GAAR,sBAAQA,GAAR;AAAA,UAAaxB,GAAb,sBAAaA,GAAb;AACAuB,MAAAA,YAAY,CAAClF,GAAb,CAAiBmF,GAAjB,EAAsBxB,GAAtB;AACD;AACF;;AACD,SAAOuB,YAAP;AACD,CAZM;AAcA,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAC1D,MAAMC,YAAY,GAAG,IAAIrF,GAAJ,EAArB;;AACA,OAAK,IAAIsF,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGF,OAAO,CAACR,MAAhD,EAAwDU,WAAW,IAAI,CAAvE,EAA0E;AACxE,+BAA6BF,OAAO,CAACE,WAAD,CAApC;AAAA,QAAQC,MAAR,wBAAQA,MAAR;AAAA,QAAgBC,QAAhB,wBAAgBA,QAAhB;AACAH,IAAAA,YAAY,CAACtF,GAAb,CAAiBwF,MAAjB,EAAyBC,QAAzB;AACD;;AACD,SAAOH,YAAP;AACD,CAPM;AASA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAChC,OAAD;AAAA,SAAa9D,cAAM,CAAC8D,OAAO,CAAC7D,SAAT,EAAoB,GAApB,CAAnB;AAAA,CAA5B;AAEA,IAAM8F,WAAW,GAAG,SAAdA,WAAc,CAACjC,OAAD,EAAUkC,gBAAV,EAA+B;AACxD,MACE,CAAClC,OAAD,IACG,CAACkC,gBADJ,IAEG,CAAClC,OAAO,CAACmC,MAFZ,IAGG,CAACD,gBAAgB,CAACC,MAHrB,IAIG,CAACnC,OAAO,CAAC7D,SAJZ,IAKG,CAAC+F,gBAAgB,CAAC/F,SALrB,IAMG,CAAC6D,OAAO,CAACmC,MAAR,CAAeL,MANnB,IAOG,CAACI,gBAAgB,CAACC,MAAjB,CAAwBL,MAR9B,EASE;AACA,WAAO,KAAP;AACD;;AACD,SACE9B,OAAO,CAACoC,aAAR,KAA0BF,gBAAgB,CAACE,aAA3C,IACGpC,OAAO,CAACmC,MAAR,CAAeL,MAAf,KAA0BI,gBAAgB,CAACC,MAAjB,CAAwBL,MADrD,IAEGE,mBAAmB,CAAChC,OAAD,CAAnB,KAAiCgC,mBAAmB,CAACE,gBAAD,CAHzD;AAKD,CAlBM;AAoBA,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxCC,WADwC,EAExCtG,WAFwC,EAGxCuG,WAHwC;AAAA,SAKxC,CACEN,WAAW,CAACK,WAAD,EAActG,WAAd,CADb,EAEEiG,WAAW,CAACjG,WAAD,EAAcuG,WAAd,CAFb,CALwC;AAAA,CAAnC;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,SAAc,UAACrC,OAAD,EAAa;AACvD;AACA,QAAIA,OAAO,IAAIA,OAAO,CAACoC,cAAnB,IAAqCpC,OAAO,CAACoC,cAAR,CAAuBC,QAAvB,CAAzC,EAA2E;AACzE,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAN6B;AAAA,CAAvB;AAQA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,WAAD,EAAcC,UAAd,EAA6B;AACpE,8BAAsCA,UAAtC,CAAQR,aAAR;AAAA,MAAQA,aAAR,sCAAwBjE,SAAxB;;AACA,MAAIiE,aAAa,KAAK/D,WAAlB,IAA+B+D,aAAa,KAAK7D,SAArD,EAA8D;AAC5D,QAAMsE,2BAA2B,GAAGF,WAAW,CAC5CG,GADiC,CAC7B,UAAC9C,OAAD;AAAA,aACHA,OAAO,CAACoC,aAAR,KACKpC,OAAO,CAAC+C,cAAR,IAA0B/C,OAAO,CAAC+C,cAAR,EAA3B,GAAuD1E,WAAvD,GAAmEF,SADvE,CADG;AAAA,KAD6B,EAKjC6E,WALiC,CAKrB3E,WALqB,CAApC;;AAMA,QAAIwE,2BAA2B,GAAG,CAA9B,GAAkCF,WAAW,CAACxB,MAAlD,EAA0D;AACxD,UAAMtF,QAAQ,0CAAO8G,WAAP,CAAd;;AACA9G,MAAAA,QAAQ,CAACoH,MAAT,CAAgBJ,2BAA2B,GAAG,CAA9C,EAAiD,CAAjD,EAAoDD,UAApD;AACA,aAAO/G,QAAP;AACD;AACF;;AACD,0DACK8G,WADL,IAEEC,UAFF;AAID,CAnBM;AAqBA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAChC,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOA,EAAP;AACD;;AACD,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAMC,MAAM,GAAGC,MAAM,CAACC,UAAP,CAAkBH,EAAlB,CAAf;;AACA,QAAI,CAACE,MAAM,CAACE,KAAP,CAAaH,MAAb,CAAL,EAA2B;AACzB,aAAOA,MAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAXM;;ACrPP,2BAAe;AACbI,EAAAA,WAAW,EAAE,KADA;AAEbC,EAAAA,OAAO,EAAE,KAFI;AAGbd,EAAAA,WAAW,EAAE,EAHA;AAIbe,EAAAA,mBAAmB,EAAE;AAAE/B,IAAAA,OAAO,EAAE;AAAX,GAJR;AAKb;AACAgC,EAAAA,OAAO,EAAE,KANI;AAObC,EAAAA,oBAAoB,EAAE,CAPT;AAQb;AACA;AACA;AACA;AACAC,EAAAA,eAAe,EAAE,KAZJ;AAabC,EAAAA,6BAA6B,EAAE,CAblB;AAcb/C,EAAAA,cAAc,EAAE,EAdH;AAebgD,EAAAA,WAAW,EAAE,CAfA;AAgBbC,EAAAA,WAAW,EAAE,IAhBA;AAiBbC,EAAAA,SAAS,EAAE,KAjBE;AAkBbC,EAAAA,iBAAiB,EAAE;AAlBN,CAAf;;ACSA,4BAII9F,+BAAuB,EAJ3B;AAAA,IACEC,SADF,yBACEA,SADF;AAAA,IAEEC,MAFF,yBAEEA,MAFF;AAAA,IAGEC,OAHF,yBAGEA,OAHF;;AAMe,SAAS4F,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACnE,IAAf;AACE,SAAKoE,WAAL;AACE,aAAOC,oBAAP;;AACF,SAAKD,cAAL;AACE,uFACKF,KADL;AAEE;AACA;AACAT,QAAAA,OAAO,EAAE,KAJX;AAKEhB,QAAAA,WAAW,EAAE;AALf;;AAOF,SAAK2B,uBAAL;AACE,uFACKF,KADL;AAEEX,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKa,mBAAL;AACE,uFACKF,KADL;AAEEzB,QAAAA,WAAW,yCACNyB,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAACC,CAAD;AAAA,iBAC1BA,CAAC,CAACrC,aAAF,KAAoB/D,SADM;AAAA,SAAzB,CADM;AAFb;;AAQF,SAAKiG,wBAAL;AAA2C;AACzC,YAAMI,gBAAgB,GAAGL,MAAM,CAACjE,OAAP,CAAevE,QAAf,IAA2B,EAApD;AACA,oCAAqCwI,MAAM,CAACjE,OAA5C,CAAQsD,mBAAR;AAAA,YAAQA,mBAAR,sCAA8B,EAA9B;AAEA,YAAMiB,YAAY,GAAGP,KAAK,CAACV,mBAAN,IAA6B,EAAlD;AACA,YAAMkB,eAAe,GAAGD,YAAY,CAAC1E,GAArC;AACA,YAAM4E,gBAAgB,GAAGnB,mBAAmB,CAACzD,GAA7C;;AACA,YAAI4E,gBAAgB,KAAKD,eAAzB,EAA0C;AACxC,iBAAOR,KAAP;AACD,SATwC;;;AAYzC,YAAMU,mBAAmB,GAAGV,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAAC1E,GAAD;AAAA,iBACnD,CAAE4E,gBAAgB,CAACK,IAAjB,CAAsB;AAAA,gBAAGzE,SAAH,QAAGA,SAAH;AAAA,mBAAmB0E,kBAAU,CAAC1E,SAAD,EAAYR,GAAG,CAACQ,SAAhB,CAA7B;AAAA,WAAtB,CADiD;AAAA,SAAzB,CAA5B;AAIA,YAAM2E,kBAAkB,GAAGzC,cAAc,CAAC,iBAAD,CAAd,CAAkC6B,MAAM,CAACjE,OAAzC,CAA3B;AACA,YAAM8E,gCAAgC,GAAG1C,cAAc,CAAC,+BAAD,CAAd,CAAgD6B,MAAM,CAACjE,OAAvD,CAAzC;AACA,+JACKgE,KADL;AAEEX,UAAAA,OAAO,EAAE,KAFX;AAGED,UAAAA,WAAW,EAAE,IAHf;AAIEG,UAAAA,OAAO,EAAEU,MAAM,CAACjE,OAAP,CAAeuD,OAJ1B;AAKEC,UAAAA,oBAAoB,EAAES,MAAM,CAACjE,OAAP,CAAewD;AALvC,WAOMqB,kBAAkB,IAAI;AACxBpB,UAAAA,eAAe,EAAEQ,MAAM,CAACjE,OAAP,CAAeyD;AADR,SAP5B,GAUMqB,gCAAgC,IAAI;AACtCpB,UAAAA,6BAA6B,EAAEO,MAAM,CAACjE,OAAP,CAAe0D;AADR,SAV1C;AAaEnB,UAAAA,WAAW,mDACN+B,gBADM,0CAENI,mBAFM;AAbb;AAkBD;;AACD,SAAKR,wBAAL;AAA2C;AACzC,YAAMI,iBAAgB,GAAGL,MAAM,CAACjE,OAAP,CAAevE,QAAf,IAA2B,EAApD;;AACA,qCAAqCwI,MAAM,CAACjE,OAA5C,CAAQsD,mBAAR;AAAA,YAAQA,oBAAR,uCAA8B,EAA9B;;AAEA,YAAMiB,aAAY,GAAGP,KAAK,CAACV,mBAAN,IAA6B,EAAlD;;AACA,YAAMkB,gBAAe,GAAGD,aAAY,CAAC1E,GAArC;AACA,YAAM4E,iBAAgB,GAAGnB,oBAAmB,CAACzD,GAA7C;;AACA,YAAI4E,iBAAgB,KAAKD,gBAAzB,EAA0C;AACxC,iBAAOR,KAAP;AACD,SATwC;;;AAYzC,YAAMU,oBAAmB,GAAGV,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAAC1E,GAAD;AAAA,iBACnD,CAAE4E,iBAAgB,CAACK,IAAjB,CAAsB;AAAA,gBAAGzE,SAAH,SAAGA,SAAH;AAAA,mBAAmB0E,kBAAU,CAAC1E,SAAD,EAAYR,GAAG,CAACQ,SAAhB,CAA7B;AAAA,WAAtB,CADiD;AAAA,SAAzB,CAA5B;;AAIA,yFACK8D,KADL;AAEEX,UAAAA,OAAO,EAAE,KAFX;AAGED,UAAAA,WAAW,EAAE,IAHf;AAIEG,UAAAA,OAAO,EAAEU,MAAM,CAACjE,OAAP,CAAeuD,OAJ1B;AAKEC,UAAAA,oBAAoB,EAAES,MAAM,CAACjE,OAAP,CAAewD,oBALvC;AAMEC,UAAAA,eAAe,EAAEQ,MAAM,CAACjE,OAAP,CAAeyD,eANlC;AAOEC,UAAAA,6BAA6B,EAAEO,MAAM,CAACjE,OAAP,CAAe0D,6BAPhD;AAQEnB,UAAAA,WAAW,mDACNmC,oBADM,0CAENJ,iBAFM;AARb;AAaD;;AACD,SAAKJ,yBAAL;AAA4C;AAC1C,sDAAYF,KAAZ;AACD;;AACD,SAAKE,oBAAL;AACE,uFACKF,KADL;AAEEzB,QAAAA,WAAW,mDACNyB,KAAK,CAACzB,WADA,2CAEJ0B,MAAM,CAACjE,OAFH;AAFb;;AAOF,SAAKkE,qBAAL;AAAwC;AACtC,YAAMa,WAAW,GAAGf,KAAK,CAACzB,WAAN,CAAkBG,GAAlB,CAAsB,UAAC2B,CAAD;AAAA,iBACxCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUf,MAAM,CAACjE,OAAP,CAAegF,KAAzB,CAAV,GAA4Cf,MAAM,CAACjE,OAAnD,GAA6DqE,CADrB;AAAA,SAAtB,CAApB;;AAGA,+CAAIU,WAAJ,EAAiBE,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAElBD,CAAC,CAAClD,aAAF,IACGmD,CAAC,CAACnD,aADL,IAEGkD,CAAC,CAAClD,aAAF,KAAoB/D,SAFvB,KAIEkH,CAAC,CAACnD,aAAF,KAAoB7D,OAApB,IACGgH,CAAC,CAACnD,aAAF,KAAoB9D,MALzB,CADF,GAQI,CAAC,CARL,GAQS,CATW;AAAA,SAAtB;;AAWA,yFACK8F,KADL;AAEEzB,UAAAA,WAAW,EAAEwC;AAFf;AAID;;AACD,SAAKb,sBAAL;AAAyC;AACvC;AACAD,QAAAA,MAAM,CAACjE,OAAP,CAAeoF,MAAf,GAAwB,IAAxB;AACA,yFACKpB,KADL;AAEEzB,UAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkBG,GAAlB,CAAsB,UAAC2B,CAAD;AAAA,mBACjCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUf,MAAM,CAACjE,OAAP,CAAegF,KAAzB,CAAV,GACIf,MAAM,CAACjE,OADX,GAEIqE,CAH6B;AAAA,WAAtB;AAFf;AAQD;;AACD,SAAKH,mBAAL;AAAsC;AACpC,yFACKF,KADL;AAEEV,UAAAA,mBAAmB,EAAEW,MAAM,CAACjE,OAF9B;AAGE6D,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKK,mBAAL;AAAsC;AACpC,yFACKF,KADL;AAEEH,UAAAA,SAAS,EAAE;AAFb;AAID;;AACD,SAAKK,mBAAL;AAAsC;AACpC,YAAQvE,OAAR,GAAoBsE,MAAM,CAACjE,OAA3B,CAAQL,OAAR;;AACA,oCAAkDqE,KAAlD,CAAQV,mBAAR;AAAA,YAAQA,qBAAR,sCAA8B,EAA9B;AAAA,YAAkCK,WAAlC,GAAkDK,KAAlD,CAAkCL,WAAlC;;AACA,YAAM0B,sBAAsB,GAAG/B,qBAAmB,CAACzD,GAAnD;;AACA,YAAI,CAAC+E,kBAAU,CAACjF,OAAO,CAACE,GAAT,EAAcwF,sBAAd,CAAf,EAAsD;AACpD,iBAAOrB,KAAP;AACD;;AACD,yFACKA,KADL;AAEEJ,UAAAA,WAAW,EAAED,WAAW,GAAG;AAF7B;AAID;;AACD,SAAKO,mBAAL;AAAsC;AACpC,8BAA0CD,MAAM,CAACjE,OAAjD;AAAA,YAAQL,QAAR,mBAAQA,OAAR;AAAA,YAAiBC,OAAjB,mBAAiBA,OAAjB;AAAA,YAA0B0F,WAA1B,mBAA0BA,WAA1B;AACA,YAAI3B,YAAW,GAAG,CAAlB;;AACA,qCAAkDK,KAAlD,CAAQV,mBAAR;AAAA,YAAQA,qBAAR,uCAA8B,EAA9B;AAAA,YAAkCM,WAAlC,GAAkDI,KAAlD,CAAkCJ,WAAlC;;AACA,YAAMyB,uBAAsB,GAAG/B,qBAAmB,CAACzD,GAAnD;;AAEA,YAAI,CAAC+E,kBAAU,CAACjF,QAAO,CAACE,GAAT,EAAcwF,uBAAd,CAAf,EAAsD;AACpD,iBAAOrB,KAAP;AACD,SARmC;;;AAUpC,YAAIA,KAAK,CAACzB,WAAN,CAAkBgD,IAAlB,CAAuB,UAAC7F,GAAD;AAAA,iBAASA,GAAG,CAACQ,SAAJ,KAAkBN,OAAO,CAACM,SAAnC;AAAA,SAAvB,CAAJ,EAA0E;AACxE,iBAAO8D,KAAP;AACD,SAZmC;;;AAcpC,YAAIA,KAAK,CAACF,iBAAN,IAA2B,CAAC0B,+BAAuB,CAACxB,KAAK,CAACF,iBAAP,EAA0BlE,OAA1B,CAAvD,EAA2F;AACzF,iBAAOoE,KAAP;AACD;;AAEDL,QAAAA,YAAW,GAAGK,KAAK,CAACL,WAAN,GAAoB,CAAlC,CAlBoC;;AAoBpC,YAAI2B,WAAJ,EAAiB;AACf3B,UAAAA,YAAW,GAAG,CAAd;AACD;;AAED,YAAI/D,OAAO,CAAC+C,cAAR,IAA0B/C,OAAO,CAAC+C,cAAR,EAA9B,EAAwD;AACtD,2FACKqB,KADL;AAEEzB,YAAAA,WAAW,EAAED,yBAAyB,CAAC0B,KAAK,CAACzB,WAAP,EAAoB3C,OAApB;AAFxC;AAID;;AACD,yFACKoE,KADL;AAEEL,UAAAA,WAAW,EAAXA,YAFF;AAGEC,UAAAA,WAAW,EAAGD,YAAW,KAAK,CAAjB,GACT7H,cAAM,CAAC,IAAI2J,IAAJ,EAAD,EAAa,UAAb,CADG,GAET7B,WALN;AAMErB,UAAAA,WAAW,EAAED,yBAAyB,CAAC0B,KAAK,CAACzB,WAAP,EAAoB3C,OAApB;AANxC;AAQD;;AACD,SAAKsE,kBAAL;AAAqC;AACnC,YAAQtE,QAAR,GAAoBqE,MAAM,CAACjE,OAA3B,CAAQJ,OAAR;;AACA,YAAIoE,KAAK,CAACF,iBAAN,IAA2B,CAAC0B,+BAAuB,CAACxB,KAAK,CAACF,iBAAP,EAA0BlE,QAA1B,CAAvD,EAA2F;AACzF;AACA,2FACKoE,KADL;AAEEzB,YAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAACC,CAAD;AAAA,qBACpC,CAACO,kBAAU,CAACP,CAAC,CAACnE,SAAH,EAAcN,QAAd,aAAcA,QAAd,uBAAcA,QAAO,CAAEM,SAAvB,CADyB;AAAA,aAAzB;AAFf;AAMD;;AACD,yFACK8D,KADL;AAEEzB,UAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkBG,GAAlB,CAAsB,UAAC2B,CAAD;AAAA,mBACjCO,kBAAU,CAACP,CAAC,CAACnE,SAAH,EAAc+D,MAAM,CAACjE,OAAP,CAAeJ,OAAf,CAAuBM,SAArC,CAAV,GACI+D,MAAM,CAACjE,OAAP,CAAeJ,OADnB,GAEIyE,CAH6B;AAAA,WAAtB;AAFf;AAQD;;AACD,SAAKH,sBAAL;AACE,uFACKF,KADL;AAEEzB,QAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkBG,GAAlB,CAAsB,UAAC2B,CAAD;AAAA,iBACjCO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUf,MAAM,CAACjE,OAAP,CAAegF,KAAzB,CAAV,GACIf,MAAM,CAACjE,OADX,GAEIqE,CAH6B;AAAA,SAAtB;AAFf;;AAQF,SAAKH,YAAL;AACE,uFACKF,KADL;AAEEL,QAAAA,WAAW,EAAE,CAFf;AAGEC,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAKM,kBAAL;AACE,uFACKF,KADL;AAEEzB,QAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAACC,CAAD;AAAA,iBACpC,CAACO,kBAAU,CAACP,CAAC,CAACnE,SAAH,EAAc+D,MAAM,CAACjE,OAArB,CADyB;AAAA,SAAzB;AAFf;;AAMF,SAAKkE,4BAAL;AACE,uFACKF,KADL;AAEEzB,QAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkB6B,MAAlB,CAAyB,UAACC,CAAD;AAAA,iBACpC,CAACO,kBAAU,CAACP,CAAC,CAACW,KAAH,EAAUf,MAAM,CAACjE,OAAjB,CADyB;AAAA,SAAzB;AAFf;;AAMF,SAAKkE,mBAAL;AAAsC;AACpC,yFACKF,KADL;AAEErD,UAAAA,cAAc,EAAEsD,MAAM,CAACjE;AAFzB;AAID;;AACD,SAAKkE,mBAAL;AAAsC;AACpC,yFACKF,KADL;AAEEzB,UAAAA,WAAW,EAAEyB,KAAK,CAACzB,WAAN,CAAkBG,GAAlB,CAAsB,UAAC2B,CAAD,EAAO;AACxC,gBAAIO,kBAAU,CAACP,CAAC,CAACnE,SAAH,EAAc+D,MAAM,CAACjE,OAAP,CAAeE,SAA7B,CAAd,EAAuD;AACrD,kBAAImE,CAAC,CAACqB,kBAAF,IAAwB,OAAOrB,CAAC,CAACqB,kBAAT,KAAgC,UAA5D,EAAwE;AACtErB,gBAAAA,CAAC,CAACqB,kBAAF,CAAqBzB,MAAM,CAACjE,OAA5B;AACD;;AACD,qBAAOqE,CAAP;AACD;;AACD,mBAAOA,CAAP;AACD,WARY;AAFf;AAYD;;AACD,SAAKH,2BAAL;AAA8C;AAC5C,yFACKF,KADL;AAEEF,UAAAA,iBAAiB,EAAEG,MAAM,CAACjE;AAF5B;AAID;;AACD;AACE,aAAOgE,KAAP;AAnRJ;AAqRD;;AC9RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS2B,sBAAT,cAKG;AAAA,MAL+BrC,mBAK/B,QAL+BA,mBAK/B;AAAA,MALoDsC,OAKpD,QALoDA,OAKpD;AAAA,MAL6DnC,eAK7D,QAL6DA,eAK7D;AAAA,MAJDoC,kBAIC,SAJDA,kBAIC;AAAA,MAHDC,GAGC,SAHDA,GAGC;AAAA,MAFDC,MAEC,SAFDA,MAEC;AAAA,MADDC,SACC,SADDA,SACC;AACD,MAAM3G,UAAU,GAAGiE,mBAAmB,IAAIA,mBAAmB,CAACzD,GAA9D;AACAoG,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMC,iBAAiB,GAAGC,0BAAM,EAAhC;;AACA,QAAI9G,UAAU,IAAIyG,GAAd,IAAqBA,GAAG,CAACM,cAA7B,EAA6C;AAC3C,UAAMA,cAAc,GAAG,IAAIN,GAAG,CAACM,cAAR,EAAvB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,uDAAZ,EAAqEH,iBAArE;;AACAE,MAAAA,cAAc,CAACE,iBAAf,GAAmC,UAAC3G,OAAD,EAAUC,OAAV,EAAsB;AACvD;AACA,YAAIgF,kBAAU,CAACjF,OAAO,CAACE,GAAT,EAAcyD,mBAAmB,CAACzD,GAAlC,CAAV,IAAoD,CAAC4D,eAAzD,EAA0E;AACxE,cAAI6B,WAAW,GAAG,KAAlB;;AACA,cAAI;AACF,gBAAQiB,OAAR,GAAoBP,SAApB,CAAQO,OAAR;AACAjB,YAAAA,WAAW,GAAGiB,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAAC5H,SAA/B,IAA4C4H,OAAO,CAAC3H,YAAlE;AACD,WAHD,CAGE,OAAOC,KAAP,EAAc;AAEf;;AAEDkH,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEzG,OAAnE;AACAiG,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAE;AAAEL,cAAAA,OAAO,EAAPA,OAAF;AAAWC,cAAAA,OAAO,EAAPA,OAAX;AAAoB0F,cAAAA,WAAW,EAAXA;AAApB;AAFQ,WAAD,CAAlB;;AAKA,cAAIA,WAAJ,EAAiB;AACf,gBAAI;AACFxG,cAAAA,UAAU,CAAC,YAAM;AACfwE,gBAAAA,mBAAmB,CAACoD,UAApB;AACAtI,gBAAAA,cAAc;AACf,eAHS,CAAV;AAID,aALD,CAKE,OAAOS,KAAP,EAAc;AACdkH,cAAAA,MAAM,CAACY,OAAP,CAAe,oDAAf;AACD;AACF;AACF;;AACD,YAAI/B,kBAAU,CAACjF,OAAO,CAACE,GAAT,EAAcyD,mBAAmB,CAACzD,GAAlC,CAAV,IAAoD4D,eAAxD,EAAyE;AACvEoC,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAE;AAAEL,cAAAA,OAAO,EAAPA;AAAF;AAFQ,WAAD,CAAlB;AAID;AACF,OAlCD;;AAoCAyG,MAAAA,cAAc,CAACQ,gBAAf,GAAkC,UAACjH,OAAD,EAAUC,OAAV,EAAsB;AACtDmG,QAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkEzG,OAAlE;AACAiG,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAE2G,kBADW;AAEjBzG,UAAAA,OAAO,EAAE;AAAEL,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,OAAO,EAAPA;AAAX;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQAwG,MAAAA,cAAc,CAACS,gBAAf,GAAkC,UAACC,CAAD,EAAI5G,SAAJ,EAAkB;AAClD6F,QAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkEnG,SAAlE;AACA2F,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAE2G,kBADW;AAEjBzG,UAAAA,OAAO,EAAEE;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQAkG,MAAAA,cAAc,CAACW,iBAAf,GAAmC,UAACD,CAAD,EAAIE,aAAJ,EAAsB;AACvDjB,QAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEW,aAAnE;AACAnB,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,UAAAA,OAAO,EAAEgH;AAFQ,SAAD,CAAlB;AAID,OAND;;AAQAZ,MAAAA,cAAc,CAACa,gBAAf,GAAkC,UAAC7G,YAAD,EAAkB;AAClD,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,oDAAZ,EAAkEjG,YAAlE;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACc,eAAf,GAAiC,UAAC9G,YAAD,EAAkB;AACjD,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,mDAAZ,EAAiEjG,YAAjE;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACe,iBAAf,GAAmC,UAAC/G,YAAD,EAAkB;AACnD,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEjG,YAAnE;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACgB,WAAf,GAA6B,UAAChH,YAAD,EAAkB;AAC7C,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,+CAAZ,EAA6DjG,YAA7D;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACiB,aAAf,GAA+B,UAACjH,YAAD,EAAkB;AAC/C,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,iDAAZ,EAA+DjG,YAA/D;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACkB,YAAf,GAA8B,UAAClH,YAAD,EAAkB;AAC9C,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,gDAAZ,EAA8DjG,YAA9D;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD;;AAUAgG,MAAAA,cAAc,CAACmB,iBAAf,GAAmC,UAACnH,YAAD,EAAkB;AACnD,YAAIwE,kBAAU,CAACxE,YAAY,CAACP,GAAd,EAAmByD,mBAAmB,CAACzD,GAAvC,CAAd,EAA2D;AACzDkG,UAAAA,MAAM,CAACM,IAAP,CAAY,qDAAZ,EAAmEjG,YAAnE;AACAyF,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAE2G,mBADW;AAEjBzG,YAAAA,OAAO,EAAEI;AAFQ,WAAD,CAAlB;AAID;AACF,OARD,CA3H2C;;;AAsI3C0F,MAAAA,GAAG,CAAC0B,iBAAJ,CAAsBtB,iBAAtB,EAAyCE,cAAzC;AACD;;AACD,WAAO,YAAM;AACX,UAAIN,GAAG,IAAIA,GAAG,CAAC2B,oBAAf,EAAqC;AACnC1B,QAAAA,MAAM,CAACM,IAAP,CAAY,oEAAZ,EAAkFH,iBAAlF;AACAJ,QAAAA,GAAG,CAAC2B,oBAAJ,CAAyBvB,iBAAzB;AACD;AACF,KALD;AAMD,GAhJQ,EAgJN,CAAC7G,UAAD,EAAauG,OAAb,CAhJM,CAAT;AAiJD;;ACnKD,SAAS8B,aAAT,cAIG;AAAA,MAJsBrI,UAItB,QAJsBA,UAItB;AAAA,MAJkCuG,OAIlC,QAJkCA,OAIlC;AAAA,MAHDC,kBAGC,SAHDA,kBAGC;AAAA,MAFDC,GAEC,SAFDA,GAEC;AAAA,MADDC,MACC,SADDA,MACC;AACDE,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI5G,UAAU,IAAIuG,OAAd,IAAyBE,GAAzB,IAAgCA,GAAG,CAAC6B,YAAxC,EAAsD;AACpD5B,MAAAA,MAAM,CAACM,IAAP,CAAY,0CAAZ,EAAwDhH,UAAxD;AACAyG,MAAAA,GAAG,CAAC6B,YAAJ,CAAiBC,UAAjB,CAA4BvI,UAA5B,EACGwI,IADH,CACQ,UAACzH,YAAD,EAAkB;AACtB2F,QAAAA,MAAM,CAACM,IAAP,CAAY,yCAAZ,EAAuDjG,YAAvD;AACAyF,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,mBADW;AAEjB9H,UAAAA,OAAO,EAAEI;AAFQ,SAAD,CAAlB;AAKA2F,QAAAA,MAAM,CAACM,IAAP,CAAY,uBAAZ,EAAqCjG,YAArC,EAPsB;;AAStBA,QAAAA,YAAY,CAACsG,UAAb;AACD,OAXH,EAYGqB,KAZH,CAYS,UAACC,CAAD,EAAO;AACZjC,QAAAA,MAAM,CAACY,OAAP,CAAe,8CAAf,EAA+D;AAAEtH,UAAAA,UAAU,EAAVA,UAAF;AAAc2I,UAAAA,CAAC,EAADA;AAAd,SAA/D;AACAnC,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI;AADW,SAAD,CAAlB;AAGD,OAjBH;AAkBAhC,MAAAA,GAAG,CAACmC,WAAJ,CAAgB,UAACC,eAAD,EAAkBC,GAAlB,EAA0B;AACxC,YAAIA,GAAJ,EAAS;AACPpC,UAAAA,MAAM,CAAClH,KAAP,CAAa,gCAAb,EAA+CsJ,GAA/C;AACA;AACD;;AACDpC,QAAAA,MAAM,CAACM,IAAP,CAAY,iCAAZ,EAA+C6B,eAA/C;AACArC,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,mBADW;AAEjB9H,UAAAA,OAAO,EAAEkI;AAFQ,SAAD,CAAlB;AAID,OAVD;AAWD;AACF,GAjCQ,EAiCN,CAAC7I,UAAD,EAAauG,OAAb,CAjCM,CAAT;AAkCD;;ACtCD,IAAMwC,gBAAgB,GAAG,EAAzB;AACA,IAAMC,gBAAgB,GAAG,EAAzB;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAmB;AAAA,MAAlB7M,QAAkB,uEAAP,EAAO;AACnD,MAAM8M,aAAa,GAAG9M,QAAQ,CAACA,QAAQ,CAACsF,MAAT,GAAkB,CAAnB,CAA9B;AACA,SAAQwH,aAAa,IAAIA,aAAa,CAACxM,SAAhC,IAA8C,IAArD;AACD,CAHD;;AAKA,SAASyM,uBAAT,cAQG;AAAA,MAPDlF,mBAOC,QAPDA,mBAOC;AAAA,MANDmF,0BAMC,QANDA,0BAMC;AAAA,MALDC,eAKC,QALDA,eAKC;AAAA,MAHD5C,GAGC,SAHDA,GAGC;AAAA,MAFDC,MAEC,SAFDA,MAEC;AAAA,MADDF,kBACC,SADDA,kBACC;AACD,MAAMxG,UAAU,GAAGiE,mBAAmB,IAAIA,mBAAmB,CAACzD,GAA9D;AACAoG,EAAAA,eAAS,CAAC,YAAM;AACdF,IAAAA,MAAM,CAACM,IAAP,CAAY,gDAAZ,EAA8D/C,mBAA9D;AACAuC,IAAAA,kBAAkB,CAAC;AACjB/F,MAAAA,IAAI,EAAEgI;AADW,KAAD,CAAlB;;AAIA,QAAIhC,GAAG,IAAIA,GAAG,CAAC6C,iBAAX,IACCrF,mBADD,IACwBA,mBAAmB,CAACsF,sBADhD,EACwE;AACtE,UAAM9E,iBAAiB,GAAG,IAAIgC,GAAG,CAAC6C,iBAAR,EAA1B;AACA7E,MAAAA,iBAAiB,CAAC+E,cAAlB,GAAmCT,gBAAnC;AACAtE,MAAAA,iBAAiB,CAACgF,WAAlB,GAAgC,IAAhC;AACAhF,MAAAA,iBAAiB,CAACiF,cAAlB,GAAmC,KAAnC;AACAjF,MAAAA,iBAAiB,CAACkF,eAAlB,GAAoC,IAApC;;AACA,UAAIP,0BAAJ,EAAgC;AAC9BQ,QAAAA,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwCxJ,OAAxC,CAAgD,UAACoC,GAAD,EAAS;AACvDyC,UAAAA,iBAAiB,CAACzC,GAAD,CAAjB,GAAyBoH,0BAA0B,CAACpH,GAAD,CAAnD;AACD,SAFD;AAGA0E,QAAAA,MAAM,CAACM,IAAP,CAAY,0DAAZ,EAAwEvC,iBAAxE;AACA+B,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,2BADW;AAEjB9H,UAAAA,OAAO,EAAE8D;AAFQ,SAAD,CAAlB;AAID;;AAEDiC,MAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAE/C,QAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBmF,QAAAA,0BAA0B,EAA1BA;AAAvB,OAA1C;AACA5C,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI;AADW,OAAD,CAAlB;;AAIA,UAAIY,eAAJ,EAAqB;AACnB5E,QAAAA,iBAAiB,CAACqF,cAAlB,GAAmCd,gBAAnC;AACA/E,QAAAA,mBAAmB,CAACsF,sBAApB,CACEF,eADF,EAEE5E,iBAFF,EAIG+D,IAJH,CAIQ,UAACpM,QAAD,EAAc;AAClB,cAAM8H,OAAO,GAAI9H,QAAQ,IAAIA,QAAQ,CAACsF,MAAT,GAAkB,CAA/C;AACA,cAAMyC,oBAAoB,GAAGD,OAAO,GAChC9H,QAAQ,CAAC,CAAD,CAAR,CAAYM,SADoB,GAEhC,IAFJ;AAGA,cAAM2H,6BAA6B,GAAG4E,yBAAyB,CAAC7M,QAAD,CAA/D,CALkB;;AAOlB,cAAM2N,qBAAqB,GAAG,IAAItD,GAAG,CAAC6C,iBAAR,EAA9B;AACAS,UAAAA,qBAAqB,CAACD,cAAtB,GAAuCd,gBAAvC;AACA/E,UAAAA,mBAAmB,CAACsF,sBAApB,CACElF,6BAA6B,IAAI,IAAI+B,IAAJ,GAAW4D,OAAX,EADnC,EAEED,qBAFF,EAGEvB,IAHF,CAGO,UAACyB,YAAD,EAAkB;AACvBzD,YAAAA,kBAAkB,CAAC;AACjB/F,cAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,cAAAA,OAAO,EAAE;AACPvE,gBAAAA,QAAQ,EAARA,QADO;AAEP8H,gBAAAA,OAAO,EAAPA,OAFO;AAGPC,gBAAAA,oBAAoB,EAApBA,oBAHO;AAIPF,gBAAAA,mBAAmB,EAAnBA,mBAJO;AAKPI,gBAAAA,6BAA6B,EAA7BA,6BALO;AAMPD,gBAAAA,eAAe,EAAE6F,YAAY,IAAIA,YAAY,CAACvI,MAAb,GAAsB;AANhD;AAFQ,aAAD,CAAlB;AAWD,WAfD;AAgBD,SA7BH,EA8BGgH,KA9BH,CA8BS,UAAClJ,KAAD,EAAW;AAChBkH,UAAAA,MAAM,CAAClH,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgH,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,YAAAA,OAAO,EAAE;AACPvE,cAAAA,QAAQ,EAAE,EADH;AAEP8H,cAAAA,OAAO,EAAE,KAFF;AAGPC,cAAAA,oBAAoB,EAAE,CAHf;AAIPF,cAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,WAAD,CAAlB;AASD,SAzCH,EA0CGiG,OA1CH,CA0CW,YAAM;AACb,cAAI,CAACb,eAAL,EAAsB;AACpB5J,YAAAA,UAAU,CAAC;AAAA,qBAAM0K,cAAA,EAAN;AAAA,aAAD,CAAV;AACD;;AACDlG,UAAAA,mBAAmB,CAACoD,UAApB;AACD,SA/CH;AAgDD,OAlDD,MAkDO;AACLpD,QAAAA,mBAAmB,CAACsF,sBAApB,CACE,IAAInD,IAAJ,GAAW4D,OAAX,EADF,EAEEvF,iBAFF,EAIG+D,IAJH,CAIQ,UAACpM,QAAD,EAAc;AAClB,cAAM8H,OAAO,GAAI9H,QAAQ,IAAIA,QAAQ,CAACsF,MAAT,GAAkB,CAA/C;AACA,cAAMyC,oBAAoB,GAAGD,OAAO,GAChC9H,QAAQ,CAAC,CAAD,CAAR,CAAYM,SADoB,GAEhC,IAFJ;AAGA,cAAM2H,6BAA6B,GAAG4E,yBAAyB,CAAC7M,QAAD,CAA/D;AACAoK,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,YAAAA,OAAO,EAAE;AACPvE,cAAAA,QAAQ,EAARA,QADO;AAEP8H,cAAAA,OAAO,EAAPA,OAFO;AAGPC,cAAAA,oBAAoB,EAApBA,oBAHO;AAIPF,cAAAA,mBAAmB,EAAnBA,mBAJO;AAKPI,cAAAA,6BAA6B,EAA7BA,6BALO;AAMPD,cAAAA,eAAe,EAAE;AANV;AAFQ,WAAD,CAAlB;AAWD,SArBH,EAsBGsE,KAtBH,CAsBS,UAAClJ,KAAD,EAAW;AAChBkH,UAAAA,MAAM,CAAClH,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgH,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,YAAAA,OAAO,EAAE;AACPvE,cAAAA,QAAQ,EAAE,EADH;AAEP8H,cAAAA,OAAO,EAAE,KAFF;AAGPC,cAAAA,oBAAoB,EAAE,CAHf;AAIPF,cAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,WAAD,CAAlB;AASD,SAjCH,EAkCGiG,OAlCH,CAkCW,YAAM;AACb,cAAI,CAACb,eAAL,EAAsB;AACpB5J,YAAAA,UAAU,CAAC;AAAA,qBAAM0K,cAAA,EAAN;AAAA,aAAD,CAAV;AACD;;AACDlG,UAAAA,mBAAmB,CAACoD,UAApB;AACD,SAvCH;AAwCD;AACF;AACF,GA1HQ,EA0HN,CAACrH,UAAD,EAAaoJ,0BAAb,EAAyCC,eAAzC,CA1HM,CAAT;AA2HA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;ACrJD,SAASe,kBAAT,cAMG;AAAA,MAN2BC,QAM3B,QAN2BA,QAM3B;AAAA,MALD3D,MAKC,SALDA,MAKC;AAAA,MAJDD,GAIC,SAJDA,GAIC;AAAA,MAHDxC,mBAGC,SAHDA,mBAGC;AAAA,MAFDuC,kBAEC,SAFDA,kBAEC;AAAA,MADD4C,0BACC,SADDA,0BACC;AACDxC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAM0D,UAAU,GAAG,CAACD,QAApB;AACA,WAAO,YAAM;AACX;AACA,UAAIC,UAAJ,EAAgB;AACd5D,QAAAA,MAAM,CAACM,IAAP,CAAY,+BAAZ;AACA,2BAAyBP,GAAzB,CAAQ8D,OAAR;AAAA,YAAQA,OAAR,6BAAkB,EAAlB;AACA,YAAMC,WAAW,GAAGD,OAAO,CAACE,eAAR,IAA2B,KAA/C;AAEA,YAAMhG,iBAAiB,GAAG,IAAIgC,GAAG,CAAC6C,iBAAR,EAA1B;AACA7E,QAAAA,iBAAiB,CAAC+E,cAAlB,GAAmC,EAAnC;AACA/E,QAAAA,iBAAiB,CAACiF,cAAlB,GAAmC,KAAnC;AACAjF,QAAAA,iBAAiB,CAACkF,eAAlB,GAAoCa,WAApC;;AAEA,YAAIpB,0BAAJ,EAAgC;AAC9BQ,UAAAA,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwCxJ,OAAxC,CAAgD,UAACoC,GAAD,EAAS;AACvDyC,YAAAA,iBAAiB,CAACzC,GAAD,CAAjB,GAAyBoH,0BAA0B,CAACpH,GAAD,CAAnD;AACD,WAFD;AAGD;;AACD0E,QAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAE/C,UAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBmF,UAAAA,0BAA0B,EAA1BA;AAAvB,SAA1C;AACA5C,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI;AADW,SAAD,CAAlB;AAIAhC,QAAAA,GAAG,CAAC6B,YAAJ,CAAiBC,UAAjB,CAA4BtE,mBAAmB,CAACzD,GAAhD,EACGgI,IADH,CACQ,UAACzH,YAAD,EAAkB;AACtB,cAAM2J,eAAe,GAAG,IAAItE,IAAJ,GAAW4D,OAAX,EAAxB;AAEAjJ,UAAAA,YAAY,CAACwI,sBAAb,CACEmB,eADF,EAEEjG,iBAFF,EAIG+D,IAJH,CAIQ,UAACpM,QAAD,EAAc;AAClBoK,YAAAA,kBAAkB,CAAC;AACjB/F,cAAAA,IAAI,EAAEgI;AADW,aAAD,CAAlB;AAIA,gBAAMvE,OAAO,GAAI9H,QAAQ,IAAIA,QAAQ,CAACsF,MAAT,GAAkB,CAA/C;AACA,gBAAMyC,oBAAoB,GAAGD,OAAO,GAChC9H,QAAQ,CAAC,CAAD,CAAR,CAAYM,SADoB,GAEhC,IAFJ;AAGA8J,YAAAA,kBAAkB,CAAC;AACjB/F,cAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,cAAAA,OAAO,EAAE;AACPvE,gBAAAA,QAAQ,EAARA,QADO;AAEP8H,gBAAAA,OAAO,EAAPA,OAFO;AAGPC,gBAAAA,oBAAoB,EAApBA,oBAHO;AAIPF,gBAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,aAAD,CAAlB;AASAxE,YAAAA,UAAU,CAAC;AAAA,qBAAM0K,cAAA,EAAN;AAAA,aAAD,CAAV;AACD,WAvBH,EAwBGzB,KAxBH,CAwBS,UAAClJ,KAAD,EAAW;AAChBkH,YAAAA,MAAM,CAAClH,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACD,WA1BH,EA2BG0K,OA3BH,CA2BW,YAAM;AACbjG,YAAAA,mBAAmB,CAACoD,UAApB;AACD,WA7BH;AA8BD,SAlCH;AAmCD;AACF,KA1DD;AA2DD,GA7DQ,EA6DN,CAACgD,QAAD,CA7DM,CAAT;AA8DD;;ACtED,SAASM,iBAAT,cASG;AAAA,MARD1G,mBAQC,QARDA,mBAQC;AAAA,MAPDE,oBAOC,QAPDA,oBAOC;AAAA,MANDiF,0BAMC,QANDA,0BAMC;AAAA,MAJDlF,OAIC,SAJDA,OAIC;AAAA,MAHDwC,MAGC,SAHDA,MAGC;AAAA,MAFDF,kBAEC,SAFDA,kBAEC;AAAA,MADDC,GACC,SADDA,GACC;AACD,SAAOmE,iBAAW,CAAC,UAACC,EAAD,EAAQ;AACzB,QAAI,CAAC3G,OAAL,EAAc;AAAE;AAAS;;AACzB,QAAMO,iBAAiB,GAAG,IAAIgC,GAAG,CAAC6C,iBAAR,EAA1B;AACA7E,IAAAA,iBAAiB,CAAC+E,cAAlB,GAAmC,EAAnC;AACA/E,IAAAA,iBAAiB,CAACiF,cAAlB,GAAmC,KAAnC;AACAjF,IAAAA,iBAAiB,CAACkF,eAAlB,GAAoC,IAApC;;AAEA,QAAIP,0BAAJ,EAAgC;AAC9BQ,MAAAA,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwCxJ,OAAxC,CAAgD,UAACoC,GAAD,EAAS;AACvDyC,QAAAA,iBAAiB,CAACzC,GAAD,CAAjB,GAAyBoH,0BAA0B,CAACpH,GAAD,CAAnD;AACD,OAFD;AAGD;;AACD0E,IAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C;AAAE/C,MAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBmF,MAAAA,0BAA0B,EAA1BA;AAAvB,KAA1C;AAEAnF,IAAAA,mBAAmB,CAACsF,sBAApB,CACEpF,oBAAoB,IAAI,IAAIiC,IAAJ,GAAW4D,OAAX,EAD1B,EAEEvF,iBAFF,EAIG+D,IAJH,CAIQ,UAACpM,QAAD,EAAc;AAClB,UAAM0O,eAAe,GAAI1O,QAAQ,IAAIA,QAAQ,CAACsF,MAAT,GAAkB,CAAvD;AACA,UAAMqJ,aAAa,GAAGD,eAAe,GACjC1O,QAAQ,CAAC,CAAD,CAAR,CAAYM,SADqB,GAEjC,IAFJ;AAIA8J,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,QAAAA,OAAO,EAAE;AACPvE,UAAAA,QAAQ,EAARA,QADO;AAEP8H,UAAAA,OAAO,EAAE4G,eAFF;AAGP3G,UAAAA,oBAAoB,EAAE4G,aAHf;AAIP9G,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASA4G,MAAAA,EAAE,CAAC,CAACzO,QAAD,EAAW,IAAX,CAAD,CAAF;AACD,KApBH,EAqBGsM,KArBH,CAqBS,UAAClJ,KAAD,EAAW;AAChBkH,MAAAA,MAAM,CAAClH,KAAP,CAAa,mCAAb,EAAkDA,KAAlD;AACAgH,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,QAAAA,OAAO,EAAE;AACPvE,UAAAA,QAAQ,EAAE,EADH;AAEP8H,UAAAA,OAAO,EAAE,KAFF;AAGPC,UAAAA,oBAAoB,EAAE,CAHf;AAIPF,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASA4G,MAAAA,EAAE,CAAC,CAAC,IAAD,EAAOrL,KAAP,CAAD,CAAF;AACD,KAjCH,EAkCG0K,OAlCH,CAkCW,YAAM;AACbjG,MAAAA,mBAAmB,CAACoD,UAApB;AACD,KApCH;AAqCD,GAnDiB,EAmDf,CAACpD,mBAAD,EAAsBE,oBAAtB,CAnDe,CAAlB;AAoDD;;AC9DD,IAAM6G,WAAW,GAAG,EAApB;;AAEA,SAASC,qBAAT,cASG;AAAA,MARDhH,mBAQC,QARDA,mBAQC;AAAA,MAPDI,6BAOC,QAPDA,6BAOC;AAAA,MAND+E,0BAMC,QANDA,0BAMC;AAAA,MALDhF,eAKC,QALDA,eAKC;AAAA,MAHDsC,MAGC,SAHDA,MAGC;AAAA,MAFDF,kBAEC,SAFDA,kBAEC;AAAA,MADDC,GACC,SADDA,GACC;AACD,SAAOmE,iBAAW,CAAC,UAACC,EAAD,EAAQ;AACzB,QAAI,CAACzG,eAAL,EAAsB;AAAE;AAAS;;AACjC,QAAMK,iBAAiB,GAAG,IAAIgC,GAAG,CAAC6C,iBAAR,EAA1B;AACA7E,IAAAA,iBAAiB,CAACqF,cAAlB,GAAmCkB,WAAnC;AACAvG,IAAAA,iBAAiB,CAACiF,cAAlB,GAAmC,KAAnC;AACAjF,IAAAA,iBAAiB,CAACkF,eAAlB,GAAoC,IAApC;;AAEA,QAAIP,0BAAJ,EAAgC;AAC9BQ,MAAAA,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwCxJ,OAAxC,CAAgD,UAACoC,GAAD,EAAS;AACvDyC,QAAAA,iBAAiB,CAACzC,GAAD,CAAjB,GAAyBoH,0BAA0B,CAACpH,GAAD,CAAnD;AACD,OAFD;AAGD;;AACD0E,IAAAA,MAAM,CAACM,IAAP,CAAY,kCAAZ,EAAgD;AAAE/C,MAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBmF,MAAAA,0BAA0B,EAA1BA;AAAvB,KAAhD;AAEAnF,IAAAA,mBAAmB,CAACsF,sBAApB,CACElF,6BAA6B,IAAI,IAAI+B,IAAJ,GAAW4D,OAAX,EADnC,EAEEvF,iBAFF,EAIG+D,IAJH,CAIQ,UAACpM,QAAD,EAAc;AAClB,UAAM8O,cAAc,GAAI9O,QAAQ,IAAIA,QAAQ,CAACsF,MAAtB,IAAiC,CAAxD;AACA,UAAMoJ,eAAe,GAAII,cAAc,GAAG,CAAlB,IAClBzG,iBAAiB,CAACqF,cAAlB,KAAqCoB,cAD3C;AAEA,UAAMH,aAAa,GAAGD,eAAe,GACjC1O,QAAQ,CAACA,QAAQ,CAACsF,MAAT,GAAkB,CAAnB,CAAR,CAA8BhF,SADG,GAEjC,IAFJ;AAGA8J,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,wBADW;AAEjB9H,QAAAA,OAAO,EAAE;AACPvE,UAAAA,QAAQ,EAARA,QADO;AAEPgI,UAAAA,eAAe,EAAE0G,eAFV;AAGPzG,UAAAA,6BAA6B,EAAE0G,aAHxB;AAIP9G,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASA4G,MAAAA,EAAE,CAAC,CAACzO,QAAD,EAAW,IAAX,CAAD,CAAF;AACD,KArBH,EAsBGsM,KAtBH,CAsBS,UAAClJ,KAAD,EAAW;AAChBkH,MAAAA,MAAM,CAAClH,KAAP,CAAa,yCAAb,EAAwDA,KAAxD;AACAgH,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,yBADW;AAEjB9H,QAAAA,OAAO,EAAE;AACPvE,UAAAA,QAAQ,EAAE,EADH;AAEPgI,UAAAA,eAAe,EAAE,KAFV;AAGPC,UAAAA,6BAA6B,EAAE,CAHxB;AAIPJ,UAAAA,mBAAmB,EAAnBA;AAJO;AAFQ,OAAD,CAAlB;AASA4G,MAAAA,EAAE,CAAC,CAAC,IAAD,EAAOrL,KAAP,CAAD,CAAF;AACD,KAlCH,EAmCG0K,OAnCH,CAmCW,YAAM;AACbjG,MAAAA,mBAAmB,CAACoD,UAApB;AACD,KArCH;AAsCD,GApDiB,EAoDf,CAACpD,mBAAD,EAAsBI,6BAAtB,EAAqDD,eAArD,CApDe,CAAlB;AAqDD;;ACjED,SAAS+G,wBAAT,cAA2F;AAAA,MAAvDlH,mBAAuD,QAAvDA,mBAAuD;AAAA,MAAlCuC,kBAAkC,QAAlCA,kBAAkC;AAAA,MAAVE,MAAU,SAAVA,MAAU;AACzF,SAAOkE,iBAAW,CAAC,UAACrK,OAAD,EAAUsK,EAAV,EAAiB;AAClCnE,IAAAA,MAAM,CAACM,IAAP,CAAY,sDAAZ,EAAoEzG,OAApE;AACA,QAAQ6K,YAAR,GAAyB7K,OAAzB,CAAQ6K,YAAR;AACA1E,IAAAA,MAAM,CAACM,IAAP,CAAY,oEAAZ,EAAkFoE,YAAlF,EAHkC;;AAMlC,QAAIA,YAAY,KAAK,QAAjB,IAA6BA,YAAY,KAAK,SAAlD,EAA6D;AAC3D1E,MAAAA,MAAM,CAACM,IAAP,CAAY,iEAAZ,EAA+EzG,OAA/E;AACAiG,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,4BADW;AAEjB9H,QAAAA,OAAO,EAAEJ,OAAO,CAACoF;AAFA,OAAD,CAAlB;;AAIA,UAAIkF,EAAJ,EAAQ;AAAEA,QAAAA,EAAE;AAAK;;AACjB;AACD,KAdiC;;;AAiBlC5G,IAAAA,mBAAmB,CAACoH,aAApB,CAAkC9K,OAAlC,EAA2C,UAACuI,GAAD,EAAS;AAClDpC,MAAAA,MAAM,CAACM,IAAP,CAAY,mEAAZ,EAAiFoE,YAAjF;;AACA,UAAIP,EAAJ,EAAQ;AAAEA,QAAAA,EAAE,CAAC/B,GAAD,CAAF;AAAU;;AACpB,UAAI,CAACA,GAAL,EAAU;AACRpC,QAAAA,MAAM,CAACM,IAAP,CAAY,+DAAZ,EAA6EzG,OAA7E;AACAiG,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,kBADW;AAEjB9H,UAAAA,OAAO,EAAEJ,OAAO,CAACM;AAFA,SAAD,CAAlB;AAID,OAND,MAMO;AACL6F,QAAAA,MAAM,CAACY,OAAP,CAAe,8DAAf,EAA+EwB,GAA/E;AACD;AACF,KAZD;AAaD,GA9BiB,EA8Bf,CAAC7E,mBAAD,EAAsBuC,kBAAtB,CA9Be,CAAlB;AA+BD;;AC/BD,SAAS8E,wBAAT,cAQG;AAAA,MAPDrH,mBAOC,QAPDA,mBAOC;AAAA,MANDuC,kBAMC,QANDA,kBAMC;AAAA,MALD+E,yBAKC,QALDA,yBAKC;AAAA,MAHD7E,MAGC,SAHDA,MAGC;AAAA,MAFDzG,MAEC,SAFDA,MAEC;AAAA,MADDwG,GACC,SADDA,GACC;AACD,SAAOmE,iBAAW,CAAC,UAAC/J,SAAD,EAAY2K,IAAZ,EAAkBX,EAAlB,EAAyB;AAC1C,QAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,UAAMC,MAAM,GAAG,IAAIlF,GAAG,CAACmF,iBAAR,EAAf;AACAD,MAAAA,MAAM,CAACpL,OAAP,GAAiBmL,GAAjB;AACA,aAAOC,MAAP;AACD,KAJD;;AAMA,QAAME,iBAAiB,GAAGN,yBAAyB,IAC9C,OAAOA,yBAAP,KAAqC,UAD1C;;AAGA,QAAIM,iBAAJ,EAAuB;AACrBnF,MAAAA,MAAM,CAACM,IAAP,CAAY,0DAAZ,EAAwEuE,yBAAxE;AACD;;AAED,QAAMI,MAAM,GAAGJ,yBAAyB,GACpCA,yBAAyB,CAACC,IAAD,CADW,GAEpCC,mBAAmB,CAACD,IAAD,CAFvB;AAIAvH,IAAAA,mBAAmB,CAAC6H,iBAApB,CAAsCjL,SAAtC,EAAiD8K,MAAjD,EAAyD,UAACI,CAAD,EAAIpD,CAAJ,EAAU;AACjEjC,MAAAA,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAA0C2E,MAA1C;AACA,UAAMK,UAAU,GAAGvF,GAAG,CAACwF,qBAAJ,EAAnB;AACA,UAAI1L,OAAO,GAAGwL,CAAd;AACA,UAAIjD,GAAG,GAAGH,CAAV;;AACA,UAAIqD,UAAJ,EAAgB;AACdzL,QAAAA,OAAO,GAAGoI,CAAV;AACAG,QAAAA,GAAG,GAAGiD,CAAN;AACD;;AACD,UAAIlB,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAAC/B,GAAD,EAAMvI,OAAN,CAAF;AACD;;AACD,UAAI,CAACuI,GAAL,EAAU;AACRpC,QAAAA,MAAM,CAACM,IAAP,CAAY,oCAAZ,EAAkDzG,OAAlD;AACAiG,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,kBADW;AAEjB9H,UAAAA,OAAO,EAAE;AACPL,YAAAA,OAAO,EAAE2D,mBADF;AAEP1D,YAAAA,OAAO,EAAPA;AAFO;AAFQ,SAAD,CAAlB;AAOAN,QAAAA,MAAM,CAACiM,OAAP,CACE9L,2BADF,EAEE;AACEG,UAAAA,OAAO,EAAPA,OADF;AAEED,UAAAA,OAAO,EAAE2D;AAFX,SAFF;AAOD,OAhBD,MAgBO;AACLyC,QAAAA,MAAM,CAACY,OAAP,CAAe,mCAAf,EAAoDwB,GAApD;AACD;AACF,KA/BD;AAgCD,GAlDiB,EAkDf,CAAC7E,mBAAmB,CAACzD,GAArB,EAA0BgG,kBAA1B,EAA8C+E,yBAA9C,CAlDe,CAAlB;AAmDD;;AC7DD,SAASY,wBAAT,cAKG;AAAA,MAJDlI,mBAIC,QAJDA,mBAIC;AAAA,MAHDuC,kBAGC,QAHDA,kBAGC;AAAA,MADDE,MACC,SADDA,MACC;AACD,SAAOkE,iBAAW,CAAC,UAACwB,aAAD,EAAmB;AACpC1F,IAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsDoF,aAAtD;AACA,QAAQC,WAAR,GAA8BD,aAA9B,CAAQC,WAAR;AAAA,QAAqBC,IAArB,GAA8BF,aAA9B,CAAqBE,IAArB;;AACA,QAAIF,aAAa,IAAI,OAAOA,aAAa,CAACG,YAArB,KAAsC,UAAvD,IACCH,aAAa,CAACG,YAAd,EADL,EAEE;AACA;AACAH,MAAAA,aAAa,CAAChB,YAAd,GAA6B,SAA7B;AACA5E,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,QAAAA,OAAO,EAAEyL;AAFQ,OAAD,CAAlB,CAHA;;AASA,UAAIC,WAAW,KAAK,MAApB,EAA4B;AAC1BpI,QAAAA,mBAAmB,CAChBuI,iBADH,CACqBJ,aADrB,EAEG5D,IAFH,CAEQ,UAACjI,OAAD,EAAa;AACjBmG,UAAAA,MAAM,CAACM,IAAP,CAAY,qCAAZ,EAAmD;AAAEzG,YAAAA,OAAO,EAAPA;AAAF,WAAnD;AACAiG,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,qBADW;AAEjB9H,YAAAA,OAAO,EAAEJ;AAFQ,WAAD,CAAlB;AAID,SARH,EASGmI,KATH,CASS,UAACC,CAAD,EAAO;AACZjC,UAAAA,MAAM,CAACY,OAAP,CAAe,oCAAf,EAAqD;AAAEqB,YAAAA,CAAC,EAADA;AAAF,WAArD,EADY;;AAGZyD,UAAAA,aAAa,CAAChB,YAAd,GAA6B,QAA7B;AACA5E,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,YAAAA,OAAO,EAAEyL;AAFQ,WAAD,CAAlB;AAID,SAjBH,EAD0B;;AAqB1BA,QAAAA,aAAa,CAAChB,YAAd,GAA6B,SAA7B;AACA5E,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,UAAAA,OAAO,EAAEyL;AAFQ,SAAD,CAAlB;AAIA;AACD;;AAED,UAAIC,WAAW,KAAK,MAApB,EAA4B;AAC1BpI,QAAAA,mBAAmB,CAChBwI,iBADH,CACqBL,aADrB,EACoCE,IADpC,EAEG9D,IAFH,CAEQ,UAACjI,OAAD,EAAa;AACjBmG,UAAAA,MAAM,CAACM,IAAP,CAAY,0CAAZ,EAAwD;AAAEzG,YAAAA,OAAO,EAAPA;AAAF,WAAxD;AACAiG,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,qBADW;AAEjB9H,YAAAA,OAAO,EAAEJ;AAFQ,WAAD,CAAlB;AAID,SARH,EASGmI,KATH,CASS,UAACC,CAAD,EAAO;AACZjC,UAAAA,MAAM,CAACY,OAAP,CAAe,yCAAf,EAA0D;AAAEqB,YAAAA,CAAC,EAADA;AAAF,WAA1D,EADY;;AAGZyD,UAAAA,aAAa,CAAChB,YAAd,GAA6B,QAA7B;AACA5E,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,YAAAA,OAAO,EAAEyL;AAFQ,WAAD,CAAlB;AAID,SAjBH,EAD0B;;AAqB1BA,QAAAA,aAAa,CAAChB,YAAd,GAA6B,SAA7B;AACA5E,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,UAAAA,OAAO,EAAEyL;AAFQ,SAAD,CAAlB;AAID;AACF,KAnED,MAmEO;AACL;AACA;AACAM,MAAAA,OAAO,CAAClN,KAAR,CAAc,2BAAd;AACAkH,MAAAA,MAAM,CAACY,OAAP,CAAe,2BAAf,EAA4C8E,aAA5C;AACD;AACF,GA5EiB,EA4Ef,CAACnI,mBAAD,EAAsBuC,kBAAtB,CA5Ee,CAAlB;AA6ED;;ACjFc,SAASmG,sBAAT,cAKZ;AAAA,MAL8C1I,mBAK9C,QAL8CA,mBAK9C;AAAA,MALmE2I,uBAKnE,QALmEA,uBAKnE;AAAA,MAJDnG,GAIC,SAJDA,GAIC;AAAA,MAHDC,MAGC,SAHDA,MAGC;AAAA,MAFDzG,MAEC,SAFDA,MAEC;AAAA,MADDuG,kBACC,SADDA,kBACC;AACD,MAAMqG,eAAe,GAAGC,YAAM,CAAC,IAAD,CAA9B;AAEA,MAAMC,WAAW,GAAGnC,iBAAW,CAC7B,YAAM;AACJ,QAAMY,IAAI,GAAGqB,eAAe,CAAC3F,OAAhB,CAAwB8F,KAArC;;AACA,QAAMvB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,UAAMnL,OAAO,GAAI,OAAOmL,GAAP,KAAe,QAAhB,GAA4BA,GAAG,CAACuB,IAAJ,EAA5B,GAAyCvB,GAAzD;AACA,UAAMC,MAAM,GAAG,IAAIlF,GAAG,CAACmF,iBAAR,EAAf;AACAD,MAAAA,MAAM,CAACpL,OAAP,GAAiBA,OAAjB;AACA,aAAOoL,MAAP;AACD,KALD;;AAOA,QAAME,iBAAiB,GAAGe,uBAAuB,IAC5C,OAAOA,uBAAP,KAAmC,UADxC;;AAGA,QAAIf,iBAAJ,EAAuB;AACrBnF,MAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsE4F,uBAAtE;AACD;;AAED,QAAMjB,MAAM,GAAGiB,uBAAuB,GAClCA,uBAAuB,CAACpB,IAAD,CADW,GAElCC,mBAAmB,CAACD,IAAD,CAFvB;AAIA9E,IAAAA,MAAM,CAACM,IAAP,CAAY,sCAAZ,EAAoD2E,MAApD;AACA,QAAMuB,UAAU,GAAGjJ,mBAAmB,CAACkJ,eAApB,CAAoCxB,MAApC,EAA4C,UAACyB,GAAD,EAAMtE,GAAN,EAAc;AAC3E,UAAMkD,UAAU,GAAGvF,GAAG,CAACwF,qBAAJ,EAAnB;AACA,UAAI1L,OAAO,GAAG6M,GAAd;AACA,UAAI5N,KAAK,GAAGsJ,GAAZ;;AACA,UAAIkD,UAAJ,EAAgB;AACdzL,QAAAA,OAAO,GAAGuI,GAAV;AACAtJ,QAAAA,KAAK,GAAG4N,GAAR;AACD,OAP0E;AAS3E;;;AACA,UAAI5N,KAAJ,EAAW;AACTkH,QAAAA,MAAM,CAACY,OAAP,CAAe,kCAAf,EAAmD;AACjD/G,UAAAA,OAAO,EAAPA;AADiD,SAAnD;AAGAiG,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,UAAAA,OAAO,EAAEJ;AAFQ,SAAD,CAAlB;AAIA;AACD;;AACDmG,MAAAA,MAAM,CAACM,IAAP,CAAY,mCAAZ,EAAiDzG,OAAjD;AACAiG,MAAAA,kBAAkB,CAAC;AACjB/F,QAAAA,IAAI,EAAEgI,qBADW;AAEjB9H,QAAAA,OAAO,EAAEJ;AAFQ,OAAD,CAAlB;AAID,KAzBkB,CAAnB;AA0BAN,IAAAA,MAAM,CAACiM,OAAP,CAAe9L,0BAAf,EAA0C;AACxC;AACR;AACQG,MAAAA,OAAO,EAAE2M,UAH+B;AAIxC5M,MAAAA,OAAO,EAAE2D;AAJ+B,KAA1C;AAMAxE,IAAAA,UAAU,CAAC;AAAA,aAAM0K,cAAA,EAAN;AAAA,KAAD,CAAV;AACD,GAvD4B,EAwD7B,CAAClG,mBAAD,EAAsB2I,uBAAtB,CAxD6B,CAA/B;AA2DA,SAAO,CAACC,eAAD,EAAkBE,WAAlB,CAAP;AACD;;ACpEc,SAASM,0BAAT,cASZ;AAAA,MARDpJ,mBAQC,QARDA,mBAQC;AAAA,MAPDqJ,uBAOC,QAPDA,uBAOC;AAAA,mCANDC,gBAMC;AAAA,MANDA,gBAMC,sCANkB,EAMlB;AAAA,MAJD9G,GAIC,SAJDA,GAIC;AAAA,MAHDC,MAGC,SAHDA,MAGC;AAAA,MAFDzG,MAEC,SAFDA,MAEC;AAAA,MADDuG,kBACC,SADDA,kBACC;AACD,MAAMuG,WAAW,GAAGnC,iBAAW,CAAC,UAAC0B,IAAD,EAAU;AACxC,QACEkB,eADF,GAIID,gBAJJ,CACEC,eADF;AAAA,QAEEC,aAFF,GAIIF,gBAJJ,CAEEE,aAFF;AAAA,QAGEC,cAHF,GAIIH,gBAJJ,CAGEG,cAHF;AAKA,QAAMC,kBAAkB,GAAGL,uBAAuB,IAAI,OAAOA,uBAAP,KAAmC,UAAzF;AAEA,QAAMM,oBAAoB,GAAItB,IAAI,CAAC7L,IAAL,KAAc,WAAd,IAA6B6L,IAAI,CAAC7L,IAAL,KAAc,WAA3C,IAA0D6L,IAAI,CAAC7L,IAAL,KAAc,YAAtG;AACA,QAAMoN,iBAAiB,GAAIL,eAAe,GAAG,CAAnB,IAA0BA,eAAe,GAAG,CAAtE,CATwC;;AAWxC,QAAMM,uBAAuB,GAAG3D,UAAA,CAAiBsD,aAAjB,KAC3BtD,UAAA,CAAiBuD,cAAjB,CADL;AAGA,QAAMK,gBAAgB,GAAGH,oBAAoB,KAAKC,iBAAiB,IAAIC,uBAA1B,CAA7C;;AAEA,QAAMrC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACuC,KAAD,EAAW;AACrC,UAAMrC,MAAM,GAAG,IAAIlF,GAAG,CAACwH,iBAAR,EAAf;AACAtC,MAAAA,MAAM,CAACW,IAAP,GAAc0B,KAAd;AACA,aAAOrC,MAAP;AACD,KAJD;;AAMA,QAAIoC,gBAAJ,EAAsB;AAAE;AACtB,UAAI;AACF,YAAMG,KAAK,GAAG9O,QAAQ,CAAC+O,aAAT,CAAuB,KAAvB,CAAd;AACAD,QAAAA,KAAK,CAACE,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAAZ;;AACA4B,QAAAA,KAAK,CAACK,MAAN,GAAe,YAAM;AACnBF,UAAAA,GAAG,CAACG,eAAJ,CAAoBN,KAAK,CAACE,GAA1B;AACA,cAAMK,MAAM,GAAGrP,QAAQ,CAAC+O,aAAT,CAAuB,QAAvB,CAAf;AACA,cAAMO,UAAU,GAAGR,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACU,KAA/C;AACA,cAAMC,WAAW,GAAGX,KAAK,CAACY,aAAN,IAAuBZ,KAAK,CAACa,MAAjD;AAEA,cAAIC,WAAW,GAAG7E,UAAA,CAAiBsD,aAAjB,KAAmCiB,UAArD;AACA,cAAIO,YAAY,GAAG9E,UAAA,CAAiBuD,cAAjB,KAAoCmB,WAAvD,CAPmB;AAUnB;AACA;;AACA,cAAIvC,IAAI,CAAC7L,IAAL,KAAc,WAAd,IAA6B,CAACqN,uBAAlC,EAA2D;AACzDkB,YAAAA,WAAW,IAAIxB,eAAf;AACAyB,YAAAA,YAAY,IAAIzB,eAAhB;AACD;;AAEDiB,UAAAA,MAAM,CAACG,KAAP,GAAeI,WAAf;AACAP,UAAAA,MAAM,CAACM,MAAP,GAAgBE,YAAhB;AACA,cAAMjS,OAAO,GAAGyR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAhB;AACAlS,UAAAA,OAAO,CAACmS,SAAR,CAAkBjB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+Bc,WAA/B,EAA4CC,YAA5C;AACAjS,UAAAA,OAAO,CAACyR,MAAR,CAAeW,MAAf,CACE,UAACC,YAAD,EAAkB;AAChB,gBAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,CAACF,YAAD,CAAT,EAAyB/C,IAAI,CAACkD,IAA9B,EAAoC;AAAE/O,cAAAA,IAAI,EAAE6L,IAAI,CAAC7L;AAAb,aAApC,CAAvB;;AACA,gBAAIkN,kBAAJ,EAAwB;AACtBjH,cAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsEsG,uBAAtE;AACD;;AACD,gBAAM3B,MAAM,GAAGgC,kBAAkB,GAC7BL,uBAAuB,CAACgC,cAAD,CADM,GAE7B7D,mBAAmB,CAAC6D,cAAD,CAFvB;AAGA5I,YAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsD2E,MAAtD;AACA,gBAAM8D,cAAc,GAAGxL,mBAAmB,CAACyL,eAApB,CACrB/D,MADqB,EAErB,UAACgE,QAAD,EAAW7G,GAAX,EAAmB;AACjB,kBAAMkD,UAAU,GAAGvF,GAAG,CAACwF,qBAAJ,EAAnB;;AACA,0BAAyBD,UAAU,GAAG,CAAClD,GAAD,EAAM6G,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAW7G,GAAX,CAAxD;AAAA;AAAA,kBAAOvI,OAAP;AAAA,kBAAgBf,KAAhB;;AACA,kBAAIA,KAAJ,EAAW;AACT;AACA;AACAkH,gBAAAA,MAAM,CAAClH,KAAP,CAAa,uCAAb,EAAsD;AAAEe,kBAAAA,OAAO,EAAPA,OAAF;AAAWf,kBAAAA,KAAK,EAALA;AAAX,iBAAtD;AACAe,gBAAAA,OAAO,CAACqP,QAAR,GAAmBvB,GAAG,CAACC,eAAJ,CAAoBgB,cAApB,CAAnB;AACA/O,gBAAAA,OAAO,CAAC+L,IAAR,GAAegD,cAAf;AACA9I,gBAAAA,kBAAkB,CAAC;AACjB/F,kBAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,kBAAAA,OAAO,EAAEJ;AAFQ,iBAAD,CAAlB;AAIA;AACD;;AACDmG,cAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsDzG,OAAtD;AACAiG,cAAAA,kBAAkB,CAAC;AACjB/F,gBAAAA,IAAI,EAAEgI,qBADW;AAEjB9H,gBAAAA,OAAO,EAAEJ;AAFQ,eAAD,CAAlB;AAID,aAtBoB,CAAvB;AAwBAN,YAAAA,MAAM,CAACiM,OAAP,CAAe9L,0BAAf,EAA0C;AACxC;AAChB;AACgBG,cAAAA,OAAO,4EACFkP,cADE;AAELjP,gBAAAA,GAAG,EAAE6N,GAAG,CAACC,eAAJ,CAAoBgB,cAApB,CAFA;AAGL;AACAlE,gBAAAA,YAAY,EAAE;AAJT,gBAHiC;AASxC9K,cAAAA,OAAO,EAAE2D;AAT+B,aAA1C;AAWAxE,YAAAA,UAAU,CAAC;AAAA,qBAAM0K,cAAA,EAAN;AAAA,aAAD,EAA+B,IAA/B,CAAV;AACD,WA9CH,EA+CEmC,IAAI,CAAC7L,IA/CP,EAgDE+M,eAhDF;AAkDD,SAvED;AAwED,OA3ED,CA2EE,OAAOhO,KAAP,EAAc;AACdkH,QAAAA,MAAM,CAAClH,KAAP,CAAa,uCAAb,EAAsDA,KAAtD;AACD;AACF,KA/ED,MA+EO;AAAE;AACP,UAAImO,kBAAJ,EAAwB;AACtBjH,QAAAA,MAAM,CAACM,IAAP,CAAY,wDAAZ,EAAsEsG,uBAAtE;AACD;;AACD,UAAM3B,MAAM,GAAG2B,uBAAuB,GAClCA,uBAAuB,CAAChB,IAAD,CADW,GAElCb,mBAAmB,CAACa,IAAD,CAFvB;AAGA5F,MAAAA,MAAM,CAACM,IAAP,CAAY,wCAAZ,EAAsD2E,MAAtD;AAEA,UAAMuB,UAAU,GAAGjJ,mBAAmB,CAACyL,eAApB,CAAoC/D,MAApC,EAA4C,UAACgE,QAAD,EAAW7G,GAAX,EAAmB;AAChF,YAAMkD,UAAU,GAAGvF,GAAG,CAACwF,qBAAJ,EAAnB;;AACA,oBAAyBD,UAAU,GAAG,CAAClD,GAAD,EAAM6G,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAW7G,GAAX,CAAxD;AAAA;AAAA,YAAOvI,OAAP;AAAA,YAAgBf,KAAhB;;AACA,YAAIA,KAAJ,EAAW;AACT;AACA;AACAkH,UAAAA,MAAM,CAAClH,KAAP,CAAa,uCAAb,EAAsD;AAAEe,YAAAA,OAAO,EAAPA,OAAF;AAAWf,YAAAA,KAAK,EAALA;AAAX,WAAtD;AACAe,UAAAA,OAAO,CAACqP,QAAR,GAAmBvB,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAAnB;AACA/L,UAAAA,OAAO,CAAC+L,IAAR,GAAeA,IAAf;AACA9F,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI,sBADW;AAEjB9H,YAAAA,OAAO,EAAEJ;AAFQ,WAAD,CAAlB;AAIA;AACD;;AACDmG,QAAAA,MAAM,CAACM,IAAP,CAAY,mCAAZ,EAAiDzG,OAAjD;AACAiG,QAAAA,kBAAkB,CAAC;AACjB/F,UAAAA,IAAI,EAAEgI,qBADW;AAEjB9H,UAAAA,OAAO,EAAEJ;AAFQ,SAAD,CAAlB;AAID,OApBkB,CAAnB;AAqBAN,MAAAA,MAAM,CAACiM,OAAP,CAAe9L,0BAAf,EAA0C;AACxC;AACR;AACQG,QAAAA,OAAO,4EACF2M,UADE;AAEL1M,UAAAA,GAAG,EAAE6N,GAAG,CAACC,eAAJ,CAAoBhC,IAApB,CAFA;AAGL;AACAlB,UAAAA,YAAY,EAAE;AAJT,UAHiC;AASxC9K,QAAAA,OAAO,EAAE2D;AAT+B,OAA1C;AAWAxE,MAAAA,UAAU,CAAC;AAAA,eAAM0K,cAAA,EAAN;AAAA,OAAD,EAA+B,IAA/B,CAAV;AACD;AACF,GAhJ8B,EAgJ5B,CAAClG,mBAAD,EAAsBqJ,uBAAtB,EAA+CC,gBAA/C,CAhJ4B,CAA/B;AAiJA,SAAO,CAACR,WAAD,CAAP;AACD;;AC3Jc,SAAS8C,yBAAT,cAOZ;AAAA,MANDvO,cAMC,QANDA,cAMC;AAAA,MANewO,cAMf,QANeA,cAMf;AAAA,MAJDtF,WAIC,SAJDA,WAIC;AAAA,MAHD9D,MAGC,SAHDA,MAGC;AAAA,MAFDrE,MAEC,SAFDA,MAEC;AAAA,MADD0N,YACC,SADDA,YACC;;AACD;AACA,SAAOC,aAAO,CAAC;AAAA,WAAM,iBAMf;AAAA,UALJC,SAKI,SALJA,SAKI;AAAA,UAJJC,gBAII,SAJJA,gBAII;AAAA,UAHJ3P,OAGI,SAHJA,OAGI;AAAA,UAFJ4P,aAEI,SAFJA,aAEI;AAAA,wCADJC,gBACI;AAAA,UADJA,gBACI,sCADe,EACf;;AACJ,UAAI,CAAC5F,WAAD,IAAgB,EAAEyF,SAAS,IAAIC,gBAAb,IAAiC3P,OAAjC,IAA4C4P,aAA9C,CAApB,EAAkF;AAChFzJ,QAAAA,MAAM,CAACY,OAAP,CAAe,mDAAf;AACA,eAAO,IAAP;AACD;;AAED,0BACE+I,wCAACC,sBAAD;AACE,QAAA,SAAS,EAAEL,SADb;AAEE,QAAA,gBAAgB,EAAEC,gBAFpB;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,gBAAgB,EAAEC;AAJpB,SAOIL,YAAY,CAAC1M,GAAb,CAAiB,UAACkN,KAAD,EAAW;AAC1B,YAAMC,eAAe,GAAGjQ,OAAO,CAACkQ,SAAR,CACrB1L,MADqB,CACd,UAAC2L,QAAD;AAAA,iBAAcA,QAAQ,CAAC1O,GAAT,KAAiBuO,KAAK,CAACvO,GAArC;AAAA,SADc,EAC4B,CAD5B,CAAxB;AAEA,YAAM2O,SAAS,GAAGH,eAAe,GAC7B,EAAEA,eAAe,CAACI,OAAhB,CAAwBC,OAAxB,CAAgCxO,MAAhC,IAA0C,CAA5C,CAD6B,GAE7B,KAFJ;AAGA,4BACEgO,wCAACS,sBAAD;AACE,UAAA,GAAG,EAAEP,KAAK,CAACvO,GADb;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,MAAM,EAAC,MAHT;AAIE,UAAA,QAAQ,EAAE2O,SAJZ;AAKE,UAAA,OAAO,EAAE,mBAAM;AACbR,YAAAA,aAAa;AACbL,YAAAA,cAAc,CAACvP,OAAD,EAAUgQ,KAAK,CAACvO,GAAhB,EAAqB2O,SAArB,CAAd;AACD;AARH,wBAUEN,wCAACU,qBAAD;AACE,UAAA,GAAG,EAAER,KAAK,CAAC/P,GADb;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,MAAM,EAAC,MAHT;AAIE,UAAA,gBAAgB,eACd6P,wCAACW,YAAD;AAAM,YAAA,KAAK,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAC,MAA1B;AAAiC,YAAA,IAAI,EAAEC,iBAAS,CAACC;AAAjD;AALJ,UAVF,CADF;AAqBD,OA3BD,CAPJ,CADF;AAuCD,KAnDc;AAAA,GAAD,EAmDX,CAAC5P,cAAD,EAAiBwO,cAAjB,CAnDW,CAAd;AAoDD;;AClEc,SAASqB,yBAAT,cAAwE;AAAA,MAAnClN,mBAAmC,QAAnCA,mBAAmC;AAAA,MAAVyC,MAAU,SAAVA,MAAU;AACrF,SAAOkE,iBAAW,CAAC,UAACrK,OAAD,EAAUyB,GAAV,EAAe2O,SAAf,EAA6B;AAC9C,QAAIA,SAAJ,EAAe;AACb1M,MAAAA,mBAAmB,CAACmN,cAApB,CAAmC7Q,OAAnC,EAA4CyB,GAA5C,EACGwG,IADH,CACQ,UAAC4E,GAAD,EAAS;AACb1G,QAAAA,MAAM,CAACM,IAAP,CAAY,yBAAZ,EAAuCoG,GAAvC;AACD,OAHH,EAIG1E,KAJH,CAIS,UAACI,GAAD,EAAS;AACdpC,QAAAA,MAAM,CAACY,OAAP,CAAe,wBAAf,EAAyCwB,GAAzC;AACD,OANH;AAOA;AACD;;AACD7E,IAAAA,mBAAmB,CAACoN,WAApB,CAAgC9Q,OAAhC,EAAyCyB,GAAzC,EACGwG,IADH,CACQ,UAAC4E,GAAD,EAAS;AACb1G,MAAAA,MAAM,CAACM,IAAP,CAAY,sBAAZ,EAAoCoG,GAApC;AACD,KAHH,EAIG1E,KAJH,CAIS,UAACI,GAAD,EAAS;AACdpC,MAAAA,MAAM,CAACY,OAAP,CAAe,qBAAf,EAAsCwB,GAAtC;AACD,KANH;AAOD,GAlBiB,EAkBf,CAAC7E,mBAAD,CAlBe,CAAlB;AAmBD;;ACRD,SAASqN,kBAAT,CAA4BC,EAA5B,EAIoCC,EAJpC;MACEC,kBAAkB;MAClBC,uBAAuB;MACvBxO,WAAW;MAEXwD,MAAM;AAEN,SAAOkE,iBAAW,CAChB,UAAClO,SAAD,EAAoBmE,SAApB;AACE,QAAM8Q,SAAS,GAAGzO,WAAW,CAACoC,IAAZ,CAAiB,UAACN,CAAD;AAAO,aACxCA,CAAC,CAACnE,SAAF,KAAgBA,SADwB;AAEzC,KAFiB,CAAlB;AAGA6Q,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAjS,IAAAA,UAAU,CAAC;AACT,UAAIkS,SAAJ,EAAe;AACbjL,QAAAA,MAAM,CAACM,IAAP,CAAY,iDAAZ;AACA0K,QAAAA,uBAAuB,CAAC7Q,SAAD,CAAvB;AACD,OAHD,MAGO;AACL6F,QAAAA,MAAM,CAACM,IAAP,CAAY,sDAAZ;AACAyK,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAA,QAAAA,kBAAkB,CAAC/U,SAAD,CAAlB;AACAgV,QAAAA,uBAAuB,CAAC7Q,SAAD,CAAvB;AACD;AACF,KAVS,CAAV;AAWD,GAjBe,EAiBb,CACD4Q,kBADC,EAEDC,uBAFC,EAGDxO,WAHC,CAjBa,CAAlB;AAuBD;;AC5CM,IAAM0O,UAAU,GAAG;AACxBC,EAAAA,GAAG,EAAE,KADmB;AAExBC,EAAAA,GAAG,EAAE,KAFmB;AAGxBC,EAAAA,GAAG,EAAE,KAHmB;AAIxBC,EAAAA,UAAU,EAAE,YAJY;AAKxBC,EAAAA,UAAU,EAAE,YALY;AAMxBC,EAAAA,MAAM,EAAE,QANgB;AAOxBC,EAAAA,MAAM,EAAE,QAPgB;AAQxBC,EAAAA,MAAM,EAAE,QARgB;AASxBC,EAAAA,QAAQ,EAAE,UATc;AAUxBC,EAAAA,QAAQ,EAAE,UAVc;AAWxBC,EAAAA,SAAS,EAAE,WAXa;AAYxBC,EAAAA,SAAS,EAAE,WAZa;AAaxBC,EAAAA,SAAS,EAAE,WAba;AAcxBC,EAAAA,gBAAgB,EAAE;AAdM,CAAnB;AAiBA,IAAMC,QAAM,GAAG;AACpBC,EAAAA,cAAc,EAAE,gBADI;AAEpBC,EAAAA,cAAc,EAAE,gBAFI;AAGpBC,EAAAA,cAAc,EAAE,gBAHI;AAIpBC,EAAAA,cAAc,EAAE,gBAJI;AAKpBC,EAAAA,cAAc,EAAE,gBALI;AAMpBC,EAAAA,WAAW,EAAE,aANO;AAOpBC,EAAAA,WAAW,EAAE,aAPO;AAQpBC,EAAAA,OAAO,EAAE,SARW;AASpBC,EAAAA,KAAK,EAAE,OATa;AAUpBC,EAAAA,WAAW,EAAE;AAVO,CAAf;;ACfA,SAASC,2BAAT,CAAqC7S,IAArC,EAA2C;AAChD,UAAQA,IAAR;AACE,SAAKmR,UAAU,CAACC,GAAhB;AAAqB,aAAO,qBAAP;;AACrB,SAAKD,UAAU,CAACE,GAAhB;AAAqB,aAAO,qBAAP;;AACrB,SAAKF,UAAU,CAACG,GAAhB;AAAqB,aAAO,iBAAP;;AACrB,SAAKH,UAAU,CAACI,UAAhB;AAA4B,aAAO,4BAAP;;AAC5B,SAAKJ,UAAU,CAACK,UAAhB;AAA4B,aAAO,4BAAP;;AAC5B,SAAKL,UAAU,CAACM,MAAhB;AAAwB,aAAO,wBAAP;;AACxB,SAAKN,UAAU,CAACO,MAAhB;AAAwB,aAAO,wBAAP;;AACxB,SAAKP,UAAU,CAACQ,MAAhB;AAAwB,aAAO,oBAAP;;AACxB,SAAKR,UAAU,CAACS,QAAhB;AAA0B,aAAO,0BAAP;;AAC1B,SAAKT,UAAU,CAACU,QAAhB;AAA0B,aAAO,0BAAP;;AAC1B,SAAKV,UAAU,CAACW,SAAhB;AAA2B,aAAO,2BAAP;;AAC3B,SAAKX,UAAU,CAACY,SAAhB;AAA2B,aAAO,2BAAP;;AAC3B,SAAKZ,UAAU,CAACa,SAAhB;AAA2B,aAAO,2BAAP;;AAC3B,SAAKb,UAAU,CAACc,gBAAhB;AAAkC,aAAO,kCAAP;;AAClC;AAAS,aAAO,IAAP;AAfX;AAiBD;AAEM,SAASa,wBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,UAAQA,KAAR;AACE,SAAKb,QAAM,CAACC,cAAZ;AAA4B,aAAO,sCAAP;;AAC5B,SAAKD,QAAM,CAACE,cAAZ;AAA4B,aAAO,sCAAP;;AAC5B,SAAKF,QAAM,CAACG,cAAZ;AAA4B,aAAO,sCAAP;;AAC5B,SAAKH,QAAM,CAACI,cAAZ;AAA4B,aAAO,sCAAP;;AAC5B,SAAKJ,QAAM,CAACK,cAAZ;AAA4B,aAAO,kCAAP;;AAC5B,SAAKL,QAAM,CAACM,WAAZ;AAAyB,aAAO,mCAAP;;AACzB,SAAKN,QAAM,CAACO,WAAZ;AAAyB,aAAO,mCAAP;;AACzB,SAAKP,QAAM,CAACQ,OAAZ;AAAqB,aAAO,+BAAP;AAAwC;;AAC7D,SAAKR,QAAM,CAACS,KAAZ;AAAmB,aAAO,6BAAP;;AACnB,SAAKT,QAAM,CAACU,WAAZ;AAAyB,aAAO,mCAAP;;AACzB;AAAS,aAAO,IAAP;AAXX;AAaD;;AC5Bc,SAASI,KAAT,OAEZ;AAAA,MADDC,QACC,QADDA,QACC;AAAA,MADSC,SACT,QADSA,SACT;AAAA,MADoBH,KACpB,QADoBA,KACpB;AAAA,MAD2BI,KAC3B,QAD2BA,KAC3B;AAAA,MADkCnT,IAClC,QADkCA,IAClC;AACD,sBACE4P;AACE,IAAA,SAAS,EAAE,iDACLwD,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAET,gBAFS,EAGTlT,IAAI,GAAG6S,2BAA2B,CAAC7S,IAAD,CAA9B,GAAuC,EAHlC,EAIT+S,KAAK,GAAGD,wBAAsB,CAACC,KAAD,CAAzB,GAAmC,EAJ/B,GAKTO,IALS,CAKJ,GALI,CADb;AAOE,IAAA,KAAK,EAAEH;AAPT,KASGF,QATH,CADF;AAaD;AAEDD,KAAK,CAACO,SAAN,GAAkB;AAChBL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADK;AAKhB1T,EAAAA,IAAI,EAAEwT,6BAAS,CAACI,KAAV,kDAAoBzK,MAAM,CAACC,IAAP,CAAY+H,UAAZ,CAApB,IAA6C,EAA7C,GALU;AAMhB4B,EAAAA,KAAK,EAAES,6BAAS,CAACI,KAAV,kDAAoBzK,MAAM,CAACC,IAAP,CAAY8I,QAAZ,CAApB,IAAyC,EAAzC,GANS;AAOhBe,EAAAA,QAAQ,EAAEO,6BAAS,CAACC,SAAV,CAAoB,CAC5BD,6BAAS,CAACE,MADkB,EAE5BF,6BAAS,CAACK,MAFkB,EAG5BL,6BAAS,CAACM,OAHkB,EAI5BN,6BAAS,CAACO,GAJkB,CAApB,CAPM;AAahBZ,EAAAA,KAAK,EAAEK,6BAAS,CAACQ;AAbD,CAAlB;AAgBAhB,KAAK,CAACiB,YAAN,GAAqB;AACnBf,EAAAA,SAAS,EAAE,EADQ;AAEnBlT,EAAAA,IAAI,EAAE,EAFa;AAGnB+S,EAAAA,KAAK,EAAE,EAHY;AAInBE,EAAAA,QAAQ,EAAE,IAJS;AAKnBE,EAAAA,KAAK,EAAEe;AALY,CAArB;AAQA,IAAMC,eAAe,GAAGhD,UAAxB;AACA,IAAMiD,WAAW,GAAGlC,QAApB;;ACnDA,WAAe;AACbmC,EAAAA,GAAG,EAAE,KADQ;AAEbC,EAAAA,UAAU,EAAE,YAFC;AAGbC,EAAAA,MAAM,EAAE,QAHK;AAIbC,EAAAA,GAAG,EAAE,KAJQ;AAKbC,EAAAA,SAAS,EAAE,WALE;AAMbC,EAAAA,MAAM,EAAE,QANK;AAObC,EAAAA,QAAQ,EAAE,UAPG;AAQbC,EAAAA,IAAI,EAAE,MARO;AASbC,EAAAA,WAAW,EAAE,aATA;AAUbC,EAAAA,YAAY,EAAE,cAVD;AAWbC,EAAAA,aAAa,EAAE,eAXF;AAYbC,EAAAA,KAAK,EAAE,OAZM;AAabC,EAAAA,QAAQ,EAAE,UAbG;AAcbC,EAAAA,IAAI,EAAE,MAdO;AAebC,EAAAA,MAAM,EAAE,QAfK;AAgBbC,EAAAA,MAAM,EAAE,QAhBK;AAiBbC,EAAAA,YAAY,EAAE,cAjBD;AAkBbC,EAAAA,QAAQ,EAAE,UAlBG;AAmBbC,EAAAA,IAAI,EAAE,MAnBO;AAoBbC,EAAAA,QAAQ,EAAE,UApBG;AAqBbC,EAAAA,QAAQ,EAAE,UArBG;AAsBbC,EAAAA,IAAI,EAAE,MAtBO;AAuBbC,EAAAA,UAAU,EAAE,YAvBC;AAwBbhD,EAAAA,KAAK,EAAE,OAxBM;AAyBbiD,EAAAA,MAAM,EAAE,QAzBK;AA0BbC,EAAAA,UAAU,EAAE,YA1BC;AA2BbC,EAAAA,aAAa,EAAE,eA3BF;AA4BbC,EAAAA,MAAM,EAAE,QA5BK;AA6BbC,EAAAA,GAAG,EAAE,KA7BQ;AA8BbC,EAAAA,IAAI,EAAE,MA9BO;AA+BbC,EAAAA,KAAK,EAAE,OA/BM;AAgCbC,EAAAA,OAAO,EAAE,SAhCI;AAiCbC,EAAAA,OAAO,EAAE,SAjCI;AAkCbC,EAAAA,WAAW,EAAE,aAlCA;AAmCbC,EAAAA,IAAI,EAAE,MAnCO;AAoCbC,EAAAA,IAAI,EAAE,MApCO;AAqCbC,EAAAA,aAAa,EAAE,eArCF;AAsCbC,EAAAA,wBAAwB,EAAE,0BAtCb;AAuCbC,EAAAA,QAAQ,EAAE,UAvCG;AAwCbC,EAAAA,KAAK,EAAE,OAxCM;AAyCbC,EAAAA,IAAI,EAAE,MAzCO;AA0CbC,EAAAA,IAAI,EAAE,MA1CO;AA2CbpG,EAAAA,QAAQ,EAAE,UA3CG;AA4CbqG,EAAAA,OAAO,EAAE,SA5CI;AA6CbC,EAAAA,KAAK,EAAE,OA7CM;AA8CbC,EAAAA,MAAM,EAAE,QA9CK;AA+CbC,EAAAA,MAAM,EAAE,QA/CK;AAgDbC,EAAAA,IAAI,EAAE,MAhDO;AAiDbC,EAAAA,eAAe,EAAE,iBAjDJ;AAkDbC,EAAAA,OAAO,EAAE,SAlDI;AAmDbC,EAAAA,UAAU,EAAE,YAnDC;AAoDbC,EAAAA,cAAc,EAAE,gBApDH;AAqDbC,EAAAA,UAAU,EAAE,YArDC;AAsDbC,EAAAA,SAAS,EAAE,WAtDE;AAuDbC,EAAAA,IAAI,EAAE,MAvDO;AAwDbC,EAAAA,YAAY,EAAE,cAxDD;AAyDbC,EAAAA,SAAS,EAAE,WAzDE;AA0DbC,EAAAA,aAAa,EAAE,eA1DF;AA2DbC,EAAAA,UAAU,EAAE,YA3DC;AA4DbC,EAAAA,SAAS,EAAE,WA5DE;AA6DbC,EAAAA,UAAU,EAAE,YA7DC;AA8DbC,EAAAA,WAAW,EAAE,aA9DA;AA+DbC,EAAAA,UAAU,EAAE,YA/DC;AAgEbC,EAAAA,aAAa,EAAE,eAhEF;AAiEbC,EAAAA,WAAW,EAAE,aAjEA;AAkEbC,EAAAA,eAAe,EAAE,iBAlEJ;AAmEbC,EAAAA,aAAa,EAAE;AAnEF,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0EA,IAAMnG,MAAM,GAAG;AACboG,EAAAA,OAAO,EAAE,SADI;AAEb5F,EAAAA,OAAO,EAAE,SAFI;AAGb6F,EAAAA,SAAS,EAAE,WAHE;AAIbC,EAAAA,OAAO,EAAE,SAJI;AAKbC,EAAAA,eAAe,EAAE,iBALJ;AAMbC,EAAAA,KAAK,EAAE,OANM;AAObC,EAAAA,IAAI,EAAE,MAPO;AAQbC,EAAAA,IAAI,EAAE,MARO;AASbC,EAAAA,eAAe,EAAE,iBATJ;AAUbC,EAAAA,eAAe,EAAE,iBAVJ;AAWbC,EAAAA,eAAe,EAAE,iBAXJ;AAYbC,EAAAA,YAAY,EAAE,cAZD;AAabrG,EAAAA,KAAK,EAAE;AAbM,CAAf;;AAgBA,SAASG,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,UAAQA,KAAR;AACE,SAAKb,MAAM,CAACQ,OAAZ;AAAqB,aAAO,8BAAP;;AACrB,SAAKR,MAAM,CAACqG,SAAZ;AAAuB,aAAO,gCAAP;;AACvB,SAAKrG,MAAM,CAACsG,OAAZ;AAAqB,aAAO,8BAAP;;AACrB,SAAKtG,MAAM,CAACuG,eAAZ;AAA6B,aAAO,sCAAP;;AAC7B,SAAKvG,MAAM,CAACwG,KAAZ;AAAmB,aAAO,4BAAP;;AACnB,SAAKxG,MAAM,CAACyG,IAAZ;AAAkB,aAAO,2BAAP;;AAClB,SAAKzG,MAAM,CAAC0G,IAAZ;AAAkB,aAAO,2BAAP;;AAClB,SAAK1G,MAAM,CAAC2G,eAAZ;AAA6B,aAAO,sCAAP;;AAC7B,SAAK3G,MAAM,CAAC4G,eAAZ;AAA6B,aAAO,sCAAP;;AAC7B,SAAK5G,MAAM,CAAC6G,eAAZ;AAA6B,aAAO,sCAAP;;AAC7B,SAAK7G,MAAM,CAAC8G,YAAZ;AAA0B,aAAO,mCAAP;;AAC1B,SAAK9G,MAAM,CAACS,KAAZ;AAAmB,aAAO,4BAAP;;AACnB;AAAS,aAAO,EAAP;AAbX;AAeD;;AAED,SAASsG,yBAAT,CAAmCjZ,IAAnC,EAAyC;AACvC,UAAQA,IAAR;AACE,SAAKkZ,IAAI,CAAC7E,GAAV;AAAe,0BAAOzE,wCAACuJ,kBAAD,OAAP;;AACf,SAAKD,IAAI,CAAC5E,UAAV;AAAsB,0BAAO1E,wCAACwJ,wBAAD,OAAP;;AACtB,SAAKF,IAAI,CAAC3E,MAAV;AAAkB,0BAAO3E,wCAACyJ,qBAAD,OAAP;;AAClB,SAAKH,IAAI,CAAC1E,GAAV;AAAe,0BAAO5E,wCAAC0J,kBAAD,OAAP;;AACf,SAAKJ,IAAI,CAACzE,SAAV;AAAqB,0BAAO7E,wCAAC2J,wBAAD,OAAP;;AACrB,SAAKL,IAAI,CAACxE,MAAV;AAAkB,0BAAO9E,wCAAC4J,qBAAD,OAAP;;AAClB,SAAKN,IAAI,CAACvE,QAAV;AAAoB,0BAAO/E,wCAAC6J,uBAAD,OAAP;;AACpB,SAAKP,IAAI,CAACtE,IAAV;AAAgB,0BAAOhF,wCAAC8J,mBAAD,OAAP;;AAChB,SAAKR,IAAI,CAACrE,WAAV;AAAuB,0BAAOjF,wCAAC+J,yBAAD,OAAP;;AACvB,SAAKT,IAAI,CAACpE,YAAV;AAAwB,0BAAOlF,wCAACgK,0BAAD,OAAP;;AACxB,SAAKV,IAAI,CAACnE,aAAV;AAAyB,0BAAOnF,wCAACiK,2BAAD,OAAP;;AACzB,SAAKX,IAAI,CAAClE,KAAV;AAAiB,0BAAOpF,wCAACkK,oBAAD,OAAP;;AACjB,SAAKZ,IAAI,CAACjE,QAAV;AAAoB,0BAAOrF,wCAACmK,uBAAD,OAAP;;AACpB,SAAKb,IAAI,CAAChE,IAAV;AAAgB,0BAAOtF,wCAACoK,mBAAD,OAAP;;AAChB,SAAKd,IAAI,CAAC/D,MAAV;AAAkB,0BAAOvF,wCAACqK,qBAAD,OAAP;;AAClB,SAAKf,IAAI,CAAC9D,MAAV;AAAkB,0BAAOxF,wCAACsK,qBAAD,OAAP;;AAClB,SAAKhB,IAAI,CAAC7D,YAAV;AAAwB,0BAAOzF,wCAACuK,2BAAD,OAAP;;AACxB,SAAKjB,IAAI,CAAC5D,QAAV;AAAoB,0BAAO1F,wCAACwK,uBAAD,OAAP;;AACpB,SAAKlB,IAAI,CAAC3D,IAAV;AAAgB,0BAAO3F,wCAACyK,mBAAD,OAAP;;AAChB,SAAKnB,IAAI,CAAC1D,QAAV;AAAoB,0BAAO5F,wCAAC0K,sBAAD,OAAP;;AACpB,SAAKpB,IAAI,CAACzD,QAAV;AAAoB,0BAAO7F,wCAAC2K,uBAAD,OAAP;;AACpB,SAAKrB,IAAI,CAACxD,IAAV;AAAgB,0BAAO9F,wCAAC4K,mBAAD,OAAP;;AAChB,SAAKtB,IAAI,CAACvD,UAAV;AAAsB,0BAAO/F,wCAAC6K,wBAAD,OAAP;;AACtB,SAAKvB,IAAI,CAACvG,KAAV;AAAiB,0BAAO/C,wCAAC8K,oBAAD,OAAP;;AACjB,SAAKxB,IAAI,CAACtD,MAAV;AAAkB,0BAAOhG,wCAAC+K,qBAAD,OAAP;;AAClB,SAAKzB,IAAI,CAACrD,UAAV;AAAsB,0BAAOjG,wCAACgL,wBAAD,OAAP;;AACtB,SAAK1B,IAAI,CAACpD,aAAV;AAAyB,0BAAOlG,wCAACiL,2BAAD,OAAP;;AACzB,SAAK3B,IAAI,CAACnD,MAAV;AAAkB,0BAAOnG,wCAACkL,qBAAD,OAAP;;AAClB,SAAK5B,IAAI,CAAClD,GAAV;AAAe,0BAAOpG,wCAACmL,kBAAD,OAAP;;AACf,SAAK7B,IAAI,CAACjD,IAAV;AAAgB,0BAAOrG,wCAACoL,mBAAD,OAAP;;AAChB,SAAK9B,IAAI,CAAChD,KAAV;AAAiB,0BAAOtG,wCAACqL,oBAAD,OAAP;;AACjB,SAAK/B,IAAI,CAAC/C,OAAV;AAAmB,0BAAOvG,wCAACsL,sBAAD,OAAP;;AACnB,SAAKhC,IAAI,CAAC9C,OAAV;AAAmB,0BAAOxG,wCAACuL,sBAAD,OAAP;;AACnB,SAAKjC,IAAI,CAAC7C,WAAV;AAAuB,0BAAOzG,wCAACwL,0BAAD,OAAP;;AACvB,SAAKlC,IAAI,CAAC5C,IAAV;AAAgB,0BAAO1G,wCAACyL,mBAAD,OAAP;;AAChB,SAAKnC,IAAI,CAAC3C,IAAV;AAAgB,0BAAO3G,wCAAC0L,mBAAD,OAAP;;AAChB,SAAKpC,IAAI,CAAC1C,aAAV;AAAyB,0BAAO5G,wCAAC2L,4BAAD,OAAP;;AACzB,SAAKrC,IAAI,CAACzC,wBAAV;AAAoC,0BAAO7G,wCAAC4L,qCAAD,OAAP;;AACpC,SAAKtC,IAAI,CAACxC,QAAV;AAAoB,0BAAO9G,wCAAC6L,uBAAD,OAAP;;AACpB,SAAKvC,IAAI,CAACvC,KAAV;AAAiB,0BAAO/G,wCAAC8L,oBAAD,OAAP;;AACjB,SAAKxC,IAAI,CAACtC,IAAV;AAAgB,0BAAOhH,wCAAC+L,mBAAD,OAAP;;AAChB,SAAKzC,IAAI,CAACrC,IAAV;AAAgB,0BAAOjH,wCAACgM,mBAAD,OAAP;;AAChB,SAAK1C,IAAI,CAACzI,QAAV;AAAoB,0BAAOb,wCAACiM,uBAAD,OAAP;;AACpB,SAAK3C,IAAI,CAACpC,OAAV;AAAmB,0BAAOlH,wCAACkM,sBAAD,OAAP;;AACnB,SAAK5C,IAAI,CAAClC,MAAV;AAAkB,0BAAOpH,wCAACmM,qBAAD,OAAP;;AAClB,SAAK7C,IAAI,CAACnC,KAAV;AAAiB,0BAAOnH,wCAACoM,0BAAD,OAAP;;AACjB,SAAK9C,IAAI,CAACjC,MAAV;AAAkB,0BAAOrH,wCAACqM,qBAAD,OAAP;;AAClB,SAAK/C,IAAI,CAAChC,IAAV;AAAgB,0BAAOtH,wCAACsM,mBAAD,OAAP;;AAChB,SAAKhD,IAAI,CAAC/B,eAAV;AAA2B,0BAAOvH,wCAACuM,6BAAD,OAAP;;AAC3B,SAAKjD,IAAI,CAAC9B,OAAV;AAAmB,0BAAOxH,wCAACwM,sBAAD,OAAP;;AACnB,SAAKlD,IAAI,CAAC7B,UAAV;AAAsB,0BAAOzH,wCAACyM,yBAAD,OAAP;;AACtB,SAAKnD,IAAI,CAAC5B,cAAV;AAA0B,0BAAO1H,wCAAC0M,4BAAD,OAAP;;AAC1B,SAAKpD,IAAI,CAAC3B,UAAV;AAAsB,0BAAO3H,wCAAC2M,wBAAD,OAAP;;AACtB,SAAKrD,IAAI,CAAC1B,SAAV;AAAqB,0BAAO5H,wCAAC4M,uBAAD,OAAP;;AACrB,SAAKtD,IAAI,CAACzB,IAAV;AAAgB,0BAAO7H,wCAAC6M,mBAAD,OAAP;;AAChB,SAAKvD,IAAI,CAACxB,YAAV;AAAwB,0BAAO9H,wCAAC8M,qBAAD,OAAP;;AACxB,SAAKxD,IAAI,CAACvB,SAAV;AAAqB,0BAAO/H,wCAAC+M,kBAAD,OAAP;;AACrB,SAAKzD,IAAI,CAACtB,aAAV;AAAyB,0BAAOhI,wCAACgN,qBAAD,OAAP;;AACzB,SAAK1D,IAAI,CAACrB,UAAV;AAAsB,0BAAOjI,wCAACiN,oBAAD,OAAP;;AACtB,SAAK3D,IAAI,CAACpB,SAAV;AAAqB,0BAAOlI,wCAACkN,eAAD,OAAP;;AACrB,SAAK5D,IAAI,CAACnB,UAAV;AAAsB,0BAAOnI,wCAACmN,gBAAD,OAAP;;AACtB,SAAK7D,IAAI,CAAClB,WAAV;AAAuB,0BAAOpI,wCAACoN,iBAAD,OAAP;;AACvB,SAAK9D,IAAI,CAACjB,UAAV;AAAsB,0BAAOrI,wCAACqN,gBAAD,OAAP;;AACtB,SAAK/D,IAAI,CAAChB,aAAV;AAAyB,0BAAOtI,wCAACsN,mBAAD,OAAP;;AACzB,SAAKhE,IAAI,CAACf,WAAV;AAAuB,0BAAOvI,wCAACuN,iBAAD,OAAP;;AACvB,SAAKjE,IAAI,CAACd,eAAV;AAA2B,0BAAOxI,wCAACwN,qBAAD,OAAP;;AAC3B,SAAKlE,IAAI,CAACb,aAAV;AAAyB,0BAAOzI,wCAACyN,mBAAD,OAAP;;AACzB;AAAS,aAAO,MAAP;AAAe;AApE1B;AAsED;;AAEc,SAAS9M,IAAT,OAQZ;AAAA,MAPD2C,SAOC,QAPDA,SAOC;AAAA,MANDlT,IAMC,QANDA,IAMC;AAAA,MALDsd,SAKC,QALDA,SAKC;AAAA,MAJDnP,KAIC,QAJDA,KAIC;AAAA,MAHDG,MAGC,QAHDA,MAGC;AAAA,MAFDiP,OAEC,QAFDA,OAEC;AAAA,MADDtK,QACC,QADDA,QACC;AACD,MAAMuK,SAAS,GAAG;AAChBrP,IAAAA,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,aAAuCA,KAAvC,OADS;AAEhBsP,IAAAA,QAAQ,EAAE,OAAOtP,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,aAAuCA,KAAvC,OAFM;AAGhBG,IAAAA,MAAM,EAAE,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,aAAyCA,MAAzC,OAHQ;AAIhBoP,IAAAA,SAAS,EAAE,OAAOpP,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,aAAyCA,MAAzC;AAJK,GAAlB;AAMA,sBACEsB;AACE,IAAA,SAAS,EAAE,iDACNwD,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADjC,IAET,eAFS,EAGTJ,sBAAsB,CAACwK,SAAD,CAHb,GAIThK,IAJS,CAIJ,GAJI,CADb;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,OAAO,EAAEiK,OAPX;AAQE,IAAA,SAAS,EAAEA,OARb;AASE,IAAA,QAAQ,EAAC,GATX;AAUE,IAAA,KAAK,EAAEC;AAVT,KAYGvK,QAAQ,IAAIgG,yBAAyB,CAACjZ,IAAD,CAZxC,CADF;AAgBD;AAEDuQ,IAAI,CAACgD,SAAL,GAAiB;AACfL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADI;AAKf1T,EAAAA,IAAI,EAAEwT,6BAAS,CAACC,SAAV,CAAoB,CACxBD,6BAAS,CAACI,KAAV,CAAgBzK,MAAM,CAACC,IAAP,CAAY8P,IAAZ,CAAhB,CADwB,EAExB1F,6BAAS,CAACE,MAFc,CAApB,EAGHiK,UARY;AASfL,EAAAA,SAAS,EAAE9J,6BAAS,CAACI,KAAV,CAAgBzK,MAAM,CAACC,IAAP,CAAY8I,MAAZ,CAAhB,CATI;AAUf/D,EAAAA,KAAK,EAAEqF,6BAAS,CAACC,SAAV,CAAoB,CACzBD,6BAAS,CAACE,MADe,EAEzBF,6BAAS,CAACK,MAFe,CAApB,CAVQ;AAcfvF,EAAAA,MAAM,EAAEkF,6BAAS,CAACC,SAAV,CAAoB,CAC1BD,6BAAS,CAACE,MADgB,EAE1BF,6BAAS,CAACK,MAFgB,CAApB,CAdO;AAkBf0J,EAAAA,OAAO,EAAE/J,6BAAS,CAACoK,IAlBJ;AAmBf3K,EAAAA,QAAQ,EAAEO,6BAAS,CAACM;AAnBL,CAAjB;AAsBAvD,IAAI,CAAC0D,YAAL,GAAoB;AAClBf,EAAAA,SAAS,EAAE,EADO;AAElBoK,EAAAA,SAAS,EAAEpL,MAAM,CAACoG,OAFA;AAGlBnK,EAAAA,KAAK,EAAE,EAHW;AAIlBG,EAAAA,MAAM,EAAE,EAJU;AAKlBiP,EAAAA,OAAO,EAAE,mBAAM,EALG;AAMlBtK,EAAAA,QAAQ,EAAE;AANQ,CAApB;AASO,IAAMzC,SAAS,GAAG0I,IAAlB;AACA,IAAM2E,UAAU,GAAG3L,MAAnB;;ACzOA,IAAM4L,kBAAkB,GAAG9f,gCAAwB,EAAnD;AACQ,SAAS+f,aAAT,OAIZ;AAAA;;AAAA,MAHD7K,SAGC,QAHDA,SAGC;AAAA,MAFDpT,OAEC,QAFDA,OAEC;AAAA,MADDke,MACC,QADDA,MACC;AACD,MAAMC,QAAQ,mEACXH,kBAAkB,CAACnF,IADR,EACenI,SAAS,CAACmH,SADzB,kDAEXmG,kBAAkB,CAACI,SAFR,EAEoB1N,SAAS,CAACmH,SAF9B,kDAGXmG,kBAAkB,CAAClF,IAHR,EAGepI,SAAS,CAACoH,aAHzB,kDAIXkG,kBAAkB,CAAC1f,MAJR,EAIiBoS,SAAS,CAACqH,UAJ3B,aAAd;AAOA,sBACEjI;AACE,IAAA,SAAS,EAAE,iDACLwD,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAET,qBAFS,GAGTI,IAHS,CAGJ,GAHI;AADb,KAMG6K,oBAAY,CAACH,MAAD,CAAZ,iBACCpO,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC,SAFxB;AAGE,IAAA,KAAK,EAAEoC,WAAW,CAAChC;AAHrB,KAKGtQ,2BAAmB,CAAChC,OAAD,CALtB,CAPJ,EAeIke,MAAM,KAAKF,kBAAkB,CAACzf,OAA/B,gBAEGuR;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC,SAFxB;AAGE,IAAA,KAAK,EAAEoC,WAAW,CAAChC;AAHrB,gBADF,eAQExC,wCAAC,IAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAEY,SAAS,CAACkH,YAFlB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IARF,CAFH,gBAmBG9H;AAAK,IAAA,SAAS,EAAC;AAAf,KACGoO,MAAM,KAAKF,kBAAkB,CAAC1f,MAA9B,iBAECwR,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC,SAFxB;AAGE,IAAA,KAAK,EAAEoC,WAAW,CAAChC;AAHrB,sBAHJ,eAWExC,wCAAC,IAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAEqO,QAAQ,CAACD,MAAD,CAAR,IAAoBxN,SAAS,CAACmC,KAFtC;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IAXF,CAlCN,CADF;AAwDD;AAEDoL,aAAa,CAACxK,SAAd,GAA0B;AACxBL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADa;AAKxB5T,EAAAA,OAAO,EAAE0T,6BAAS,CAAC4K,KAAV,CAAgB;AACvBniB,IAAAA,SAAS,EAAEuX,6BAAS,CAACK,MADE;AAEvB5R,IAAAA,MAAM,EAAEuR,6BAAS,CAAC4K,KAAV,CAAgB;AACtBC,MAAAA,UAAU,EAAE7K,6BAAS,CAACE,MADA;AAEtB7R,MAAAA,QAAQ,EAAE2R,6BAAS,CAACE,MAFE;AAGtB9R,MAAAA,MAAM,EAAE4R,6BAAS,CAACE,MAHI;AAItB4K,MAAAA,UAAU,EAAE9K,6BAAS,CAACE;AAJA,KAAhB,CAFe;AAQvBxR,IAAAA,aAAa,EAAEsR,6BAAS,CAACE;AARF,GAAhB,CALe;AAexBsK,EAAAA,MAAM,EAAExK,6BAAS,CAACE;AAfM,CAA1B;AAkBAqK,aAAa,CAAC9J,YAAd,GAA6B;AAC3Bf,EAAAA,SAAS,EAAE,EADgB;AAE3BpT,EAAAA,OAAO,EAAE,IAFkB;AAG3Bke,EAAAA,MAAM,EAAE;AAHmB,CAA7B;;AChGe,SAASO,UAAT,OAOZ;AAAA,MANDrL,SAMC,QANDA,SAMC;AAAA,MALDH,KAKC,QALDA,KAKC;AAAA,MAJDyL,QAIC,QAJDA,QAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDlB,OAEC,QAFDA,OAEC;AAAA,MADDtK,QACC,QADDA,QACC;AACD,sBACErD;AACE,IAAA,SAAS,EAAE,iDACLwD,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAETJ,8BAAsB,CAACC,KAAD,CAFb,EAGT,kBAHS,EAIT0L,SAAS,GAAG,gCAAH,GAAsC,EAJtC,EAKTD,QAAQ,GAAG,4BAAH,GAAkC,EALjC,GAMTlL,IANS,CAMJ,GANI,CADb;AAQE,IAAA,IAAI,EAAC,QARP;AASE,IAAA,QAAQ,EAAE,CATZ;AAUE,IAAA,OAAO,EAAEiK,OAVX;AAWE,IAAA,UAAU,EAAEA;AAXd,KAaGtK,QAbH,CADF;AAiBD;AAEDsL,UAAU,CAAChL,SAAX,GAAuB;AACrBL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADU;AAKrBX,EAAAA,KAAK,EAAES,6BAAS,CAACE,MALI;AAMrB8K,EAAAA,QAAQ,EAAEhL,6BAAS,CAACkL,IANC;AAOrBD,EAAAA,SAAS,EAAEjL,6BAAS,CAACkL,IAPA;AAQrBnB,EAAAA,OAAO,EAAE/J,6BAAS,CAACoK,IARE;AASrB3K,EAAAA,QAAQ,EAAEO,6BAAS,CAACC,SAAV,CAAoB,CAACD,6BAAS,CAACE,MAAX,EAAmBF,6BAAS,CAACM,OAA7B,CAApB,EACP6J;AAVkB,CAAvB;AAaAY,UAAU,CAACtK,YAAX,GAA0B;AACxBf,EAAAA,SAAS,EAAE,EADa;AAExBH,EAAAA,KAAK,EAAEb,cAAM,CAACC,cAFU;AAGxBqM,EAAAA,QAAQ,EAAE,KAHc;AAIxBC,EAAAA,SAAS,EAAE,KAJa;AAKxBlB,EAAAA,OAAO,EAAE,mBAAM;AALS,CAA1B;;SCrBwBoB,oBAAoB7N;MAC1CoC,SAAS;MACTnC;MAAA6N,MAAM,mBAAG;MACT9e,OAAO;MACP+e;MAAAC,iBAAiB,mBAAG;MACpBC;MAAAC,QAAQ,mBAAG;AAEH,MAAAC,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;;AACF,MAAAC,KAA8BC,cAAQ,CAAY,MAAZ,CAAtC;AAAA,MAACC,UAAU,QAAX;AAAA,MAAaC,aAAa,QAA1B;;AACN,MAAMC,OAAO,GAAGlT,YAAM,CAAiB,IAAjB,CAAtB;AAEAlG,EAAAA,eAAS,CAAC;AACR,QACEoZ,OAAO,CAAC9Y,OAAR,IACA8Y,OAAO,CAAC9Y,OAAR,CAAgB3H,YAAhB,GAA+BygB,OAAO,CAAC9Y,OAAR,CAAgB+Y,YAFjD,EAGE;AACAF,MAAAA,aAAa,CAAC,SAAD,CAAb;AACD;AACF,GAPQ,EAON,CAACC,OAAO,CAAC9Y,OAAT,CAPM,CAAT;;AASA,WAASgZ,YAAT;AACEH,IAAAA,aAAa,CAAC,UAAD,CAAb;AACD;;AAED,sBACE1P;AACE,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CACtBxM,SADsB,EAEtB,6BAFsB,EAGtBmM,UAAU,IAAI,UAAd,GAA2B,uCAA3B,GAAqE,EAH/C,EAItB,CAACT,MAAD,GAAU,uCAAV,GAAoD,EAJ9B,EAKtBE,iBAAiB,GAAG,aAAH,GAAmB,EALd,EAMtBA,iBAAiB,IAAIE,QAArB,GAAgC,QAAhC,GAA2C,EANrB,CAAD;AADzB,kBAUEpP;AAAK,IAAA,GAAG,EAAE2P,OAAV;AAAmB,IAAA,SAAS,EAAC;AAA7B,KACGzf,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6f,KAAT,CAAe,IAAf,EAAqB/c,GAArB,CAAyB,UAACgd,IAAD,EAAOC,CAAP;AACxB,WAAAD,IAAI,KAAK,EAAT,gBACEhQ;AAAI,MAAA,GAAG,EAAEiQ;AAAT,MADF,gBAGEjQ,wCAAC,KAAD;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,KAAK,EAAEwE,WAAW,CAACjC,cAFrB;AAGE,MAAA,GAAG,EAAE0N,CAHP;AAIE,MAAA,IAAI,EAAE1L,eAAe,CAAC1C;AAJxB,OAMGmO,IANH,CAHF;AAWC,GAZF,CADH,CAVF,EA2BGP,UAAU,KAAK,SAAf,iBACCzP,wCAAC,UAAD;AACE,IAAA,SAAS,EAAC,wCADZ;AAEE,IAAA,OAAO,EAAE6P;AAFX,kBAIE7P,wCAAC,KAAD,QAAQqP,SAAS,CAACa,iBAAlB,CAJF,CA5BJ,CADF;AAsCD;;SC7DuBC,kBAAkBjP;;;MACxCoC,SAAS;MACTpT,OAAO;MACPkgB;MAAApB,MAAM,mBAAG;MACTqB;MAAAC,UAAU,mBAAG;AAEL,MAAAjB,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;;AACR,MAAMiB,SAAS,GAAG,SAAZA,SAAY;;;AAChB,QAAI,MAAArgB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBrgB,GAAzB,EAA8BsgB,MAAM,CAACC,IAAP,CAAY,MAAAxgB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBrgB,GAAjC;AAC/B,GAFD;;AAIA,sBACE6P;AAAK,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CAC3BxM,SAD2B,EAE3B,2BAF2B,EAG3B0L,MAAM,GAAG,2BAAH,GAAiC,2BAHZ,EAI3BsB,UAAU,GAAG,aAAH,GAAmB,EAJF,EAK3B,CAAA,MAAApgB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEkQ,SAAT,UAAA,iBAAA,SAAA,MAAoB/O,MAApB,IAA6B,CAA7B,GAAiC,2BAAjC,GAA+D,EALpC,CAAD;AAA5B,kBAQE2O;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAyD,IAAA,OAAO,EAAEuQ;AAAlE,kBACEvQ;AACE,IAAA,SAAS,EAAC;AADZ,kBAGEA,wCAACU,qBAAD;AACE,IAAA,SAAS,EAAC,gDADZ;AAEE,IAAA,GAAG,EAAE,CAAA,MAAA,MAAAxQ,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBG,YAArB,UAAA,iBAAA,SAAA,MAAmCxgB,GAAnC,KAA0C,EAFjD;AAGE,IAAA,GAAG,EAAE,MAAA,MAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBG,YAArB,UAAA,iBAAA,SAAA,MAAmCC,GAH1C;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC,MALT;AAME,IAAA,gBAAgB,eACd5Q;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,wCAAC,IAAD;AACE,MAAA,SAAS,EAAC,6DADZ;AAEE,MAAA,IAAI,EAAEY,SAAS,CAAC8G,cAFlB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT,MADF;AAPJ,IAHF,CADF,eAsBE1H;AACE,IAAA,SAAS,EAAC;AADZ,KAGG,CAAA,MAAA9P,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBK,KAArB,kBACC7Q,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,+CADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAAC3C,UAFxB;AAGE,IAAA,KAAK,EAAE4C,WAAW,CAACjC;AAHrB,KAKGrS,OAAO,CAACsgB,UAAR,CAAmBK,KALtB,CAJJ,EAYG,CAAA,MAAA3gB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBM,WAArB,kBACC9Q,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACzC,MAFxB;AAGE,IAAA,KAAK,EAAE0C,WAAW,CAACjC;AAHrB,KAKGrS,OAAO,CAACsgB,UAAR,CAAmBM,WALtB,CAbJ,EAqBG,CAAA,MAAA5gB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEsgB,UAAT,UAAA,iBAAA,SAAA,MAAqBrgB,GAArB,kBACC6P,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,6CADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC,SAFxB;AAGE,IAAA,KAAK,EAAEoC,WAAW,CAAChC;AAHrB,KAKGtS,OAAO,CAACsgB,UAAR,CAAmBrgB,GALtB,CAtBJ,CAtBF,CARF,eAkEE6P;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI9P,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEA,OAAT,CAAiB6f,KAAjB,CAAuB,GAAvB,EAA4B/c,GAA5B,CAAgC,UAACgd,IAAD;AAAkB,WAChDe,aAAK,CAACf,IAAD,CAAL,gBAEIhQ,wCAACgR,iBAAD;AACE,MAAA,SAAS,EAAC,iDADZ;AAEE,MAAA,GAAG,EAAEva,0BAAM,EAFb;AAGE,MAAA,GAAG,EAAEuZ,IAHP;AAIE,MAAA,IAAI,EAAEzL,eAAe,CAAC1C,MAJxB;AAKE,MAAA,KAAK,EAAEmN,MAAM,GAAGxK,WAAW,CAACjC,cAAf,GAAgCiC,WAAW,CAACxB;AAL3D,OAOGgN,IAPH,CAFJ,gBAaIhQ,wCAAC,KAAD;AACE,MAAA,SAAS,EAAC,iDADZ;AAEE,MAAA,GAAG,EAAEvJ,0BAAM,EAFb;AAGE,MAAA,IAAI,EAAE8N,eAAe,CAAC1C,MAHxB;AAIE,MAAA,KAAK,EAAE2C,WAAW,CAACjC;AAJrB,OAMGyN,IAAI,GAAG,GANV,CAd4C;AAuBjD,GAvBD,CAFJ,EA4BIiB,uBAAe,CAAC/gB,OAAD,CAAf,iBACE8P,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAAC1C,MAFxB;AAGE,IAAA,KAAK,EAAEmN,MAAM,GAAGxK,WAAW,CAAC3B,WAAf,GAA6B2B,WAAW,CAAChC;AAHxD,KAKG,MAAI6M,SAAS,CAAC6B,cAAd,MALH,CA7BN,CAlEF,eAyGElR;AAAK,IAAA,SAAS,EAAC;AAAf,IAzGF,CADF;AA6GD;;SC/HuBmR,0BAA0BjQ;;;MAChDoC,SAAS;MACTpT,OAAO;MACP8e,MAAM;MACNC;MAAAqB,UAAU,mBAAG;AAEL,MAAAjB,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AACR,MAAM8B,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWphB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEqhB,IAApB,CAAvB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AACrB,QAAI,CAAAJ,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEK,MAAhB,KAA0B,CAAAL,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEK,MAAhB,CAAuBpgB,MAAvB,IAAgC,CAA9D,EAAgE;AAC9Dof,MAAAA,MAAM,CAACC,IAAP,CAAYU,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEK,MAA5B;AACD,KAFD,MAEM;AACJhB,MAAAA,MAAM,CAACC,IAAP,CAAYgB,+BAAuB,CAACN,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEO,GAAjB,EAAsB,YAAtB,CAAnC;AACD;AACF,GAND;;AASA,sBACE3R;AACA,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CACtBxM,SADsB,EAEtB,mCAFsB,EAGtB0L,MAAM,GAAG,6CAAH,GAAmD,6CAHnC,EAItBsB,UAAU,GAAG,aAAH,GAAmB,EAJP,EAKtB,CAAA,MAAApgB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEkQ,SAAT,UAAA,iBAAA,SAAA,MAAoB/O,MAApB,IAA6B,CAA7B,GAAiC,WAAjC,GAA+C,EALzB,CAAD;AADvB,kBAQE2O;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,SAAS,EAAC,8CAHZ;AAIE,IAAA,OAAO,EAAEwR,cAJX;AAKE,IAAA,UAAU,EAAEA;AALd,kBAMExR,wCAAC,IAAD;AACI,IAAA,SAAS,EAAC,yCADd;AAEI,IAAA,IAAI,EAAEY,SAAS,CAAC4H,eAFpB;AAGI,IAAA,KAAK,EAAC,IAHV;AAII,IAAA,MAAM,EAAC;AAJX,IANF,eAYExI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,KAAD;AAAO,IAAA,SAAS,EAAC,+CAAjB;AAAiE,IAAA,KAAK,EAAEwE,WAAW,CAACjC,cAApF;AAAoG,IAAA,IAAI,EAAEgC,eAAe,CAAC3C;AAA1H,KACGwP,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAEP,KADnB,CADF,eAIE7Q,kEACEA,wCAAC,KAAD;AAAO,IAAA,KAAK,EAAEwE,WAAW,CAAChC,cAA1B;AAA0C,IAAA,IAAI,EAAE+B,eAAe,CAACzC;AAAhE,KACGuN,SAAS,CAACuC,UADb,CADF,EAMI,CAAAR,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAES,KAAhB,KAAyB,CAAAT,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAES,KAAhB,CAAsBxgB,MAAtB,IAA+B,CAAxD,iBAA6D2O,wCAAC,KAAD;AAAO,IAAA,SAAS,EAAC,kDAAjB;AAAoE,IAAA,KAAK,EAAEwE,WAAW,CAAChC,cAAvF;AAAuG,IAAA,IAAI,EAAE+B,eAAe,CAACzC;AAA7H,KAE5DuN,SAAS,CAACyC,mBAAV,GAAgC,GAAhC,GAAqCC,uCAA+B,CAACX,cAAc,SAAd,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAES,KAAjB,CAFR,CANjE,CAJF,CAZF,CARF,CADF;AA2CD;;SChEuBG,wBAAwB9Q;;;MAC9CoC,SAAS;MACTpT,OAAO;MACP8e,MAAM;AAEE,MAAAK,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AACR,MAAM2C,YAAY,GAAGZ,IAAI,CAACC,KAAL,CAAWphB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEqhB,IAApB,CAArB;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe;AACnB,QAAI,CAAAD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAER,MAAd,KAAwB,CAAAQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAER,MAAd,CAAqBpgB,MAArB,IAA8B,CAA1D,EAA4D;AAC1Dof,MAAAA,MAAM,CAACC,IAAP,CAAYuB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAER,MAA1B;AACD,KAFD,MAEM;AACJhB,MAAAA,MAAM,CAACC,IAAP,CAAYgB,+BAAuB,CAACO,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEN,GAAf,EAAoB,UAApB,CAAnC;AACD;AACF,GAND;;AAOA,sBACE3R;AAAK,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CAC3BxM,SAD2B,EAE3B,iCAF2B,EAG3B0L,MAAM,GAAG,2CAAH,GAAiD,2CAH5B,EAI3B,CAAA,MAAA9e,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEkQ,SAAT,UAAA,iBAAA,SAAA,MAAoB/O,MAApB,IAA6B,CAA7B,GAAiC,WAAjC,GAA+C,EAJpB,CAAD;AAA5B,kBAME2O;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAEkS;AAFX,kBAGElS,wCAAC,IAAD;AACI,IAAA,SAAS,EAAC,uCADd;AAEI,IAAA,IAAI,EAAEY,SAAS,CAAC6H,aAFpB;AAGI,IAAA,KAAK,EAAC,IAHV;AAII,IAAA,MAAM,EAAC;AAJX,IAHF,eASEzI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,KAAD;AAAO,IAAA,SAAS,EAAC,6CAAjB;AAA+D,IAAA,KAAK,EAAEwE,WAAW,CAACjC,cAAlF;AAAkG,IAAA,IAAI,EAAEgC,eAAe,CAAC3C;AAAxH,KACGqQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEpB,KADjB,CADF,eAIE7Q,wCAAC,KAAD;AAAO,IAAA,KAAK,EAAEwE,WAAW,CAAChC,cAA1B;AAA0C,IAAA,IAAI,EAAE+B,eAAe,CAACzC;AAAhE,KACGuN,SAAS,CAAC8C,QADb,CAJF,CATF,CANF,CADF;AA2BD;;AC1DD,IAAMC,QAAQ,GAAG;AACf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADI;AAEf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFI;AAGf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAHI;AAIf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAJI;AAKf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CALI;AAMf,aAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CANI;AAOf,aAAW,CAAC,GAAD,EAAM,GAAN;AAPI,CAAjB;AAUO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,GAAD;AACrC,MAAMC,SAAS,GAAGD,GAAG,CAAC,CAAD,CAAH,IAAU,EAA5B;AACA,MAAME,mBAAmB,GAAGD,SAAS,CAACE,WAAV,EAA5B;AAEA,MAAItP,KAAK,GAAG,SAAZ;;AACA,OAA2B,UAAA,EAAAjC,KAAA3H,MAAM,CAACmZ,OAAP,CAAeN,QAAf,CAA3B,EAA2BO,cAA3B,EAA2BA,IAA3B,EAAqD;AAA1C,QAAAxR,WAAA;AAAA,QAACyR,GAAG,QAAJ;AAAA,QAAMC,KAAK,QAAX;;AACT,QAAIA,KAAK,CAACC,QAAN,CAAeN,mBAAf,CAAJ,EAAyC;AACvCrP,MAAAA,KAAK,GAAGyP,GAAR;AACA;AACD;AACF;;AAED,SAAOzP,KAAP;AACD,CAbM;;ICNc4P;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,yGAoBN,YAAM;AACjB,kCAAkC,MAAKA,KAAvC,CAAQnT,gBAAR;AAAA,UAAQA,gBAAR,sCAA2B,EAA3B;AACA,UAAQhJ,OAAR,GAAoBgJ,gBAApB,CAAQhJ,OAAR;;AACA,UAAIgJ,gBAAgB,IAAIhJ,OAAxB,EAAiC;AAC/BA,QAAAA,OAAO,CAACoc,SAAR,CAAkBC,GAAlB,CAAsB,wBAAtB;AACD;AACF,KA1BkB;;AAAA,yGA4BN,YAAM;AACjB,mCAAkC,MAAKF,KAAvC,CAAQnT,gBAAR;AAAA,UAAQA,gBAAR,uCAA2B,EAA3B;AACA,UAAQhJ,OAAR,GAAoBgJ,gBAApB,CAAQhJ,OAAR;;AACA,UAAIgJ,gBAAgB,IAAIhJ,OAAxB,EAAiC;AAC/BA,QAAAA,OAAO,CAACoc,SAAR,CAAkBxjB,MAAlB,CAAyB,wBAAzB;AACD;AACF,KAlCkB;;AAAA,0GAoCL,YAAM;AAClB,UAAQqQ,aAAR,GAA0B,MAAKkT,KAA/B,CAAQlT,aAAR;;AACA;AAAA,UAAQqT,OAAR,yBAAQA,OAAR;;AACA,UAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,YAAIF,OAAO,CAACtc,OAAR,IAAmB,CAACsc,OAAO,CAACtc,OAAR,CAAgByc,QAAhB,CAAyBD,KAAK,CAACE,MAA/B,CAAxB,EAAgE;AAC9DzT,UAAAA,aAAa;AACd;AACF,OAJD;;AAKA,YAAK0T,QAAL,CAAc;AACZJ,QAAAA,kBAAkB,EAAlBA;AADY,OAAd;;AAIArkB,MAAAA,QAAQ,CAAC0kB,gBAAT,CAA0B,WAA1B,EAAuCL,kBAAvC;AACD,KAjDkB;;AAAA,4GAmDH,YAAM;AACpB,UACEA,kBADF,GAEI,MAAK9e,KAFT,CACE8e,kBADF;AAGArkB,MAAAA,QAAQ,CAAC2kB,mBAAT,CAA6B,WAA7B,EAA0CN,kBAA1C;AACD,KAxDkB;;AAAA,8GA0DD,YAAM;AACtB,wBAAgC,MAAKJ,KAArC;AAAA,UAAQpT,SAAR,eAAQA,SAAR;AAAA,UAAmB+T,QAAnB,eAAmBA,QAAnB;AACA,UAAMC,UAAU,GAAGhU,SAAS,CAAC/I,OAAV,CAAkBgd,qBAAlB,EAAnB;AACA,UAAMC,CAAC,GAAGF,UAAU,CAACE,CAAX,IAAgBF,UAAU,CAACG,IAArC;AACA,UAAMC,CAAC,GAAGJ,UAAU,CAACI,CAAX,IAAgBJ,UAAU,CAACK,GAArC;AACA,UAAMC,SAAS,GAAG;AAChBD,QAAAA,GAAG,EAAED,CADW;AAEhBD,QAAAA,IAAI,EAAED;AAFU,OAAlB;AAKA,UAAI,CAAC,MAAKX,OAAL,CAAatc,OAAlB,EAA2B,OAAOqd,SAAP;AAE3B,oBAAoCzD,MAApC;AAAA,UAAQ0D,UAAR,WAAQA,UAAR;AAAA,UAAoBC,WAApB,WAAoBA,WAApB;;AACA,UAAMC,IAAI,GAAG,MAAKlB,OAAL,CAAatc,OAAb,CAAqBgd,qBAArB,EAAb;;AACA,UAAIG,CAAC,GAAGK,IAAI,CAAC3V,MAAT,GAAkB0V,WAAtB,EAAmC;AACjCF,QAAAA,SAAS,CAACD,GAAV,IAAiBI,IAAI,CAAC3V,MAAtB;AACD;;AAED,UAAIoV,CAAC,GAAGO,IAAI,CAAC9V,KAAT,GAAiB4V,UAAjB,IAA+B,CAACR,QAApC,EAA8C;AAC5CO,QAAAA,SAAS,CAACH,IAAV,IAAkBM,IAAI,CAAC9V,KAAvB;AACD;;AAED,UAAI2V,SAAS,CAACD,GAAV,GAAgB,CAApB,EAAuB;AACrBC,QAAAA,SAAS,CAACD,GAAV,GAAgBI,IAAI,CAAC3V,MAAL,GAAc0V,WAAd,GAA4B,CAACA,WAAW,GAAGC,IAAI,CAAC3V,MAApB,IAA8B,CAA1D,GAA8D,CAA9E;AACD;;AAED,UAAIwV,SAAS,CAACH,IAAV,GAAiB,CAArB,EAAwB;AACtBG,QAAAA,SAAS,CAACH,IAAV,GAAiBM,IAAI,CAAC9V,KAAL,GAAa4V,UAAb,GAA0B,CAACA,UAAU,GAAGE,IAAI,CAAC9V,KAAnB,IAA4B,CAAtD,GAA0D,CAA3E;AACD;;AAED2V,MAAAA,SAAS,CAACD,GAAV,IAAiB,EAAjB;;AACA,UAAIN,QAAJ,EAAc;AACZ,YAAMW,OAAO,GAAG/gB,MAAM,CAACE,KAAP,CAAa4gB,IAAI,CAAC9V,KAAL,GAAa,EAA1B,IACZ,GADY;AAAA,UAEZ8V,IAAI,CAAC9V,KAAL,GAAa,EAFjB;AAGA2V,QAAAA,SAAS,CAACH,IAAV,IAAkBO,OAAlB;AACD;;AAED,aAAO,MAAKd,QAAL,CAAc;AAAEU,QAAAA,SAAS,EAATA;AAAF,OAAd,CAAP;AACD,KAjGkB;;AAEjB,UAAKf,OAAL,gBAAenT,yBAAK,CAACuU,SAAN,EAAf;AACA,UAAKjgB,KAAL,GAAa;AACX4f,MAAAA,SAAS,EAAE,EADA;AAEXd,MAAAA,kBAAkB,EAAE,8BAAM;AAFf,KAAb;AAHiB;AAOlB;;;;WAED,6BAAoB;AAClB,WAAKoB,WAAL;AACA,WAAKC,eAAL;AACA,WAAKC,UAAL;AACD;;;WAED,gCAAuB;AACrB,WAAKC,aAAL;AACA,WAAKC,UAAL;AACD;;;WAiFD,kBAAS;AACP,UAAQV,SAAR,GAAsB,KAAK5f,KAA3B,CAAQ4f,SAAR;AACA,yBAA4B,KAAKlB,KAAjC;AAAA,UAAQ3P,QAAR,gBAAQA,QAAR;AAAA,UAAkBE,KAAlB,gBAAkBA,KAAlB;AACA,0BACEsR,qBAAY,eAER7U,+FACEA;AAAK,QAAA,SAAS,EAAC;AAAf,QADF,eAEEA;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,GAAG,EAAE,KAAKmT,OAFZ;AAGE,QAAA,KAAK;AACH2B,UAAAA,OAAO,EAAE,cADN;AAEHC,UAAAA,QAAQ,EAAE,OAFP;AAGHhB,UAAAA,IAAI,YAAKiB,IAAI,CAACC,KAAL,CAAWf,SAAS,CAACH,IAArB,CAAL,OAHD;AAIHE,UAAAA,GAAG,YAAKe,IAAI,CAACC,KAAL,CAAWf,SAAS,CAACD,GAArB,CAAL;AAJA,WAKA1Q,KALA;AAHP,SAWGF,QAXH,CAFF,CAFQ,EAmBVtU,QAAQ,CAACmmB,cAAT,CAAwB,0BAAxB,CAnBU,CADd;AAuBD;;;;EA9HoCC;AAgIvCpC,WAAS,CAACpP,SAAV,GAAsB;AACpB7D,EAAAA,aAAa,EAAE8D,6BAAS,CAACoK,IAAV,CAAeD,UADV;AAEpB1K,EAAAA,QAAQ,EAAEO,6BAAS,CAACC,SAAV,CAAoB,CAC5BD,6BAAS,CAACM,OADkB,EAE5BN,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACM,OAA5B,CAF4B,CAApB,EAGP6J,UALiB;AAMpBxK,EAAAA,KAAK,EAAEK,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,CANa;AAOpB;AACA5O,EAAAA,SAAS,EAAEgE,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACoK,IADmB,EAE7BpK,6BAAS,CAAC4K,KAAV,CAAgB;AAAE3X,IAAAA,OAAO,EAAE+M,6BAAS,CAACwR,UAAV,CAAqBC,OAArB;AAAX,GAAhB,CAF6B,CAApB,EAGRtH,UAXiB;AAYpBlO,EAAAA,gBAAgB,EAAE+D,6BAAS,CAACC,SAAV,CAAoB,CACpCD,6BAAS,CAACoK,IAD0B,EAEpCpK,6BAAS,CAAC4K,KAAV,CAAgB;AAAE3X,IAAAA,OAAO,EAAE+M,6BAAS,CAACwR,UAAV,CAAqBC,OAArB;AAAX,GAAhB,CAFoC,CAApB,EAGftH,UAfiB;AAgBpB4F,EAAAA,QAAQ,EAAE/P,6BAAS,CAACkL;AAhBA,CAAtB;AAkBAiE,WAAS,CAAC1O,YAAV,GAAyB;AACvBd,EAAAA,KAAK,EAAE,EADgB;AAEvBoQ,EAAAA,QAAQ,EAAE;AAFa,CAAzB;;AC1IA,IAAM2B,KAAK,GAAG,EAAd;AAEO,IAAMvC,SAAS,GAAGwC,WAAlB;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAMlB;AAAA,MALJlS,SAKI,QALJA,SAKI;AAAA,MAJJD,QAII,QAJJA,QAII;AAAA,MAHJsK,OAGI,QAHJA,OAGI;AAAA,MAFJ8H,OAEI,QAFJA,OAEI;AAAA,MADJpH,QACI,QADJA,QACI;;AACJ,MAAMqH,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpd,CAAD,EAAO;AAAE,QAAI,CAACmd,OAAL,EAAc9H,OAAO,CAACrV,CAAD,CAAP;AAAa,GAA7D;;AACA,sBACE0H;AACE,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CAACxM,SAAD,EAAY,0BAAZ,EAAwCmS,OAAO,GAAG,SAAH,GAAe,EAA9D,CAAD,CADzB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEC,gBAHX;AAIE,IAAA,UAAU,EAAE,oBAACpd,CAAD,EAAO;AAAE,UAAIA,CAAC,CAACqd,OAAF,KAAcL,KAAlB,EAAyBI,gBAAgB,CAACpd,CAAD,CAAhB;AAAsB,KAJtE;AAKE,IAAA,QAAQ,EAAE;AALZ,kBAOE0H,wCAAC,IAAD;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,IAAI,EAAEqO,QAFR;AAGE,IAAA,SAAS,EAAEoH,OAAO,GAAGxH,UAAU,CAAC9E,eAAd,GAAgC8E,UAAU,CAAChF,eAH/D;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,IAPF,eAcEjJ,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACtC,QAFxB;AAGE,IAAA,KAAK,EAAEwT,OAAO,GAAGjR,WAAW,CAAC9B,cAAf,GAAgC8B,WAAW,CAACjC;AAH5D,KAKGc,QALH,CAdF,CADF;AAwBD,CAhCM;AAkCPmS,QAAQ,CAAC7R,SAAT,GAAqB;AACnBL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADQ;AAKnBT,EAAAA,QAAQ,EAAEO,6BAAS,CAACC,SAAV,CAAoB,CAC5BD,6BAAS,CAACE,MADkB,EAE5BF,6BAAS,CAACM,OAFkB,CAApB,EAGP6J,UARgB;AASnBJ,EAAAA,OAAO,EAAE/J,6BAAS,CAACoK,IAAV,CAAeD,UATL;AAUnB0H,EAAAA,OAAO,EAAE7R,6BAAS,CAACoK,IAVA;AAWnBK,EAAAA,QAAQ,EAAEzN;AAXS,CAArB;AAcA4U,QAAQ,CAACnR,YAAT,GAAwB;AACtBf,EAAAA,SAAS,EAAE,EADW;AAEtBmS,EAAAA,OAAO,EAAE,KAFa;AAGtBpH,EAAAA,QAAQ,EAAEzN,SAAS,CAAC6D;AAHE,CAAxB;AAce,SAASmR,WAAT,QAAiD;AAAA,MAA1BC,WAA0B,SAA1BA,WAA0B;AAAA,MAAbC,SAAa,SAAbA,SAAa;;AAC9D,kBAAgCtG,cAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOuG,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,sBACEhW;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,KAAK,EAAE;AAAE8U,MAAAA,OAAO,EAAE;AAAX;AAA9C,KACGe,WAAW,CAAC;AAAA,WAAMG,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,GAAD,CADd,EAEGA,QAAQ,IAAID,SAAS,CAAC;AAAA,WAAME,WAAW,CAAC,KAAD,CAAjB;AAAA,GAAD,CAFxB,CADF;AAMD;AAEDJ,WAAW,CAACjS,SAAZ,GAAwB;AACtBkS,EAAAA,WAAW,EAAEjS,6BAAS,CAACoK,IAAV,CAAeD,UADN;AAEtB+H,EAAAA,SAAS,EAAElS,6BAAS,CAACoK,IAAV,CAAeD;AAFJ,CAAxB;;AClFe,SAASkI,KAAT,OAA4B;AAAA,MAAX/lB,OAAW,QAAXA,OAAW;AACzC,sBAAO2kB,qBAAY,eAEf7U;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,KAAD;AACE,IAAA,IAAI,EAAEuE,eAAe,CAACxC,MADxB;AAEE,IAAA,KAAK,EAAEyC,WAAW,CAAC7B;AAFrB,KAIGzS,OAJH,CADF,CAFe,EAWjBnB,QAAQ,CAACmmB,cAAT,CAAwB,iBAAxB,CAXiB,CAAnB;AAaD;AAEDe,KAAK,CAACtS,SAAN,GAAkB;AAChBzT,EAAAA,OAAO,EAAE0T,6BAAS,CAACE,MAAV,CAAiBiK;AADV,CAAlB;;SCUwBmI,gBAAgBhV;MACtCoC,SAAS;MACTpT,OAAO;MACPD,OAAO;MACP+e,MAAM;MACNJ,QAAQ;;UAERuH,UAAU;MACVC,aAAa;MACbC,gBAAgB;MAChBC,cAAc;AAEN,MAAAjH,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;;AACF,MAAAnO,KAA4BqO,cAAQ,CAAC,KAAD,CAApC;AAAA,MAAC+G,SAAS,QAAV;AAAA,MAAYC,YAAY,QAAxB;;AAEN,MAAMC,UAAU,GAAGha,YAAM,CAAC,IAAD,CAAzB;AACA,MAAMia,YAAY,GAAGja,YAAM,CAAC,IAAD,CAA3B;AAEA,MAAMka,gBAAgB,GAAYC,qBAAa,CAAC1mB,OAAD,CAA/C;AACA,MAAM2mB,iBAAiB,GAAYD,qBAAa,CAAC1mB,OAAD,CAAhD;AACA,MAAM4mB,kBAAkB,GAAaC,uBAAe,CAAC9mB,OAAD,EAAUC,OAAV,CAAf,IAAqCA,OAAO,CAACgM,YAAR,EAArC,IAA+D8S,MAApG;AACA,MAAMgI,kBAAkB,GAAaC,qBAAa,CAAChnB,OAAD,EAAUC,OAAV,CAAb,IAAmC8e,MAAxE;AAEA,MAAMkI,gBAAgB,GAAW,MAAU,CAAA,CAA3C;AAGA,MAAMC,gBAAgB,GAAWC,0BAAkB,CAAClnB,OAAD,CAAnD;;AAEA,MAAI,EAAEymB,gBAAgB,IAAIO,gBAApB,IAAwCJ,kBAAxC,IAA8DE,kBAA9D,IAAoFG,gBAAtF,CAAJ,EAA6G;AAC3G,WAAO,IAAP;AACD;;AAED,MAAME,WAAW,GAAG,SAAdA,WAAc,CAACnnB,OAAD;AAClBonB,IAAAA,uBAAe,CAACpnB,OAAD,CAAf;AACAsmB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACApnB,IAAAA,UAAU,CAAC;AACTonB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAND;;AAQA,sBACExW;AACE,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CAACxM,SAAD,EAAY,wBAAZ,CAAD,CADzB;AAEE,IAAA,GAAG,EAAEoT;AAFP,kBAIE1W,wCAAC,WAAD;AACE,IAAA,WAAW,EAAE,qBAACuX,cAAD;AAA8C,0BACzDvX,wCAACwX,kBAAD;AACE,QAAA,SAAS,EAAC,iCADZ;AAEE,QAAA,GAAG,EAAEf,UAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC,MAJT;AAKE,QAAA,OAAO,EAAE;AACPc,UAAAA,cAAc;AACdlB,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,SARH;AASE,QAAA,MAAM,EAAE;AACNA,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AAXH,sBAaErW,wCAAC,IAAD;AACE,QAAA,SAAS,EAAC,uCADZ;AAEE,QAAA,IAAI,EAAEY,SAAS,CAACsE,YAFlB;AAGE,QAAA,SAAS,EAAE+I,UAAU,CAAC9E,eAHxB;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC;AALT,QAbF,CADyD;AAsB1D,KAvBH;AAwBE,IAAA,SAAS,EAAE,mBAACsO,KAAD;;;AACT,UAAM3X,aAAa,GAAG,SAAhBA,aAAgB;AACpB2X,QAAAA,KAAK;AACLpB,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,OAHD;;AAIA,0BACErW,wCAAC,SAAD;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,SAAS,EAAEyW,UAFb;AAGE,QAAA,gBAAgB,EAAEC,YAHpB;AAIE,QAAA,aAAa,EAAE5W,aAJjB;AAKE,QAAA,QAAQ,EAAEkP;AALZ,SAOG6H,iBAAiB,iBAChB7W,wCAAC,QAAD;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,OAAO,EAAE;AACP;AACAF,UAAAA,aAAa;AACd,SALH;AAME,QAAA,OAAO,EAAE,CAAA5P,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwnB,eAAT,IAA2B,CANtC;AAOE,QAAA,QAAQ,EAAE9W,SAAS,CAACuH;AAPtB,SASGkH,SAAS,CAACsI,mBATb,CARJ,EAoBGhB,gBAAgB,iBACf3W,wCAAC,QAAD;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,OAAO,EAAE;;;AACPqX,UAAAA,WAAW,CAAC,MAACnnB,OAAD,UAAA,iBAAA,SAAA,MAA0BA,OAA3B,CAAX;AACA4P,UAAAA,aAAa;AACd,SALH;AAME,QAAA,QAAQ,EAAEc,SAAS,CAACsH;AANtB,SAQGmH,SAAS,CAACuI,kBARb,CArBJ,EAgCGT,gBAAgB,iBACfnX,wCAAC,QAAD;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,OAAO,EAAE;AACPsW,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAxW,UAAAA,aAAa;AAEd,SANH;AAOE,QAAA,QAAQ,EAAEc,SAAS,CAACiF;AAPtB,SASGwJ,SAAS,CAACwI,kBATb,CAjCJ,EA8CGX,gBAAgB,CA9CnB,EA2DGJ,kBAAkB,iBACjB9W,wCAAC,QAAD;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,OAAO,EAAE;AACP,cAAI,CAAC4O,QAAL,EAAe;AACbwH,YAAAA,aAAa,CAAClmB,OAAD,CAAb;AACA4P,YAAAA,aAAa;AACd;AACF,SAPH;AAQE,QAAA,QAAQ,EAAEc,SAAS,CAACwH;AARtB,SAUGiH,SAAS,CAACyI,oBAVb,CA5DJ,EAyEGd,kBAAkB,iBACjBhX,wCAAC,QAAD;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,OAAO,EAAE;AACP,cAAI,CAAC4O,QAAL,EAAe;AACbuH,YAAAA,UAAU,CAAC,IAAD,CAAV;AACArW,YAAAA,aAAa;AACd;AACF,SAPH;AAQE,QAAA,OAAO,EAAE,CAAA,MAAA5P,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6nB,UAAT,UAAA,iBAAA,SAAA,MAAqBC,UAArB,IAAkC,CAR7C;AASE,QAAA,QAAQ,EAAEpX,SAAS,CAAC2H;AATtB,SAWG8G,SAAS,CAAC4I,oBAXb,CA1EJ,CADF;AA2FD;AAxHH,IAJF,EA8HG1B,SAAS,iBACRvW,wCAAC,KAAD;AAAO,IAAA,OAAO,EAAEqP,SAAS,CAAC6I;AAA1B,IA/HJ,CADF;AAoID;;SC/IuBC,eAAejX;;;MACrCjR,OAAO;MACPsf;MAAA6I,WAAW,mBAAG;MACdC;MAAAC,QAAQ,mBAAG;MACXhV,SAAS;MACTpT,OAAO;;AAEP8B,EAAAA,MAAM;;AAEN;AACA;AACAumB,EAAAA,QAAQ;MACRjC,cAAc;MACdH,UAAU;MACVC,aAAa;MACboC;MAAA5J,QAAQ,mBAAC;AAID,MAAAS,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AACR,MAAMmJ,YAAY,GAAGC,4BAAoB,EAAzC;AACA,MAAMC,SAAS,GAAGlc,YAAM,CAAC,IAAD,CAAxB;AAGA,MAAMuS,MAAM,GACV4J,wBAAgB,CAAC3oB,OAAD,EAAUC,OAAV,CAAhB,IACA,CAAC+mB,qBAAa,CAAChnB,OAAD,EAAUC,OAAV,CADd,IAEA2oB,yBAAiB,CAAC7mB,MAAD,EAAS9B,OAAT,CAHnB;AAIA,MAAM4oB,iBAAiB,GAAYC,+BAAuB,CACxD7oB,OADwD,CAA1D;AAIA,MAAM8oB,eAAe,GAAGhK,MAAM,GAC1B,gCAD0B,GAE1B,gCAFJ;AAGA,MAAMiK,oBAAoB,GAAGb,WAAW,GACpC,oCADoC,GAEpC,EAFJ;AAGA,MAAMc,iBAAiB,GAAGZ,QAAQ,GAAG,iCAAH,GAAuC,EAAzE;;AAEA,MAAI,CAAA,MAAApoB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE+C,cAAT,UAAA,iBAAA,SAAA,WAAA/C,QAAA,KAA+B,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE8L,WAAT,MAAyB,OAA5D,EAAqE;AACnE,wBAAOgE,wCAACmZ,oBAAD;AAAoB,MAAA,OAAO,EAAEjpB;AAA7B,MAAP;AACD;;AAGD,sBACE8P;AACE,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CACtBxM,SADsB,EAEtB,sBAFsB,EAGtB0V,eAHsB,EAItBC,oBAJsB,EAKtBC,iBALsB,CAAD;AADzB,KAUG,CAAClK,MAAD,IAAW,CAACsJ,QAAZ,iBACCtY,wCAACoZ,cAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,GAAG,EAAE,CAAA,MAAAlpB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEmC,MAAT,UAAA,iBAAA,SAAA,MAAiBqc,UAAjB,KAA+B,EAFtC;AAGE,IAAA,GAAG,EAAEiK,SAHP;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,KAAK,EAAC;AALR,IAXJ,eAoBE3Y;AAAK,IAAA,SAAS,EAAC;AAAf,kBAEEA;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAEG,CAACgP,MAAD,IAAW,CAACsJ,QAAZ,iBACDtY,+FACEA,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,mCADZ;AAEE,IAAA,KAAK,EAAEwE,WAAW,CAAChC,cAFrB;AAGE,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EAAEkP,uBAAuB,CAC5B,CAAA,MAAAniB,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEmC,MAAT,UAAA,iBAAA,SAAA,MAAiBJ,QAAjB,KAA6B,EADD;AADzB,KAHT;AAQE,IAAA,IAAI,EAAEsS,eAAe,CAACrC;AARxB,KAUGmX,qBAAa,CAACnpB,OAAD,CAVhB,CADF,EAcG4oB,iBAAiB,IAAI,CAACR,QAAtB,iBACCtY,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC;AAFxB,KAIGiN,SAAS,CAACiK,eAJb,CAfJ,eAuBEtZ,wCAAC,eAAD;AACA,IAAA,SAAS,EAAC,wCADV;AAEA,IAAA,OAAO,EAAE/P,OAFT;AAGA,IAAA,OAAO,EAAEC,OAHT;AAIA,IAAA,MAAM,EAAE8e,MAJR;AAKA,IAAA,QAAQ,EAAEJ,QALV;AAMA,IAAA,QAAQ,EAAE2J,QANV;AAOA,IAAA,UAAU,EAAEpC,UAPZ;AAQA,IAAA,aAAa,EAAEC,aARf;AASA,IAAA,cAAc,EAAEE;AAThB,IAvBF,CAHF,CADF,eAyCEtW;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,KAECuZ,qBAAa,CAACrpB,OAAD,CAAb,iBACC8P,wCAAC,mBAAD;AACE,IAAA,MAAM,EAAEgP,MADV;AAEE,IAAA,OAAO,EAAE9e,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEA;AAFpB,IAHF,EAQCspB,mBAAW,CAACtpB,OAAD,CAAX,iBACC8P,wCAAC,iBAAD;AACE,IAAA,OAAO,EAAE9P,OADX;AAEE,IAAA,MAAM,EAAE8e;AAFV,IATF,EAeEyK,2BAAmB,CAACvpB,OAAO,CAACwpB,UAAT,CAAnB,iBACE1Z,wCAAC,yBAAD;AAA2B,IAAA,OAAO,EAAE9P,OAApC;AAA4D,IAAA,MAAM,EAAE8e;AAApE,IAhBJ,EAoBE2K,yBAAiB,CAACzpB,OAAO,CAACwpB,UAAT,CAAjB,iBACE1Z,wCAAC,uBAAD;AAAyB,IAAA,OAAO,EAAE9P,OAAlC;AAA0D,IAAA,MAAM,EAAE8e;AAAlE,IArBJ,EAwBC4K,2BAAmB,CAAC1pB,OAAD,CAAnB,KACCuoB,YAAY,CAACoB,IADd,iBAEC7Z,wCAAC8Z,2BAAD;AACE,IAAA,OAAO,EAAE5pB,OADX;AAEE,IAAA,MAAM,EAAE8e;AAFV,IA1BF,EA+BCoI,0BAAkB,CAAClnB,OAAD,CAAlB,iBACC8P,wCAAC+Z,gCAAD;AACE,IAAA,OAAO,EAAE7pB,OADX;AAEE,IAAA,MAAM,EAAE8e,MAFV;AAGE,IAAA,cAAc,EAAEsH;AAHlB,IAhCF,EAsCCsD,2BAAmB,CAAC1pB,OAAD,CAAnB,KACCuoB,YAAY,CAACuB,OADd,iBAECha,wCAACia,8BAAD;AAAwB,IAAA,OAAO,EAAE/pB,OAAjC;AAA0C,IAAA,MAAM,EAAE8e;AAAlD,IAxCF,CADF,EA6CI,CAAE,CAACA,MAAD,IAAWsJ,QAAZ,IAAyBtJ,MAA1B,kBACEhP,wCAAC,eAAD;AACE,IAAA,SAAS,EAAC,wCADZ;AAEE,IAAA,OAAO,EAAE/P,OAFX;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAE8e,MAJV;AAKE,IAAA,QAAQ,EAAEJ,QALZ;AAME,IAAA,QAAQ,EAAE2J,QANZ;AAOE,IAAA,UAAU,EAAEpC,UAPd;AAQE,IAAA,aAAa,EAAEC,aARjB;AASE,IAAA,cAAc,EAAEE;AATlB,IA9CN,CAzCF,CAFF,EA8GG,CAAC8B,WAAD,iBACCpY;AAAK,IAAA,SAAS,EAAE;AAAhB,KACGgP,MAAM,gBACLhP,wCAAC,aAAD;AACE,IAAA,OAAO,EAAE9P,OADX;AAEE,IAAA,MAAM,EAAEgqB,+BAAuB,CAACjqB,OAAD,EAAUC,OAAV;AAFjC,IADK,gBAML8P,wCAAC,KAAD;AACE,IAAA,SAAS,EAAE,kCADb;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACnC,SAFxB;AAGE,IAAA,KAAK,EAAEoC,WAAW,CAAChC;AAHrB,KAKGtQ,2BAAmB,CAAChC,OAAD,CALtB,CAPJ,CA/GJ,CApBF,CADF;AAwJD;;ACpPD,IAAMiqB,WAAW,GAAG,EAApB;;AACA,IAAMC,MAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdhF,EAAAA,KAAK,EAAE;AAFO,CAAhB;;AAKA,IAAMiF,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAc,UAACnH,KAAD,EAAW;AAChD,QAAIA,KAAK,CAACE,MAAN,CAAakH,KAAb,IAAsBpH,KAAK,CAACE,MAAN,CAAakH,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/CD,MAAAA,QAAQ,CAACnH,KAAK,CAACE,MAAN,CAAakH,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACD,KAH+C;;;AAKhDpH,IAAAA,KAAK,CAACE,MAAN,CAAa5W,KAAb,GAAqB,EAArB;AACD,GANwB;AAAA,CAAzB;;AAQA,IAAM+d,YAAY,gBAAG1a,yBAAK,CAAC2a,UAAN,CAAiB,UAAC3H,KAAD,EAAQ4H,GAAR,EAAgB;AACpD,MACEC,MADF,GAWI7H,KAXJ,CACE6H,MADF;AAAA,MAEEjM,QAFF,GAWIoE,KAXJ,CAEEpE,QAFF;AAAA,MAGEjS,KAHF,GAWIqW,KAXJ,CAGErW,KAHF;AAAA,MAIEwC,IAJF,GAWI6T,KAXJ,CAIE7T,IAJF;AAAA,MAKE2b,WALF,GAWI9H,KAXJ,CAKE8H,WALF;AAAA,MAMEC,SANF,GAWI/H,KAXJ,CAME+H,SANF;AAAA,MAOEC,YAPF,GAWIhI,KAXJ,CAOEgI,YAPF;AAAA,MAQEC,aARF,GAWIjI,KAXJ,CAQEiI,aARF;AAAA,MASEC,YATF,GAWIlI,KAXJ,CASEkI,YATF;AAAA,MAUEC,aAVF,GAWInI,KAXJ,CAUEmI,aAVF;;AAaA,oBAAsBvuB,gBAAU,CAAC0iB,uCAAD,CAAhC;AAAA,MAAQD,SAAR,eAAQA,SAAR;;AACA,MAAM+L,YAAY,GAAG3e,YAAM,CAAC,IAAD,CAA3B;;AACA,kBAAoC+S,cAAQ,CAAC7S,KAAD,CAA5C;AAAA;AAAA,MAAO0e,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA4C9L,cAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAO+L,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAI;AACF,UAAMC,IAAI,GAAGd,GAAG,CAAC/jB,OAAjB;AACA,UAAM8kB,UAAU,GAAGlL,MAAM,CAAC1hB,QAAP,CAAgB6sB,IAAhB,CAAqB9kB,YAArB,GAAoC,GAAvD;;AACA,UAAI4kB,IAAI,IAAIA,IAAI,CAACxsB,YAAL,IAAqBirB,WAAjC,EAA8C;AAC5C,YAAIwB,UAAU,GAAGD,IAAI,CAACxsB,YAAtB,EAAoC;AAClCwsB,UAAAA,IAAI,CAACnY,KAAL,CAAW7E,MAAX,GAAoB,MAApB;AACAgd,UAAAA,IAAI,CAACnY,KAAL,CAAW7E,MAAX,aAAuBid,UAAvB;AACD,SAHD,MAGO;AACLD,UAAAA,IAAI,CAACnY,KAAL,CAAW7E,MAAX,GAAoB,MAApB;AACAgd,UAAAA,IAAI,CAACnY,KAAL,CAAW7E,MAAX,aAAuBgd,IAAI,CAACxsB,YAA5B;AACD;AACF,OARD,MAQO;AACLwsB,QAAAA,IAAI,CAACnY,KAAL,CAAW7E,MAAX,GAAoB,EAApB;AACD;AACF,KAdD,CAcE,OAAOvP,KAAP,EAAc;AAEf;AACF,GAlBD,CAnBoD;;;AAwCpDoH,EAAAA,eAAS,CAAC,YAAM;AACdklB,IAAAA,SAAS;AACT,WAAOA,SAAP;AACD,GAHQ,EAGN,CAACJ,UAAD,CAHM,CAAT;;AAKA,MAAM3e,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI2e,UAAU,IAAIA,UAAU,CAACze,IAAX,GAAkBvL,MAAlB,GAA2B,CAA7C,EAAgD;AAC9C,UAAMwqB,iBAAiB,GAAGR,UAAU,CAACze,IAAX,EAA1B;;AACA,UAAIie,MAAJ,EAAY;AACVI,QAAAA,aAAa,CAAC9b,IAAD,EAAO0c,iBAAP,EAA0B,YAAM;AAC3CX,UAAAA,YAAY;AACb,SAFY,CAAb;AAGD,OAJD,MAIO;AACLD,QAAAA,aAAa,CAACY,iBAAD,CAAb;AACAP,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF;AACF,GAZD;;AAcA,sBACEtb;AACE,IAAA,SAAS,EAAE,CACT6a,MAAM,GAAG,0BAAH,GAAgC,EAD7B,EAETjM,QAAQ,GAAG,oCAAH,GAA0C,EAFzC,EAGTlL,IAHS,CAGJ,iCAHI;AADb,kBAME1D;AACE,IAAA,SAAS,EAAE,CACT,oBADS,EAET4O,QAAQ,GAAG,8BAAH,GAAoC,EAFnC,EAGTlL,IAHS,CAGJ,GAHI;AADb,kBAME1D;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,QAAQ,EAAE4O,QAFZ;AAGE,IAAA,GAAG,EAAEgM,GAHP;AAIE,IAAA,IAAI,EAAEzb,IAJR;AAKE,IAAA,KAAK,EAAEkc,UALT;AAME,IAAA,SAAS,EAAEN,SANb;AAOE,IAAA,QAAQ,EAAE,kBAACziB,CAAD,EAAO;AACfgjB,MAAAA,aAAa,CAAChjB,CAAC,CAACib,MAAF,CAAS5W,KAAV,CAAb;AACAwe,MAAAA,aAAa;AACd,KAVH;AAWE,IAAA,SAAS,EAAE,mBAAC7iB,CAAD,EAAO;AAChB,UAAIA,CAAC,CAACqd,OAAF,KAAc0E,OAAO,CAACC,KAA1B,EAAiC;AAC/BkB,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AACD,UAAI,CAACD,cAAD,IAAmBjjB,CAAC,CAACqd,OAAF,KAAc0E,OAAO,CAAC/E,KAA7C,EAAoD;AAClDhd,QAAAA,CAAC,CAACwjB,cAAF;AACApf,QAAAA,WAAW;AACZ;AACF,KAnBH;AAoBE,IAAA,OAAO,EAAE,iBAACpE,CAAD,EAAO;AACd,UAAIA,CAAC,CAACqd,OAAF,KAAc0E,OAAO,CAACC,KAA1B,EAAiC;AAC/BkB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF;AAxBH,IANF,EAiCG,CAACH,UAAD,iBACCrb,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAAC1C,MAFxB;AAGE,IAAA,KAAK,EAAE2C,WAAW,CAAC/B;AAHrB,KAKGqY,WAAW,IAAIzL,SAAS,CAAC0M,oCAL5B,CAlCJ,EA6DG,CAAClB,MAAD,iBACC7a,wCAACwX,kBAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAE,mBAAM;AACb;AACA4D,MAAAA,YAAY,CAACvkB,OAAb,CAAqBmlB,KAArB;AACD;AAPH,kBASEhc,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAAC+D,MADlB;AAEE,IAAA,SAAS,EAAEsJ,UAAU,CAACpF,eAFxB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IATF,eAeE7I;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAEob,YAHP;AAIE,IAAA,QAAQ,EAAEb,gBAAgB,CAACS,YAAD;AAJ5B,IAfF,CA9DJ,EAsFG,CAACH,MAAD,iBACC7a,wCAACwX,kBAAD;AACE,IAAA,SAAS,EAAE1H,oBAAY,CAAC,CAAC,0BAAD,EAA6BlB,QAAQ,GAAG,mCAAH,GAAyC,EAA9E,CAAD,CADzB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAElS;AAJX,kBAMEsD,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAAC0G,IADlB;AAEE,IAAA,SAAS,EAAE2G,UAAU,CAACnF,KAFxB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC;AAJT,IANF,CAvFJ,CANF,EA8GG+R,MAAM,iBACL7a;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAACic,cAAD;AACE,IAAA,SAAS,EAAC,yCADZ;AAEE,IAAA,IAAI,EAAEC,mBAAW,CAACvT,SAFpB;AAGE,IAAA,IAAI,EAAEwT,mBAAW,CAACC,KAHpB;AAIE,IAAA,OAAO,EAAElB;AAJX,KAMG7L,SAAS,CAACgN,cANb,CADF,eASErc,wCAACic,cAAD;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,IAAI,EAAEC,mBAAW,CAACpZ,OAFpB;AAGE,IAAA,IAAI,EAAEqZ,mBAAW,CAACC,KAHpB;AAIE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIf,UAAJ,EAAgB;AACd,YAAMQ,iBAAiB,GAAGR,UAAU,CAACze,IAAX,EAA1B;AACAqe,QAAAA,aAAa,CAAC9b,IAAD,EAAO0c,iBAAP,EAA0B,YAAM;AAC3CX,UAAAA,YAAY;AACb,SAFY,CAAb;AAGD;AACF;AAXH,KAaG7L,SAAS,CAACiN,YAbb,CATF,CA/GJ,CADF;AA4ID,CAvMoB,CAArB;AAyMA5B,YAAY,CAAC/W,SAAb,GAAyB;AACvBmX,EAAAA,WAAW,EAAElX,6BAAS,CAACC,SAAV,CAAoB,CAACD,6BAAS,CAACE,MAAX,EAAmBF,6BAAS,CAACkL,IAA7B,CAApB,CADU;AAEvB+L,EAAAA,MAAM,EAAEjX,6BAAS,CAACkL,IAFK;AAGvB3P,EAAAA,IAAI,EAAEyE,6BAAS,CAACC,SAAV,CAAoB,CAACD,6BAAS,CAACE,MAAX,EAAmBF,6BAAS,CAACK,MAA7B,CAApB,CAHiB;AAIvBtH,EAAAA,KAAK,EAAEiH,6BAAS,CAACE,MAJM;AAKvB8K,EAAAA,QAAQ,EAAEhL,6BAAS,CAACkL,IALG;AAMvBiM,EAAAA,SAAS,EAAEnX,6BAAS,CAACK,MANE;AAOvB+W,EAAAA,YAAY,EAAEpX,6BAAS,CAACoK,IAPD;AAQvBiN,EAAAA,aAAa,EAAErX,6BAAS,CAACoK,IARF;AASvBmN,EAAAA,aAAa,EAAEvX,6BAAS,CAACoK,IATF;AAUvBkN,EAAAA,YAAY,EAAEtX,6BAAS,CAACoK;AAVD,CAAzB;AAaA0M,YAAY,CAACrW,YAAb,GAA4B;AAC1B1H,EAAAA,KAAK,EAAE,EADmB;AAE1Bse,EAAAA,aAAa,EAAEb,MAFW;AAG1Bjb,EAAAA,IAAI,EAAE,oBAHoB;AAI1B0b,EAAAA,MAAM,EAAE,KAJkB;AAK1BjM,EAAAA,QAAQ,EAAE,KALgB;AAM1BkM,EAAAA,WAAW,EAAE,EANa;AAO1BC,EAAAA,SAAS,EAAE,IAPe;AAQ1BC,EAAAA,YAAY,EAAEZ,MARY;AAS1Bc,EAAAA,YAAY,EAAEd,MATY;AAU1Be,EAAAA,aAAa,EAAEf;AAVW,CAA5B;;AC9OA,IAAMmC,aAAa,GAAG,SAAhBA,aAAgB,CAACvJ,KAAD,EAAW;AAC/B,MACEwJ,YADF,GAGIxJ,KAHJ,CACEwJ,YADF;AAAA,MAEEC,eAFF,GAGIzJ,KAHJ,CAEEyJ,eAFF;;AAIA,oBAAsB7vB,gBAAU,CAAC0iB,uCAAD,CAAhC;AAAA,MAAQD,SAAR,eAAQA,SAAR;;AACA,sBACErP,wCAAC0c,aAAD;AACE,IAAA,QAAQ,EAAEF,YADZ;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,SAAS,EAAEpN,SAAS,CAACsN;AAJvB,IADF;AAQD,CAdD;;AAgBAJ,aAAa,CAAC5Y,SAAd,GAA0B;AACxB6Y,EAAAA,YAAY,EAAE5Y,6BAAS,CAACoK,IAAV,CAAeD,UADL;AAExB0O,EAAAA,eAAe,EAAE7Y,6BAAS,CAACoK,IAAV,CAAeD;AAFR,CAA1B;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEe,SAASrN,aAAT,OASZ;AAAA,MARD4C,SAQC,QARDA,SAQC;AAAA,MAPDnT,GAOC,QAPDA,GAOC;AAAA,MANDygB,GAMC,QANDA,GAMC;AAAA,MALDrS,KAKC,QALDA,KAKC;AAAA,MAJDG,MAIC,QAJDA,MAIC;AAAA,MAHDke,gBAGC,QAHDA,gBAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,kBAAwDtN,cAAQ,CAAC,KAAD,CAAhE;AAAA;AAAA,MAAOuN,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,mBAA8CxN,cAAQ,CAAC,IAAD,CAAtD;AAAA;AAAA,MAAOyN,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,MAAMC,gBAAgB,GAAGxd,aAAO,CAAC,YAAM;AACrC,QAAI,OAAOid,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,aAAOA,gBAAgB,EAAvB;AACD;;AACD,WAAOA,gBAAP;AACD,GAL+B,EAK7B,CAACA,gBAAD,CAL6B,CAAhC;AAOA,MAAMQ,WAAW,GAAGzd,aAAO,CAAC,YAAM;AAChC,QAAImd,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAA1C,EAAsD;AACpD,aAAOA,WAAW,CAAC;AACjBvZ,QAAAA,KAAK,EAAE;AACLhF,UAAAA,KAAK,EAAE,MADF;AAELsP,UAAAA,QAAQ,EAAEtP,KAFL;AAGL8e,UAAAA,QAAQ,EAAE,OAHL;AAIL3e,UAAAA,MAAM,EAANA,MAJK;AAKLqW,UAAAA,QAAQ,EAAE,UALL;AAMLD,UAAAA,OAAO,EAAE,MANJ;AAOLwI,UAAAA,cAAc,EAAE,QAPX;AAQLC,UAAAA,UAAU,EAAE;AARP;AADU,OAAD,CAAlB;AAYD;;AACD,WAAO,IAAP;AACD,GAhB0B,EAgBxB,CAACT,WAAD,CAhBwB,CAA3B;AAkBA,MAAMU,iBAAiB,GAAG7d,aAAO,CAAC,YAAM;AACtCqd,IAAAA,uBAAuB,CAAC,KAAD,CAAvB,CADsC;;AAGtC,wBACEhd;AACE,MAAA,SAAS,EAAC,8CADZ;AAEE,MAAA,GAAG,EAAE7P,GAFP;AAGE,MAAA,GAAG,EAAEygB,GAHP;AAIE,MAAA,MAAM,EAAE;AAAA,eAAMsM,kBAAkB,CAAC,KAAD,CAAxB;AAAA,OAJV;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMF,uBAAuB,CAAC,IAAD,CAA7B;AAAA;AALX,MADF;AASD,GAZgC,EAY9B,CAAC7sB,GAAD,CAZ8B,CAAjC;AAcA,sBACE6P;AACE,IAAA,SAAS,EAAE,iDACLwD,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAET,yBAFS,GAGTI,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,KAAK,EAAE;AACLnF,MAAAA,KAAK,EAAE,MADF;AAELsP,MAAAA,QAAQ,EAAEtP,KAFL;AAGL8e,MAAAA,QAAQ,EAAE,OAHL;AAIL3e,MAAAA,MAAM,EAANA;AAJK;AALT,KAYGue,eAAe,IAAIG,WAZtB,EAcIL,oBAAoB,GAChBI,gBADgB,gBAGhBnd;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,KAAK,EAAE;AACLzB,MAAAA,KAAK,EAAE,MADF;AAELsP,MAAAA,QAAQ,EAAEtP,KAFL;AAGL8e,MAAAA,QAAQ,EAAE,OAHL;AAIL3e,MAAAA,MAAM,EAANA,MAJK;AAKLqW,MAAAA,QAAQ,EAAE,UALL;AAML0I,MAAAA,gBAAgB,EAAE,WANb;AAOLC,MAAAA,kBAAkB,EAAE,QAPf;AAQLC,MAAAA,cAAc,EAAE,OARX;AASLC,MAAAA,eAAe,gBAASztB,GAAT,MATV;AAUL0tB,MAAAA,YAAY,EAAEhB,MAAM,GAAG,KAAH,GAAW;AAV1B;AAFT,IAjBR,EAkCGW,iBAlCH,CADF;AAsCD;AAED9c,aAAa,CAACiD,SAAd,GAA0B;AACxBL,EAAAA,SAAS,EAAEM,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAD6B,EAE7BF,6BAAS,CAACE,MAFmB,CAApB,CADa;AAKxB3T,EAAAA,GAAG,EAAEyT,6BAAS,CAACE,MAAV,CAAiBiK,UALE;AAMxB6C,EAAAA,GAAG,EAAEhN,6BAAS,CAACE,MANS;AAOxBvF,EAAAA,KAAK,EAAEqF,6BAAS,CAACC,SAAV,CAAoB,CACzBD,6BAAS,CAACE,MADe,EAEzBF,6BAAS,CAACK,MAFe,CAApB,CAPiB;AAWxBvF,EAAAA,MAAM,EAAEkF,6BAAS,CAACC,SAAV,CAAoB,CAC1BD,6BAAS,CAACE,MADgB,EAE1BF,6BAAS,CAACK,MAFgB,CAApB,CAXgB;AAexB2Y,EAAAA,gBAAgB,EAAEhZ,6BAAS,CAACC,SAAV,CAAoB,CACpCD,6BAAS,CAACM,OAD0B,EAEpCN,6BAAS,CAACoK,IAF0B,CAApB,CAfM;AAmBxB8O,EAAAA,WAAW,EAAElZ,6BAAS,CAACoK,IAnBC;AAoBxB6O,EAAAA,MAAM,EAAEjZ,6BAAS,CAACkL;AApBM,CAA1B;AAsBApO,aAAa,CAAC2D,YAAd,GAA6B;AAC3Bf,EAAAA,SAAS,EAAE,EADgB;AAE3BsZ,EAAAA,gBAAgB,EAAE,IAFS;AAG3BE,EAAAA,WAAW,EAAE,IAHc;AAI3BlM,EAAAA,GAAG,EAAE,EAJsB;AAK3BrS,EAAAA,KAAK,EAAE,IALoB;AAM3BG,EAAAA,MAAM,EAAE,IANmB;AAO3Bme,EAAAA,MAAM,EAAE;AAPmB,CAA7B;;ACvHA,IAAMiB,sBAAsB,GAAG,qBAA/B;;AAOA,IAAMX,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACjc,EAAD;MAAG3C,KAAK;MAAEG,MAAM;AACvC,MAAIqf,SAAS,GAAG3qB,kBAAU,CAACmL,KAAD,CAA1B;AACA,MAAIyf,UAAU,GAAG5qB,kBAAU,CAACsL,MAAD,CAA3B;;AACA,MAAI,OAAOqf,SAAP,KAAqB,QAAzB,EAAmC;AACjCA,IAAAA,SAAS,IAAI,KAAb;AACD;;AACD,MAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAClCA,IAAAA,UAAU,IAAI,KAAd;AACD;;AAED,sBACEhe;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,IAAA,KAAK,EAAE;AAAEzB,MAAAA,KAAK,OAAP;AAASG,MAAAA,MAAM;AAAf;AAArD,kBACEsB,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAACiH,IADlB;AAEE,IAAA,SAAS,EAAEoG,UAAU,CAACrF,OAFxB;AAGE,IAAA,KAAK,EAAEmV,SAHT;AAIE,IAAA,MAAM,EAAEC;AAJV,IADF,CADF;AAUD,CApBD;;AAsBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC/c,EAAD;MACxB3C,KAAK;MACLG,MAAM;AACqB,sBAC3BsB,wCAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEzB,KAAzB;AAAgC,IAAA,MAAM,EAAEG;AAAxC,IAD2B;AAE5B,CALD;;AAeO,IAAMwf,WAAW,GAAG,SAAdA,WAAc,CAAChd,EAAD;MACzBC;MAAApD,GAAG,mBAAG;MACNkR;MAAA2B,GAAG,mBAAG;MACNlS,MAAM;MACNH,KAAK;MACL4f,sBAAsB;;AAEtB,MAAMvB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAM,WAAAuB,sBAAsB,GAAGA,sBAAsB,CAAC;AAAE5f,MAAAA,KAAK,OAAP;AAASG,MAAAA,MAAM;AAAf,KAAD,CAAzB,GAA+Cuf,iBAAiB,CAAC;AAAE1f,MAAAA,KAAK,OAAP;AAASG,MAAAA,MAAM;AAAf,KAAD,CAAtF;AAAyG,GAAxI;;AAEA,MAAI,OAAOX,GAAP,KAAe,QAAnB,EAA6B;AAC3B,wBACEiC,wCAAC,aAAD;AACE,MAAA,SAAS,EAAE8d,sBADb;AAEE,MAAA,GAAG,EAAE/f,GAFP;AAGE,MAAA,MAAM,EAAEW,MAHV;AAIE,MAAA,KAAK,EAAEH,KAJT;AAKE,MAAA,GAAG,EAAEqS,GALP;AAME,MAAA,gBAAgB,EAAEgM;AANpB,MADF;AAUD;;AAED,MAAI7e,GAAG,IAAIA,GAAG,CAAC1M,MAAf,EAAuB;AACrB,QAAI0M,GAAG,CAAC1M,MAAJ,KAAe,CAAnB,EAAsB;AACpB,0BACE2O,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QADF;AAUD;;AAED,QAAI7e,GAAG,CAAC1M,MAAJ,KAAe,CAAnB,EAAsB;AACpB,0BACE2O;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QADF,eASE5c,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QATF,CADF;AAoBD;;AAED,QAAI7e,GAAG,CAAC1M,MAAJ,KAAe,CAAnB,EAAsB;AACpB,0BACE2O,+FACEA;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QADF,CADF,eAWE5c;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QADF,eASE5c,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE/f,GAAG,CAAC,CAAD,CAFV;AAGE,QAAA,MAAM,EAAEW,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,gBAAgB,EAAEgM;AANpB,QATF,CAXF,CADF;AAgCD;;AAED,wBACE5c;AAAK,MAAA,SAAS,EAAC;AAAf,OAEIjC,GAAG,CAACqgB,KAAJ,CAAU,CAAV,EAAa,CAAb,EACGprB,GADH,CACO,UAACid,CAAD;AAAO,0BACVjQ,wCAAC,aAAD;AACE,QAAA,SAAS,EAAE8d,sBADb;AAEE,QAAA,GAAG,EAAE7N,CAFP;AAGE,QAAA,MAAM,EAAEvR,MAHV;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,GAAG,EAAEqS,GALP;AAME,QAAA,GAAG,EAAEna,0BAAM,EANb;AAOE,QAAA,gBAAgB,EAAEmmB;AAPpB,QADU;AAUX,KAXH,CAFJ,CADF;AAkBD;;;AAED,sBACE5c,wCAAC,aAAD;AACE,IAAA,SAAS,EAAE8d,sBADb;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,MAAM,EAAEpf,MAHV;AAIE,IAAA,KAAK,EAAEH,KAJT;AAKE,IAAA,GAAG,EAAEqS,GALP;AAME,IAAA,gBAAgB,EAAEgM;AANpB,IADF;AAUD,CA5HM;;AAwIP,SAASxD,MAAT,CACElY,EADF,EAUE0Z,GAVF;MAEIzZ;MAAAmC,SAAS,mBAAG;MACZ2L;MAAAlR,GAAG,mBAAG;MACNoR;MAAAyB,GAAG,mBAAG;MACNrB;MAAAhR,KAAK,mBAAG;MACR8Z;MAAA3Z,MAAM,mBAAG;MACTiP,OAAO;MACPwQ,sBAAsB;AAIxB,sBACEne;AACE,IAAA,SAAS,EAAEqe,wEACL7a,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,WAC3C,0BAFS,CAGTI,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,GAAG,EAAEkX,GANP;AAOE,IAAA,KAAK,EAAE;AAAElc,MAAAA,MAAM,QAAR;AAAUH,MAAAA,KAAK;AAAf,KAPT;AAQE,IAAA,OAAO,EAAEoP,OARX;AASE,IAAA,SAAS,EAAEA,OATb;AAUE,IAAA,QAAQ,EAAE;AAVZ,kBAYE3N,wCAAC,WAAD;AACE,IAAA,GAAG,EAAEjC,GADP;AAEE,IAAA,KAAK,EAAEQ,KAFT;AAGE,IAAA,MAAM,EAAEG,MAHV;AAIE,IAAA,GAAG,EAAEkS,GAJP;AAKE,IAAA,sBAAsB,EAAEuN;AAL1B,IAZF,CADF;AAsBD;;AAED,4BAAene,yBAAK,CAAC2a,UAAN,CAAiBvB,MAAjB,CAAf;;AC7MO,IAAMkF,mBAAmB,GAAG,SAAtBA,mBAAsB,OAa7B;AAAA,MAXJ5P,UAWI,QAXJA,UAWI;AAAA,MAVJ6P,QAUI,QAVJA,QAUI;AAAA,MARJC,UAQI,QARJA,UAQI;AAAA,MAPJpuB,IAOI,QAPJA,IAOI;AAAA,MANJD,GAMI,QANJA,GAMI;AAAA,MAJJ6e,MAII,QAJJA,MAII;AAAA,MAHJyP,OAGI,QAHJA,OAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJryB,SACI,QADJA,SACI;;AACJ,oBAAsBO,gBAAU,CAAC0iB,uCAAD,CAAhC;AAAA,MAAQD,SAAR,eAAQA,SAAR;;AAEA,kBAAkCG,cAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO+G,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8ChH,cAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOmP,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,UAAU,GAAGpiB,YAAM,EAAzB;;AAEA,MAAMqiB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD;;AAIA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BxI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACApnB,IAAAA,UAAU,CAAC,YAAM;AACfonB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAMA,sBACExW;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAACoZ,QAAD;AAAQ,IAAA,MAAM,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,GAAG,EAAE1K;AAAxC,IADF,CADF,eAIE1O;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,kEACEA,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAAC7C,GAFxB;AAGE,IAAA,KAAK,EAAE8C,WAAW,CAACjC;AAHrB,KAKGgc,QALH,CADF,CADF,eAUEve,kEACEA,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,0CADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAAC1C,MAFxB;AAGE,IAAA,KAAK,EAAE2C,WAAW,CAAChC;AAHrB,KAKGpW,cAAM,CAACC,SAAD,EAAY,kBAAZ,CALT,CADF,CAVF,CAJF,CADF,eA0BE2T;AAAK,IAAA,SAAS,EAAC;AAAf,KAEIif,2BAAmB,CAAC7uB,IAAD,CAAnB,iBACE4P;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AACE,IAAA,SAAS,EAAC,mDADZ;AAEE,IAAA,GAAG,EAAC,qBAFN;AAGE,IAAA,IAAI,EAAE7P,GAHR;AAIE,IAAA,OAAO,EAAE6uB;AAJX,kBAMEhf,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAAC0H,aADlB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC;AAHR,IANF,CADF,EAcIoW,QAAQ,IAAI1P,MAAZ,iBACEhP;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAAC2H,WADlB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAEmW;AAJX,IADF,CAfN,CAHN,eA+BE1e;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,IAAD;AACE,IAAA,IAAI,EAAEY,SAAS,CAACyH,UADlB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAEoW;AAJX,IADF,CA/BF,CA1BF,CADF,eAoEEze;AAAK,IAAA,SAAS,EAAC;AAAf,KACGkf,eAAO,CAAC9uB,IAAD,CAAP;AAAA;AACC;AACA;AACE,IAAA,OAAO,EAAE0uB,YADX;AAEE,IAAA,MAAM,EAAEC,WAFV;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,EAAC,iCAJZ;AAKE,IAAA,GAAG,EAAEF;AALP,kBAOE7e;AAAQ,IAAA,GAAG,EAAE7P,GAAb;AAAkB,IAAA,IAAI,EAAEC;AAAxB,IAPF,CAHJ,EAcI+uB,eAAO,CAAC/uB,IAAD,CAAP,iBACE4P;AACE,IAAA,OAAO,EAAE8e,YADX;AAEE,IAAA,MAAM,EAAEC,WAFV;AAAA;AAIE,IAAA,QAAQ,EAAC,GAJX;AAKE,IAAA,GAAG,EAAEF,UALP;AAME,IAAA,GAAG,EAAE1uB,GANP;AAOE,IAAA,GAAG,wBAAiBouB,QAAjB,CAPL;AAQE,IAAA,SAAS,EAAC;AARZ,IAfN,EA2BGC,UAAU,iBAEPxe,wCAAC,mBAAD;AACE,IAAA,OAAO,EAAEwe,UADX;AAEE,IAAA,iBAAiB,MAFnB;AAGE,IAAA,QAAQ,EAAEG;AAHZ,IA7BN,EAoCI,CAACM,2BAAmB,CAAC7uB,IAAD,CAApB,iBACE4P;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,KAAD;AAAO,IAAA,IAAI,EAAEuE,eAAe,CAAC/C,GAA7B;AAAkC,IAAA,KAAK,EAAEgD,WAAW,CAACjC;AAArD,2BADF,CArCN,CApEF,EAiHGgU,SAAS,iBACRvW,wCAAC,KAAD;AAAO,IAAA,OAAO,EAAEqP,SAAS,CAAC+P;AAA1B,IAlHJ,CADF;AAuHD,CAzJM;AA2JPd,mBAAmB,CAAC3a,SAApB,GAAgC;AAC9B+K,EAAAA,UAAU,EAAE9K,6BAAS,CAACE,MAAV,CAAiBiK,UADC;AAE9BwQ,EAAAA,QAAQ,EAAE3a,6BAAS,CAACE,MAAV,CAAiBiK,UAFG;AAG9B3d,EAAAA,IAAI,EAAEwT,6BAAS,CAACE,MAAV,CAAiBiK,UAHO;AAI9B5d,EAAAA,GAAG,EAAEyT,6BAAS,CAACE,MAAV,CAAiBiK,UAJQ;AAK9ByQ,EAAAA,UAAU,EAAE5a,6BAAS,CAACE,MAAV,CAAiBiK,UALC;AAM9B0Q,EAAAA,OAAO,EAAE7a,6BAAS,CAACoK,IAAV,CAAeD,UANM;AAO9B2Q,EAAAA,QAAQ,EAAE9a,6BAAS,CAACoK,IAAV,CAAeD,UAPK;AAQ9BiB,EAAAA,MAAM,EAAEpL,6BAAS,CAACkL,IARY;AAS9BziB,EAAAA,SAAS,EAAEuX,6BAAS,CAACK,MAAV,CAAiB8J;AATE,CAAhC;AAYAuQ,mBAAmB,CAACja,YAApB,GAAmC;AACjC2K,EAAAA,MAAM,EAAE;AADyB,CAAnC;AAIe,SAASqQ,UAAT,CAAoBrM,KAApB,EAA2B;AACxC,MACE9iB,OADF,GAKI8iB,KALJ,CACE9iB,OADF;AAAA,MAEE8e,MAFF,GAKIgE,KALJ,CAEEhE,MAFF;AAAA,MAGEyP,OAHF,GAKIzL,KALJ,CAGEyL,OAHF;AAAA,MAIEC,QAJF,GAKI1L,KALJ,CAIE0L,QAJF;AAMA,MACErsB,MADF,GAMInC,OANJ,CACEmC,MADF;AAAA,MAEEjC,IAFF,GAMIF,OANJ,CAEEE,IAFF;AAAA,MAGED,GAHF,GAMID,OANJ,CAGEC,GAHF;AAAA,sBAMID,OANJ,CAIEiP,IAJF;AAAA,MAIQqf,UAJR,8BAIqB,EAJrB;AAAA,MAKEnyB,SALF,GAMI6D,OANJ,CAKE7D,SALF;AAOA,MAAQqiB,UAAR,GAAgDrc,MAAhD,CAAQqc,UAAR;AAAA,yBAAgDrc,MAAhD,CAAoBJ,QAApB;AAAA,MAA8BssB,QAA9B,iCAAyC,EAAzC;AACA,sBAAO1J,qBAAY,eAEf7U,wCAAC,mBAAD;AACE,IAAA,UAAU,EAAE0O,UADd;AAEE,IAAA,QAAQ,EAAE6P,QAFZ;AAGE,IAAA,IAAI,EAAEnuB,IAHR;AAIE,IAAA,GAAG,EAAED,GAJP;AAKE,IAAA,UAAU,EAAEquB,UALd;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,MAAM,EAAE1P,MARV;AASE,IAAA,SAAS,EAAE3iB;AATb,IAFe,EAcjB0C,QAAQ,CAACmmB,cAAT,CAAwBoK,kBAAxB,CAdiB,CAAnB;AAgBD;AAEDD,UAAU,CAAC1b,SAAX,GAAuB;AACrBzT,EAAAA,OAAO,EAAE0T,6BAAS,CAAC4K,KAAV,CAAgB;AACvBnc,IAAAA,MAAM,EAAEuR,6BAAS,CAAC4K,KAAV,CAAgB;AACtBE,MAAAA,UAAU,EAAE9K,6BAAS,CAACE,MADA;AAEtBya,MAAAA,QAAQ,EAAE3a,6BAAS,CAACE;AAFE,KAAhB,CADe;AAKvB1T,IAAAA,IAAI,EAAEwT,6BAAS,CAACE,MALO;AAMvB3T,IAAAA,GAAG,EAAEyT,6BAAS,CAACE,MANQ;AAOvByb,IAAAA,QAAQ,EAAE3b,6BAAS,CAACE,MAPG;AAQvBzX,IAAAA,SAAS,EAAEuX,6BAAS,CAACK;AARE,GAAhB,EASN8J,UAVkB;AAWrBiB,EAAAA,MAAM,EAAEpL,6BAAS,CAACkL,IAXG;AAYrB2P,EAAAA,OAAO,EAAE7a,6BAAS,CAACoK,IAAV,CAAeD,UAZH;AAarB2Q,EAAAA,QAAQ,EAAE9a,6BAAS,CAACoK,IAAV,CAAeD;AAbJ,CAAvB;AAgBAsR,UAAU,CAAChb,YAAX,GAA0B;AACxB2K,EAAAA,MAAM,EAAE;AADgB,CAA1B;;AChOe,SAASwQ,UAAT,OAmBZ;AAAA,MAlBDtvB,OAkBC,QAlBDA,OAkBC;AAAA,MAjBD8B,MAiBC,QAjBDA,MAiBC;AAAA,MAhBD4c,QAgBC,QAhBDA,QAgBC;AAAA,MAfD6Q,YAeC,QAfDA,YAeC;AAAA,MAbDzkB,aAaC,QAbDA,aAaC;AAAA,MAZD0kB,aAYC,QAZDA,aAYC;AAAA,MAXDC,eAWC,QAXDA,eAWC;AAAA,MAVDvJ,aAUC,QAVDA,aAUC;AAAA,MATDjc,WASC,QATDA,WASC;AAAA,MARDme,QAQC,QARDA,QAQC;AAAA,MAPDF,WAOC,QAPDA,WAOC;AAAA,MANDwH,UAMC,QANDA,UAMC;AAAA,MALD3uB,cAKC,QALDA,cAKC;AAAA,MAJD4uB,oBAIC,QAJDA,oBAIC;AAAA,MAHDpgB,cAGC,QAHDA,cAGC;AAAA,MAFDqgB,mBAEC,QAFDA,mBAEC;AAAA,MADDlsB,mBACC,QADDA,mBACC;AACD,wBAAwB1D,OAAxB,CAAQmC,MAAR;AAAA,MAAQA,MAAR,gCAAiB,EAAjB;;AACA,kBAAgCmd,cAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO+I,QAAP;AAAA,MAAiBwH,WAAjB;;AACA,mBAAoCvQ,cAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO2G,UAAP;AAAA,MAAmB6J,aAAnB;;AACA,mBAA4CxQ,cAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAO8G,cAAP;AAAA,MAAuB2J,iBAAvB;;AACA,mBAAoCzQ,cAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO0Q,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,mBAAmB,GAAG3jB,YAAM,CAAC,IAAD,CAAlC;AACA,MAAM4jB,mBAAmB,GAAG5jB,YAAM,CAAC,IAAD,CAAlC;AAEA6jB,EAAAA,qBAAe,CAAC,YAAM;AACpB,QAAIT,oBAAoB,KAAK3vB,OAAO,CAACM,SAArC,EAAgD;AAC9C,UAAI6vB,mBAAmB,IAAIA,mBAAmB,CAACxpB,OAA/C,EAAwD;AACtDwpB,QAAAA,mBAAmB,CAACxpB,OAApB,CAA4B0pB,cAA5B,CAA2C;AACzCC,UAAAA,KAAK,EAAE,QADkC;AAEzCC,UAAAA,MAAM,EAAE;AAFiC,SAA3C;AAIArxB,QAAAA,UAAU,CAAC,YAAM;AACf+wB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAFS,EAEP,GAFO,CAAV;AAGD;AACF,KAVD,MAUO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAdc,EAcZ,CAACN,oBAAD,EAAuBQ,mBAAmB,CAACxpB,OAA3C,EAAoD3G,OAAO,CAACM,SAA5D,CAdY,CAAf;AAeA,MAAMkwB,eAAe,GAAG/gB,aAAO,CAAC,YAAM;AACpC,QAAImgB,mBAAJ,EAAyB;AACvB,aAAOA,mBAAmB,CACxB5vB,OADwB,EAExB0D,mBAFwB,EAGxB0kB,QAHwB,EAIxBF,WAJwB,CAA1B,CADuB;AAQvB;AACD;;AACD,WAAO,IAAP;AACD,GAZ8B,EAY5B,CAACloB,OAAD,EAAUA,OAAO,CAACA,OAAlB,EAA2B4vB,mBAA3B,CAZ4B,CAA/B;AAcA,MAAM9Q,MAAM,GAAGhd,MAAM,KAAKK,MAAM,CAACL,MAAlB,IACV9B,OAAO,CAAC6K,YAAR,KAAyB,SADf,IAEV7K,OAAO,CAAC6K,YAAR,KAAyB,QAF9B;;AAIA,MAAI2lB,eAAJ,EAAqB;AACnB,wBACE1gB;AACE,MAAA,GAAG,EAAEqgB,mBADP;AAEE,MAAA,SAAS,6EAELH,UAAU,GAAG,4BAAH,GAAkC,EAFvC;AAFX,oBAmBElgB,wCAAC,eAAD;AAAiB,MAAA,OAAO,EAAE9P;AAA1B,MAnBF,CADF;AAuBD;;AAED,MAAIqoB,QAAJ,EAAc;AACZ,wBACEvY,wCAAC,YAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,QAAQ,EAAEyf,YAFZ;AAGE,MAAA,GAAG,EAAEW,mBAHP;AAIE,MAAA,IAAI,EAAElwB,OAAO,CAACM,SAJhB;AAKE,MAAA,aAAa,EAAEkvB,aALjB;AAME,MAAA,YAAY,EAAE,wBAAM;AAClBK,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OARH;AASE,MAAA,KAAK,EAAE7vB,OAAO,CAACA;AATjB,MADF;AAaD;;AAED,sBACE8P;AACE,IAAA,GAAG,EAAEqgB,mBADP;AAEE,IAAA,SAAS,yEAELH,UAAU,GAAG,4BAAH,GAAkC,EAFvC,aAFX;AAME,IAAA,KAAK,EAAE;AAAES,MAAAA,YAAY,EAAE;AAAhB;AANT,kBAWE3gB,wCAAC,cAAD;AACE,IAAA,SAAS,EAAC,uCADZ;AAEE,IAAA,MAAM,EAAEhO,MAFV;AAGE,IAAA,eAAe,EAAE2tB,eAHnB;AAIE,IAAA,OAAO,EAAE/rB,mBAJX;AAKE,IAAA,OAAO,EAAE1D,OALX;AAME,IAAA,QAAQ,EAAE0e,QANZ;AAOE,IAAA,QAAQ,EAAE0J,QAPZ;AAQE,IAAA,WAAW,EAAEF,WARf;AASE,IAAA,WAAW,EAAEje,WATf;AAAA;AAWE,IAAA,YAAY,EAAEylB,UAXhB;AAYE,IAAA,cAAc,EAAE3uB,cAZlB;AAaE,IAAA,QAAQ,EAAE8uB,WAbZ;AAcE,IAAA,UAAU,EAAEC,aAdd;AAeE,IAAA,cAAc,EAAEC,iBAflB;AAgBE,IAAA,aAAa,EAAE7J,aAhBjB;AAiBE,IAAA,cAAc,EAAE3W;AAjBlB,IAXF,EA+BG0W,UAAU,iBACTnW,wCAAC4gB,aAAD;AACE,IAAA,YAAY,EAAE;AAAA,aAAMZ,aAAa,CAAC,KAAD,CAAnB;AAAA,KADhB;AAEE,IAAA,eAAe,EAAE,2BAAM;AACrBhlB,MAAAA,aAAa,CAAC9K,OAAD,CAAb;AACD;AAJH,IAhCJ,EAuCGomB,cAAc,iBACbtW,wCAAC,UAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMigB,iBAAiB,CAAC,KAAD,CAAvB;AAAA,KADX;AAEE,IAAA,OAAO,EAAE/vB,OAFX;AAGE,IAAA,QAAQ,EAAE,oBAAM;AACd8K,MAAAA,aAAa,CAAC9K,OAAD,EAAU,YAAM;AAC3B+vB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAFY,CAAb;AAGD,KAPH;AAQE,IAAA,MAAM,EAAEjR;AARV,IAxCJ,CADF;AAsDD;AAEDwQ,UAAU,CAAC7b,SAAX,GAAuB;AACrB3R,EAAAA,MAAM,EAAE4R,6BAAS,CAACE,MADG;AAErB5T,EAAAA,OAAO,EAAE0T,6BAAS,CAAC4K,KAAV,CAAgB;AACvBqS,IAAAA,aAAa,EAAEjd,6BAAS,CAACoK,IADF;AAEvB/a,IAAAA,cAAc,EAAE2Q,6BAAS,CAACoK,IAFH;AAGvB4I,IAAAA,aAAa,EAAEhT,6BAAS,CAACoK,IAHF;AAIvB8S,IAAAA,eAAe,EAAEld,6BAAS,CAACoK,IAJJ;AAKvB;AACAxd,IAAAA,SAAS,EAAEoT,6BAAS,CAACK,MANE;AAOvB7T,IAAAA,IAAI,EAAEwT,6BAAS,CAACE,MAPO;AAQvBzX,IAAAA,SAAS,EAAEuX,6BAAS,CAACK,MARE;AASvB/T,IAAAA,OAAO,EAAE0T,6BAAS,CAACE,MATI;AAUvB/I,IAAAA,YAAY,EAAE6I,6BAAS,CAACE,MAVD;AAWvB9H,IAAAA,WAAW,EAAE4H,6BAAS,CAACE,MAXA;AAYvBzR,IAAAA,MAAM,EAAEuR,6BAAS,CAAC4K,KAAV,CAAgB;AAAExc,MAAAA,MAAM,EAAE4R,6BAAS,CAACE;AAApB,KAAhB,CAZe;AAavB0M,IAAAA,UAAU,EAAE5M,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB;AAbW,GAAhB,CAFY;AAiBrBqR,EAAAA,oBAAoB,EAAEjc,6BAAS,CAACC,SAAV,CAAoB,CACxCD,6BAAS,CAACE,MAD8B,EAExCF,6BAAS,CAACK,MAF8B,CAApB,CAjBD;AAqBrB6b,EAAAA,mBAAmB,EAAElc,6BAAS,CAACoK,IArBV;AAsBrBpa,EAAAA,mBAAmB,EAAEgQ,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,CAtBA;AAuBrB;AACAI,EAAAA,QAAQ,EAAEhL,6BAAS,CAACkL,IAxBC;AAyBrB2Q,EAAAA,YAAY,EAAE7b,6BAAS,CAACkL,IAzBH;AA0BrB9T,EAAAA,aAAa,EAAE4I,6BAAS,CAACoK,IAAV,CAAeD,UA1BT;AA2BrB4R,EAAAA,eAAe,EAAE/b,6BAAS,CAACoK,IA3BN;AA4BrB0R,EAAAA,aAAa,EAAE9b,6BAAS,CAACoK,IAAV,CAAeD,UA5BT;AA6BrBqI,EAAAA,aAAa,EAAExS,6BAAS,CAACoK,IAAV,CAAeD,UA7BT;AA8BrB5T,EAAAA,WAAW,EAAEyJ,6BAAS,CAACkL,IAAV,CAAef,UA9BP;AA+BrBuK,EAAAA,QAAQ,EAAE1U,6BAAS,CAACkL,IAAV,CAAef,UA/BJ;AAgCrBqK,EAAAA,WAAW,EAAExU,6BAAS,CAACkL,IAAV,CAAef,UAhCP;AAiCrB6R,EAAAA,UAAU,EAAEhc,6BAAS,CAACwR,UAAV,CAAqB3oB,GAArB,EAA0BshB,UAjCjB;AAkCrB9c,EAAAA,cAAc,EAAE2S,6BAAS,CAAC4K,KAAV,CAAgB;AAC9Btd,IAAAA,eAAe,EAAE0S,6BAAS,CAACG,OAAV,CACfH,6BAAS,CAAC4K,KAAV,CAAgB;AACdld,MAAAA,MAAM,EAAEsS,6BAAS,CAACG,OAAV,CACNH,6BAAS,CAAC4K,KAAV,CAAgB;AACd7c,QAAAA,GAAG,EAAEiS,6BAAS,CAACE,MADD;AAEd3T,QAAAA,GAAG,EAAEyT,6BAAS,CAACE;AAFD,OAAhB,CADM;AADM,KAAhB,CADe;AADa,GAAhB,CAlCK;AA8CrBrE,EAAAA,cAAc,EAAEmE,6BAAS,CAACoK;AA9CL,CAAvB;AAiDAwR,UAAU,CAACnb,YAAX,GAA0B;AACxBrS,EAAAA,MAAM,EAAE,EADgB;AAExBytB,EAAAA,YAAY,EAAE,KAFU;AAGxBK,EAAAA,mBAAmB,EAAE,IAHG;AAIxBlsB,EAAAA,mBAAmB,EAAE,EAJG;AAKxB1D,EAAAA,OAAO,EAAE,EALe;AAMxB;AACA0e,EAAAA,QAAQ,EAAE,KAPc;AAQxBiR,EAAAA,oBAAoB,EAAE,IARE;AASxBpgB,EAAAA,cAAc,EAAE,0BAAM,EATE;AAUxBkgB,EAAAA,eAAe,EAAE,2BAAM,EAVC;AAWxB1uB,EAAAA,cAAc,EAAE;AAXQ,CAA1B;;ACtNO,IAAM8vB,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxC10B,SADwC,EAExCR,OAFwC;AAIxC,MAAMm1B,aAAa,GAAGC,gCAAwB,CAAC,IAAIlrB,IAAJ,EAAD,EAAa1J,SAAb,CAA9C;;AAEA,MAAI20B,aAAa,KAAK,CAAtB,EAAyB;AACvB,WAAOn1B,OAAO,CAACq1B,KAAf;AACD,GAFD,MAEO,IAAIF,aAAa,KAAK,CAAtB,EAAyB;AAC9B,WAAOn1B,OAAO,CAACs1B,SAAf;AACD,GAFM,MAEA,IAAIH,aAAa,IAAI,CAArB,EAAwB;AAC7B,WAAOr1B,YAAY,CAACy1B,cAAM,CAAC/0B,SAAD,CAAP,EAAoBR,OAAO,CAACw1B,IAA5B,CAAnB;AACD,GAFM,MAEA;AACL,WAAOj1B,cAAM,CAACC,SAAD,EAAY,YAAZ,CAAb;AACD;AACF,CAfM;;SCIiBi1B,cAAcpgB;MACpCoC,SAAS;MACTjX,SAAS;AAED,MAAAgjB,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AAER,sBACEtP;AAAK,IAAA,SAAS,EAAE8P,oBAAY,CAAC,CAACxM,SAAD,EAAY,qBAAZ,CAAD;AAA5B,kBACEtD,wCAAC,KAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAEuE,eAAe,CAACrC;AAFxB,KAIG6e,0BAA0B,CAAC10B,SAAD,EAAY;AACrC60B,IAAAA,KAAK,EAAE7R,SAAS,CAACkS,iBADoB;AAErCJ,IAAAA,SAAS,EAAE9R,SAAS,CAACmS,qBAFgB;AAGrCH,IAAAA,IAAI,EAAE;AACJ,SAAGhS,SAAS,CAACoS,iBADT;AAEJ,SAAGpS,SAAS,CAACqS,iBAFT;AAGJ,SAAGrS,SAAS,CAACsS,kBAHT;AAIJ,SAAGtS,SAAS,CAACuS,oBAJT;AAKJ,SAAGvS,SAAS,CAACwS,mBALT;AAMJ,SAAGxS,SAAS,CAACyS,iBANT;AAOJ,SAAGzS,SAAS,CAAC0S;AAPT;AAH+B,GAAZ,CAJ7B,CADF,CADF;AAsBD;;IC7BoBC;;;;;;;;;;;;;;;;uGACR,UAAC1pB,CAAD,EAAO;AAChB,wBAOI,MAAK0a,KAPT;AAAA,UACE1c,SADF,eACEA,SADF;AAAA,UAEEzC,OAFF,eAEEA,OAFF;AAAA,UAGEsC,kBAHF,eAGEA,kBAHF;AAAA,UAIE8rB,QAJF,eAIEA,QAJF;AAAA,UAKEC,YALF,eAKEA,YALF;AAAA,UAMEtuB,mBANF,eAMEA,mBANF;AASA,UAAMsQ,OAAO,GAAG5L,CAAC,CAACib,MAAlB;AACA,UAAQtkB,SAAR,GAAkDiV,OAAlD,CAAQjV,SAAR;AAAA,UAAmB2gB,YAAnB,GAAkD1L,OAAlD,CAAmB0L,YAAnB;AAAA,UAAiC1gB,YAAjC,GAAkDgV,OAAlD,CAAiChV,YAAjC;;AACA,UAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,YAAI,CAAC4E,OAAL,EAAc;AACZ;AACD;;AACD,YAAMsuB,KAAK,GAAG7rB,SAAS,CAACO,OAAV,CAAkBurB,gBAAlB,CACZ,2BADY,CAAd;AAGA,YAAMC,KAAK,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAD,CAA5B;AACAF,QAAAA,QAAQ,CAAC,gBAAgB;AAAA;AAAA,cAAdl2B,QAAc;;AACvB,cAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI;AACFs2B,cAAAA,KAAK,CAAC9B,cAAN;AACD,aAFD,CAEE,OAAOpxB,KAAP,EAAc;AAEf;AACF;AACF,SATO,CAAR;AAUD;;AAED,UAAIygB,YAAY,GAAG3gB,SAAf,KAA6BC,YAAjC,EAA+C;AAC7C,YAAMizB,MAAK,GAAG7rB,SAAS,CAACO,OAAV,CAAkBurB,gBAAlB,CACZ,2BADY,CAAd;;AAGA,YAAME,IAAI,GAAGH,MAAK,IAAIA,MAAK,CAACA,MAAK,CAAC9wB,MAAN,GAAe,CAAhB,CAA3B;AACA6wB,QAAAA,YAAY,CAAC,iBAAgB;AAAA;AAAA,cAAdn2B,QAAc;;AAC3B,cAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI;AACFu2B,cAAAA,IAAI,CAAC/B,cAAL;AACD,aAFD,CAEE,OAAOpxB,KAAP,EAAc;AAEf;AACF;AACF,SATW,CAAZ;AAUD,OA/Ce;;;AAkDhBC,MAAAA,UAAU,CAAC,YAAM;AACf;AACA,YAAIwgB,YAAY,GAAG3gB,SAAf,KAA6BC,YAAjC,EAA+C;AAC7CiH,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI;AADW,WAAD,CAAlB;AAGAxE,UAAAA,mBAAmB,CAACoD,UAApB;AACD;AACF,OARS,EAQP,GARO,CAAV;AASD;;;;;;;WAED,kBAAS;AACP,yBAuBI,KAAKgc,KAvBT;AAAA,UACEhhB,MADF,gBACEA,MADF;AAAA,UAEE4c,QAFF,gBAEEA,QAFF;AAAA,UAGEtY,SAHF,gBAGEA,SAHF;AAAA,UAIEspB,UAJF,gBAIEA,UAJF;AAAA,UAKE/sB,WALF,gBAKEA,WALF;AAAA,UAME8sB,eANF,gBAMEA,eANF;AAAA,UAOExlB,WAPF,gBAOEA,WAPF;AAAA,UAQEooB,WARF,gBAQEA,WARF;AAAA,UASE9C,YATF,gBASEA,YATF;AAAA,UAUEzkB,aAVF,gBAUEA,aAVF;AAAA,UAWE0kB,aAXF,gBAWEA,aAXF;AAAA,UAYEtJ,aAZF,gBAYEA,aAZF;AAAA,UAaE0J,mBAbF,gBAaEA,mBAbF;AAAA,UAcE0C,cAdF,gBAcEA,cAdF;AAAA,UAeE3C,oBAfF,gBAeEA,oBAfF;AAAA,UAgBE5uB,cAhBF,gBAgBEA,cAhBF;AAAA,UAiBEwO,cAjBF,gBAiBEA,cAjBF;AAAA,UAkBEgjB,kBAlBF,gBAkBEA,kBAlBF;AAAA,UAmBE7uB,mBAnBF,gBAmBEA,mBAnBF;AAAA,UAoBE8uB,sBApBF,gBAoBEA,sBApBF;AAAA,UAqBEC,aArBF,gBAqBEA,aArBF;AAAA,UAsBEC,gBAtBF,gBAsBEA,gBAtBF;;AAyBA,UAAI/vB,WAAW,CAACxB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,4BACE2O,wCAACod,mBAAD;AACE,UAAA,SAAS,EAAC,oCADZ;AAEE,UAAA,IAAI,EAAEyF,wBAAgB,CAACC;AAFzB,UADF;AAMD;;AAED,0BACE9iB;AAAK,QAAA,SAAS,EAAC;AAAf,sBACEA;AACE,QAAA,GAAG,EAAE1J,SADP;AAEE,QAAA,SAAS,EAAC,yCAFZ;AAGE,QAAA,QAAQ,EAAE,KAAK2rB;AAHjB,sBAKEjiB;AAAK,QAAA,SAAS,EAAC;AAAf,QALF,eAaEA;AAAK,QAAA,SAAS,EAAC;AAAf,SACGwD,KAAK,CAACuf,IAAN,CAAWj3B,mBAAmB,CAAC+G,WAAD,CAAnB,CAAiCmwB,MAAjC,EAAX,EAAsDhwB,GAAtD,CACC,UAACjH,QAAD,EAAc;AAAA;;AACZ,YAAMk3B,gBAAgB,iBAAGl3B,QAAQ,CAAC,CAAD,CAAX,+CAAG,WAAaM,SAAtC;AAEA,4BACE2T,+FACEA,wCAAC,aAAD;AAAe,UAAA,SAAS,EAAEijB;AAA1B,UADF,EAEGl3B,QAAQ,CAACiH,GAAT,CAAa,UAAC2B,CAAD,EAAIuuB,GAAJ,EAAY;AACxB,cAAMC,eAAe,GAAGp3B,QAAQ,CAACm3B,GAAG,GAAG,CAAP,CAAhC;AACA,cAAMzwB,WAAW,GAAG1G,QAAQ,CAACm3B,GAAG,GAAG,CAAP,CAA5B;;AACA,sBAAgCT,kBAAkB,GAC9ClwB,0BAA0B,CAC1B4wB,eAD0B,EAE1BxuB,CAF0B,EAG1BlC,WAH0B,CADoB,GAM9C,CAAC,KAAD,EAAQ,KAAR,CANJ;AAAA;AAAA,cAAO6lB,QAAP;AAAA,cAAiBF,WAAjB;;AAQA,cAAIoK,cAAJ,EAAoB;AAClB,gCACExiB;AACE,cAAA,GAAG,EAAErL,CAAC,CAACnE,SAAF,IAAemE,CAAC,CAACW,KADxB;AAEE,cAAA,SAAS,EAAC;AAFZ,eAIGktB,cAAc,CAAC;AACdtyB,cAAAA,OAAO,EAAEyE,CADK;AAEdkrB,cAAAA,oBAAoB,EAApBA,oBAFc;AAGd5vB,cAAAA,OAAO,EAAE2D,mBAHK;AAId;AACA6oB,cAAAA,eAAe,EAAEzhB,aALH;AAMdooB,cAAAA,eAAe,EAAE1D,aANH;AAOd2D,cAAAA,eAAe,EAAEjN,aAPH;AAQdkN,cAAAA,iBAAiB,EAAE3D,eARL;AASd1uB,cAAAA,cAAc,EAAdA,cATc;AAUdqnB,cAAAA,QAAQ,EAARA,QAVc;AAWdF,cAAAA,WAAW,EAAXA,WAXc;AAYdmL,cAAAA,YAAY,EAAE3U;AAZA,aAAD,CAJjB,CADF;AAqBD;;AAED,8BACE5O,wCAACwjB,UAAD;AACE,YAAA,oBAAoB,EAAE3D,oBADxB;AAEE,YAAA,mBAAmB,EAAEC,mBAFvB;AAGE,YAAA,GAAG,EAAEnrB,CAAC,CAACnE,SAAF,IAAemE,CAAC,CAACW,KAHxB;AAIE,YAAA,MAAM,EAAEtD,MAJV;AAAA;AAME,YAAA,OAAO,EAAE2C,CANX;AAOE,YAAA,eAAe,EAAEgrB,eAPnB;AAQE,YAAA,mBAAmB,EAAE/rB,mBARvB;AASE,YAAA,QAAQ,EAAEgb,QATZ;AAUE,YAAA,UAAU,EAAEgR,UAVd;AAWE,YAAA,QAAQ,EAAEtH,QAXZ;AAYE,YAAA,WAAW,EAAEne,WAZf;AAaE,YAAA,WAAW,EAAEooB,WAbf;AAcE,YAAA,cAAc,EAAEtxB,cAdlB;AAeE,YAAA,YAAY,EAAEwuB,YAfhB;AAAA;AAiBE,YAAA,WAAW,EAAErH,WAjBf;AAkBE,YAAA,aAAa,EAAEsH,aAlBjB;AAmBE,YAAA,aAAa,EAAE1kB,aAnBjB;AAoBE,YAAA,aAAa,EAAEob,aApBjB;AAqBE,YAAA,cAAc,EAAE3W,cArBlB;AAsBE,YAAA,sBAAsB,EAAEijB;AAtB1B,YADF;AA0BD,SA7DA,CAFH,CADF;AAmED,OAvEF,CADH,CAbF,CADF,EA0JGC,aAAa,iBACZ3iB;AACE,QAAA,SAAS,EAAC,6CADZ;AAEE,QAAA,OAAO,EAAE4iB,gBAFX;AAGE,QAAA,SAAS,EAAEA,gBAHb;AAIE,QAAA,QAAQ,EAAE,CAJZ;AAKE,QAAA,IAAI,EAAC;AALP,sBAOE5iB,wCAACW,YAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,IAAI,EAAEC,iBAAS,CAACsE,YAHlB;AAIE,QAAA,SAAS,EAAE+I,kBAAU,CAACnL;AAJxB,QAPF,CA3JJ,CADF;AA6KD;;;;EA9Q6CqS;AAiRhD6M,kBAAkB,CAACre,SAAnB,GAA+B;AAC7B;AACArN,EAAAA,SAAS,EAAEsN,6BAAS,CAAC4K,KAAV,CAAgB;AACzB3X,IAAAA,OAAO,EAAE+M,6BAAS,CAACC,SAAV,CAAoB,CAACD,6BAAS,CAACM,OAAX,EAAoBN,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,CAApB,CAApB;AADgB,GAAhB,EAERT,UAJ0B;AAK7Bla,EAAAA,OAAO,EAAE+P,6BAAS,CAACkL,IALU;AAM7B3Y,EAAAA,kBAAkB,EAAEyN,6BAAS,CAACoK,IAAV,CAAeD,UANN;AAO7BkU,EAAAA,QAAQ,EAAEre,6BAAS,CAACoK,IAPS;AAQ7BkU,EAAAA,YAAY,EAAEte,6BAAS,CAACoK,IARK;AAS7ByR,EAAAA,YAAY,EAAE7b,6BAAS,CAACkL,IATK;AAU7BF,EAAAA,QAAQ,EAAEhL,6BAAS,CAACkL,IAVS;AAW7B9c,EAAAA,MAAM,EAAE4R,6BAAS,CAACE,MAXW;AAY7BjR,EAAAA,WAAW,EAAE+Q,6BAAS,CAACG,OAAV,CACXH,6BAAS,CAAC4K,KAAV,CAAgB;AACdniB,IAAAA,SAAS,EAAEuX,6BAAS,CAACK;AADP,GAAhB,CADW,EAIX8J,UAhB2B;AAiB7B/S,EAAAA,aAAa,EAAE4I,6BAAS,CAACoK,IAAV,CAAeD,UAjBD;AAkB7BqI,EAAAA,aAAa,EAAExS,6BAAS,CAACoK,IAAV,CAAeD,UAlBD;AAmB7B2R,EAAAA,aAAa,EAAE9b,6BAAS,CAACoK,IAAV,CAAeD,UAnBD;AAoB7B0V,EAAAA,UAAU,EAAE7f,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,EAAoBT,UApBH;AAqB7Bna,EAAAA,mBAAmB,EAAEgQ,6BAAS,CAAC4K,KAAV,CAAgB;AACnCxX,IAAAA,UAAU,EAAE4M,6BAAS,CAACoK,IADa;AAEnCnc,IAAAA,OAAO,EAAE+R,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,CAAlB;AAF0B,GAAhB,EAGlBT,UAxB0B;AAyB7B8R,EAAAA,oBAAoB,EAAEjc,6BAAS,CAACC,SAAV,CAAoB,CACxCD,6BAAS,CAACE,MAD8B,EAExCF,6BAAS,CAACK,MAF8B,CAApB,CAzBO;AA6B7Bue,EAAAA,cAAc,EAAE5e,6BAAS,CAACM,OA7BG;AA8B7B4b,EAAAA,mBAAmB,EAAElc,6BAAS,CAACoK,IA9BF;AA+B7B2R,EAAAA,eAAe,EAAE/b,6BAAS,CAACoK,IA/BE;AAgC7B7T,EAAAA,WAAW,EAAEyJ,6BAAS,CAACkL,IAhCM;AAiC7B6T,EAAAA,aAAa,EAAE/e,6BAAS,CAACkL,IAjCI;AAkC7B8T,EAAAA,gBAAgB,EAAEhf,6BAAS,CAACoK,IAlCC;AAmC7B/c,EAAAA,cAAc,EAAE2S,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB,CAnCa;AAoC7B+T,EAAAA,WAAW,EAAE3e,6BAAS,CAACwR,UAAV,CAAqB3oB,GAArB,CApCgB;AAqC7BmzB,EAAAA,UAAU,EAAEhc,6BAAS,CAACwR,UAAV,CAAqB3oB,GAArB,CArCiB;AAsC7Bg2B,EAAAA,kBAAkB,EAAE7e,6BAAS,CAACkL,IAtCD;AAuC7BrP,EAAAA,cAAc,EAAEmE,6BAAS,CAACoK,IAvCG;AAwC7B0U,EAAAA,sBAAsB,EAAE9e,6BAAS,CAACoK;AAxCL,CAA/B;AA2CAgU,kBAAkB,CAAC3d,YAAnB,GAAkC;AAChCxQ,EAAAA,OAAO,EAAE,KADuB;AAEhC4rB,EAAAA,YAAY,EAAE,KAFkB;AAGhC7Q,EAAAA,QAAQ,EAAE,KAHsB;AAIhC5c,EAAAA,MAAM,EAAE,EAJwB;AAKhC8tB,EAAAA,mBAAmB,EAAE,IALW;AAMhC0C,EAAAA,cAAc,EAAE,IANgB;AAOhC3C,EAAAA,oBAAoB,EAAE,IAPU;AAQhCoC,EAAAA,QAAQ,EAAE,IARsB;AAShCC,EAAAA,YAAY,EAAE,IATkB;AAUhC/nB,EAAAA,WAAW,EAAE,IAVmB;AAWhClJ,EAAAA,cAAc,EAAE,EAXgB;AAYhC0xB,EAAAA,aAAa,EAAE,KAZiB;AAahCC,EAAAA,gBAAgB,EAAE,4BAAM,EAbQ;AAchCjD,EAAAA,eAAe,EAAE,2BAAM,EAdS;AAehC4C,EAAAA,WAAW,EAAE,IAAI91B,GAAJ,EAfmB;AAgBhCmzB,EAAAA,UAAU,EAAE,IAAInzB,GAAJ,EAhBoB;AAiBhCg2B,EAAAA,kBAAkB,EAAE,IAjBY;AAkBhChjB,EAAAA,cAAc,EAAE,0BAAM,EAlBU;AAmBhCijB,EAAAA,sBAAsB,EAAE;AAAA,WAAM,EAAN;AAAA;AAnBQ,CAAlC;;ACjUe,SAASgB,YAAT,OAIZ;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDjW,OACC,QADDA,OACC;;AACD,oBAAsB/gB,gBAAU,CAAC0iB,uCAAD,CAAhC;AAAA,MAAQD,SAAR,eAAQA,SAAR,CADC;;;AAGD,MAAMwU,SAAS,GAAGD,IAAI,CAAC7T,KAAL,CAAW,GAAX,CAAlB,CAHC;AAKD;;AACA8T,EAAAA,SAAS,CAAC1wB,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBkc,SAAS,CAACyU,uCAAjC,EANC;;AAQD;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAEnW;AAA5C,oBACE3N,wCAACoD,aAAD;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAA2C,MAAA,KAAK,EAAEoB,mBAAW,CAAC5B,WAA9D;AAA2E,MAAA,IAAI,EAAE2B,uBAAe,CAACpC;AAAjG,iBACMwhB,KADN,QAEGtU,SAAS,CAAC0U,gDAFb,aAGOF,SAAS,CAACngB,IAAV,CAAe,GAAf,CAHP,EADF,eAME1D,wCAACW,YAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,IAAI,EAAEC,iBAAS,CAACsE,YAHlB;AAIE,MAAA,SAAS,EAAE+I,kBAAU,CAACrF;AAJxB,MANF;AAFF;AAgBD;AAED8a,YAAY,CAAC/f,SAAb,GAAyB;AACvBggB,EAAAA,KAAK,EAAE/f,6BAAS,CAACC,SAAV,CAAoB,CACzBD,6BAAS,CAACE,MADe,EAEzBF,6BAAS,CAACK,MAFe,CAApB,CADgB;AAKvB2f,EAAAA,IAAI,EAAEhgB,6BAAS,CAACE,MALO;AAMvB6J,EAAAA,OAAO,EAAE/J,6BAAS,CAACoK,IAAV,CAAeD;AAND,CAAzB;AASA2V,YAAY,CAACrf,YAAb,GAA4B;AAC1Bsf,EAAAA,KAAK,EAAE,CADmB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAA5B;;ACxCA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB;AACjB,MAAA3U,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AACR,sBACEtP;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAACoD,aAAD;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAEmB,uBAAe,CAACpC;AAFxB,KAIGkN,SAAS,CAAC4U,cAJb,CADF,CADF;AAUD,CAZD;;ACAA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAiB;AAAA,MAAdryB,OAAc,QAAdA,OAAc;;AAC3C,oBAAsBjF,gBAAU,CAAC0iB,uCAAD,CAAhC;AAAA,MAAQD,SAAR,eAAQA,SAAR;;AACA,MAAI,CAACxd,OAAD,IAAYA,OAAO,CAACR,MAAR,KAAmB,CAAnC,EAAsC;AACpC,WAAO,EAAP;AACD;;AAED,MAAIQ,OAAO,IAAIA,OAAO,CAACR,MAAR,KAAmB,CAAlC,EAAqC;AACnC,qBAAUQ,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB,cAAiCod,SAAS,CAAC8U,2BAA3C;AACD;;AAED,MAAItyB,OAAO,IAAIA,OAAO,CAACR,MAAR,KAAmB,CAAlC,EAAqC;AACnC,qBAAUQ,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB,cAAiCod,SAAS,CAAC+U,qBAA3C,cAAoEvyB,OAAO,CAAC,CAAD,CAAP,CAAWI,QAA/E,cAA2Fod,SAAS,CAACgV,4BAArG;AACD;;AAED,SAAOhV,SAAS,CAACiV,iCAAjB;AACD,CAfD;;AAiBA,SAASC,eAAT,QAAqD;AAAA,MAA1B50B,UAA0B,SAA1BA,UAA0B;AAAA,MAAd60B,EAAc,SAAdA,EAAc;AAAA,MAAVnuB,MAAU,SAAVA,MAAU;;AACnD,kBAAkCmZ,cAAQ,CAAC/Y,0BAAM,EAAP,CAA1C;AAAA;AAAA,MAAOguB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0ClV,cAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOmV,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAruB,EAAAA,eAAS,CAAC,YAAM;AACd,QAAIiuB,EAAE,IAAIA,EAAE,CAAC9tB,cAAb,EAA6B;AAC3B8tB,MAAAA,EAAE,CAACzsB,oBAAH,CAAwB0sB,SAAxB;AACA,UAAMI,YAAY,GAAGpuB,0BAAM,EAA3B;AACA,UAAMquB,OAAO,GAAG,IAAIN,EAAE,CAAC9tB,cAAP,EAAhB,CAH2B;;AAK3BouB,MAAAA,OAAO,CAACC,qBAAR,GAAgC,UAACr0B,YAAD,EAAkB;AAChD2F,QAAAA,MAAM,CAACM,IAAP,CACE,mDADF,EAEEjG,YAFF;AAIA,YAAMmB,OAAO,GAAGnB,YAAY,CAACs0B,gBAAb,EAAhB;;AACA,YAAIt0B,YAAY,CAACP,GAAb,KAAqBR,UAAzB,EAAqC;AACnCi1B,UAAAA,gBAAgB,CAAC/yB,OAAD,CAAhB;AACD;AACF,OATD;;AAUA2yB,MAAAA,EAAE,CAAC1sB,iBAAH,CAAqB+sB,YAArB,EAAmCC,OAAnC;AACAJ,MAAAA,YAAY,CAACG,YAAD,CAAZ;AACD;;AAED,WAAO,YAAM;AACXD,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;;AACA,UAAIJ,EAAE,IAAIA,EAAE,CAACzsB,oBAAb,EAAmC;AACjCysB,QAAAA,EAAE,CAACzsB,oBAAH,CAAwB0sB,SAAxB;AACD;AACF,KALD;AAMD,GA1BQ,EA0BN,CAAC90B,UAAD,CA1BM,CAAT;AA4BA,sBACEqQ,wCAAC,KAAD;AAAO,IAAA,IAAI,EAAEuE,eAAe,CAAClC,gBAA7B;AAA+C,IAAA,KAAK,EAAEmC,WAAW,CAAChC;AAAlE,kBACExC,wCAAC,mBAAD;AAAqB,IAAA,OAAO,EAAE2kB;AAA9B,IADF,CADF;AAKD;;AAEDJ,eAAe,CAAC5gB,SAAhB,GAA4B;AAC1BhU,EAAAA,UAAU,EAAEiU,6BAAS,CAACE,MAAV,CAAiBiK,UADH;AAE1ByW,EAAAA,EAAE,EAAE5gB,6BAAS,CAAC4K,KAAV,CAAgB;AAClB9X,IAAAA,cAAc,EAAEkN,6BAAS,CAACoK,IADR;AAElBjW,IAAAA,oBAAoB,EAAE6L,6BAAS,CAACoK,IAFd;AAGlBlW,IAAAA,iBAAiB,EAAE8L,6BAAS,CAACoK;AAHX,GAAhB,EAIDD,UANuB;AAO1B1X,EAAAA,MAAM,EAAEuN,6BAAS,CAAC4K,KAAV,CAAgB;AACtB7X,IAAAA,IAAI,EAAEiN,6BAAS,CAACoK;AADM,GAAhB,EAELD;AATuB,CAA5B;;AC/DA;;AAuBA,IAAMkX,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC1B/jB,EAD0B,EAU1B0Z,GAV0B;MAExB3qB,OAAO;MACPi1B,IAAI;MACJjK,aAAa;MACbD,YAAY;MACZmK,kBAAkB;MAClBnrB,QAAQ;MACRtG,WAAW;AAIL,MAAA2b,SAAS,GAAKziB,gBAAU,CAAC0iB,uCAAD,CAAV,UAAd;AACR,MAAMV,QAAQ,GACZ,CAAClb,WAAD,IACAoG,uBAAA,CAA8B7J,OAA9B,CADA,IAEA6J,sBAAA,CAA6B7J,OAA7B,CAFA,IAGA,CAAC+J,QAJH;AAMA,MAAMvJ,YAAU,GAAGqJ,UAAA,CAAiB7J,OAAjB,CAAnB;AACQ,MAAAm1B,WAAW,GAAKn1B,OAAO,YAAvB;;AAGR,MAAIk1B,kBAAJ,EAAwB;AACtB,WAAOA,kBAAkB,CAAC;AAAEl1B,MAAAA,OAAO,SAAT;AAAWi1B,MAAAA,IAAI,MAAf;AAAiBtW,MAAAA,QAAQ;AAAzB,KAAD,CAAzB;AACD;;;AAGD,MAAIwW,WAAW,IAAI,CAAC30B,YAApB,EAAgC;AAC9B,WAAO,IAAP;AACD;;;AAGD,sBACEuP,wCAAC,YAAD;AACE,IAAA,WAAW,EACRlG,uBAAA,CAA8B7J,OAA9B,KACCof,SAAS,CAACgW,8CADZ,IAECvrB,sBAAA,CAA6B7J,OAA7B,KACCof,SAAS,CAACiW,2CALhB;AAOE,IAAA,GAAG,EAAE1K,GAPP;AAQE,IAAA,QAAQ,EAAEhM,QARZ;AASE,IAAA,aAAa,EAAE;AACb3e,MAAAA,OAAO,CAACs1B,WAAR;AACD,KAXH;AAYE,IAAA,aAAa,EAAEtK,aAZjB;AAaE,IAAA,YAAY,EAAED;AAbhB,IADF;AAiBD,CAlDD;;AAoDA,yCAAehb,yBAAK,CAAC2a,UAAN,CAAiBsK,mBAAjB,CAAf;;ACjCA,IAAM7K,IAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEO,IAAMoL,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxS,KAAD,EAAW;AAC1C,MACErjB,UADF,GA+BIqjB,KA/BJ,CACErjB,UADF;AAAA,sBA+BIqjB,KA/BJ,CAEEyS,MAFF;AAAA,MAEYC,QAFZ,iBAEYA,QAFZ;AAAA,MAEsBC,SAFtB,iBAEsBA,SAFtB;AAAA,sBA+BI3S,KA/BJ,CAGE4S,MAHF;AAAA,MAII5zB,MAJJ,iBAIIA,MAJJ;AAAA,MAKIqE,MALJ,iBAKIA,MALJ;AAAA,MAMIzG,MANJ,iBAMIA,MANJ;AAAA,MAOIoK,QAPJ,iBAOIA,QAPJ;AAAA,MAQI6rB,KARJ,iBAQIA,KARJ;AAAA,MASI3oB,gBATJ,iBASIA,gBATJ;AAAA,MAYI4oB,SAZJ,GA+BI9S,KA/BJ,CAWE+S,WAXF,CAYID,SAZJ;AAAA,uBA+BI9S,KA/BJ,CAcEgT,OAdF;AAAA,MAcEA,OAdF,+BAcY,EAdZ;AAAA,MAeEC,aAfF,GA+BIjT,KA/BJ,CAeEiT,aAfF;AAAA,MAgBEC,kBAhBF,GA+BIlT,KA/BJ,CAgBEkT,kBAhBF;AAAA,MAiBE/rB,WAjBF,GA+BI6Y,KA/BJ,CAiBE7Y,WAjBF;AAAA,MAkBEgsB,cAlBF,GA+BInT,KA/BJ,CAkBEmT,cAlBF;AAAA,MAmBEC,aAnBF,GA+BIpT,KA/BJ,CAmBEoT,aAnBF;AAAA,MAoBE5D,cApBF,GA+BIxP,KA/BJ,CAoBEwP,cApBF;AAAA,MAqBE6D,gBArBF,GA+BIrT,KA/BJ,CAqBEqT,gBArBF;AAAA,MAsBEvG,mBAtBF,GA+BI9M,KA/BJ,CAsBE8M,mBAtBF;AAAA,MAuBEwG,iBAvBF,GA+BItT,KA/BJ,CAuBEsT,iBAvBF;AAAA,MAwBEC,kBAxBF,GA+BIvT,KA/BJ,CAwBEuT,kBAxBF;AAAA,MAyBEpB,kBAzBF,GA+BInS,KA/BJ,CAyBEmS,kBAzBF;AAAA,MA0BE1C,kBA1BF,GA+BIzP,KA/BJ,CA0BEyP,kBA1BF;AAAA,MA2BE+D,uBA3BF,GA+BIxT,KA/BJ,CA2BEwT,uBA3BF;AAAA,MA4BEjqB,uBA5BF,GA+BIyW,KA/BJ,CA4BEzW,uBA5BF;AAAA,MA6BEU,uBA7BF,GA+BI+V,KA/BJ,CA6BE/V,uBA7BF;AAAA,MA8BE/B,yBA9BF,GA+BI8X,KA/BJ,CA8BE9X,yBA9BF;AAiCA,MAAQ9E,GAAR,GAAgBsvB,QAAhB,CAAQtvB,GAAR;AACA,MAAQwvB,MAAR,GAAmB5S,KAAnB,CAAQ4S,MAAR;AACA,MAAMa,QAAQ,GAAGf,QAAQ,CAACv2B,KAA1B;AACA,MAAM+G,OAAO,GAAGwvB,QAAQ,CAAChyB,WAAzB;AACA,MAAQwxB,IAAR,GAAiBS,SAAjB,CAAQT,IAAR;;AACA,MAAIc,OAAO,CAACU,gBAAZ,EAA8B;AAC5B;AACArqB,IAAAA,OAAO,CAACsqB,IAAR,CAAa,4EAAb;AACD;;AAED,kBAA8CnX,cAAQ,CAACyW,aAAD,CAAtD;AAAA;AAAA,MAAOjtB,eAAP;AAAA,MAAwBoI,kBAAxB;;AACA7K,EAAAA,eAAS,CAAC,YAAM;AACd6K,IAAAA,kBAAkB,CAAC6kB,aAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,aAAD,EAAgBt2B,UAAhB,CAFM,CAAT;;AAGA,mBAAwD6f,cAAQ,CAAC0W,kBAAD,CAAhE;AAAA;AAAA,MAAOrG,oBAAP;AAAA,MAA6Bxe,uBAA7B;;AACA9K,EAAAA,eAAS,CAAC,YAAM;AACd8K,IAAAA,uBAAuB,CAAC6kB,kBAAD,CAAvB;AACD,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAGA,MAAMntB,0BAA0B,GAAGitB,OAAO,CAAC5xB,iBAA3C;;AAEA,oBAA4CwyB,gBAAU,CAACC,OAAD,EAAkBC,oBAAlB,CAAtD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsB5wB,kBAAtB;;AACA,MAAMG,SAAS,GAAGmG,YAAM,CAAC,IAAD,CAAxB;AAEA,MACE5J,WADF,GAcIk0B,aAdJ,CACEl0B,WADF;AAAA,MAEEc,OAFF,GAcIozB,aAdJ,CAEEpzB,OAFF;AAAA,MAGED,WAHF,GAcIqzB,aAdJ,CAGErzB,WAHF;AAAA,MAIEO,WAJF,GAcI8yB,aAdJ,CAIE9yB,WAJF;AAAA,MAKEC,WALF,GAcI6yB,aAdJ,CAKE7yB,WALF;AAAA,MAMEC,SANF,GAcI4yB,aAdJ,CAME5yB,SANF;AAAA,8BAcI4yB,aAdJ,CAOEnzB,mBAPF;AAAA,MAOEA,mBAPF,sCAOwB,EAPxB;AAAA,MAQEC,OARF,GAcIkzB,aAdJ,CAQElzB,OARF;AAAA,MASEC,oBATF,GAcIizB,aAdJ,CASEjzB,oBATF;AAAA,MAUEC,eAVF,GAcIgzB,aAdJ,CAUEhzB,eAVF;AAAA,MAWEC,6BAXF,GAcI+yB,aAdJ,CAWE/yB,6BAXF;AAAA,MAYE/C,cAZF,GAcI81B,aAdJ,CAYE91B,cAZF;AAAA,MAaEwyB,UAbF,GAcIsD,aAdJ,CAaEtD,UAbF;AAeA,MAAQ5yB,QAAR,GAA2C+C,mBAA3C,CAAQ/C,QAAR;AAAA,MAAkBu0B,WAAlB,GAA2CxxB,mBAA3C,CAAkBwxB,WAAlB;AAAA,MAA+B4B,OAA/B,GAA2CpzB,mBAA3C,CAA+BozB,OAA/B;AACA,qBAAyB5wB,GAAzB,CAAQ8D,OAAR;AAAA,MAAQA,OAAR,6BAAkB,EAAlB;AACA,MAAM+sB,aAAa,GACjB/sB,OAAO,CAACE,eAAR,IAA2B,CAACgrB,WAA5B,IAA2C,CAAC4B,OAA5C,IAAuD7sB,WADzD;AAIA,MAAM+sB,6BAA6B,GAAGX,kBAAkB,IAAIX,MAAM,CAACW,kBAAnE;AACA,MAAMY,wBAAwB,GAAGb,iBAAiB,IAAIV,MAAM,CAACU,iBAA7D;AACA,MAAM3D,aAAa,GAAG5uB,eAAtB,CAhF0C;;AAmF1C,MAAMwuB,WAAW,GAAG5iB,aAAO,CAAC;AAAA,WAC1BsnB,aAAa,GACTntB,iCAAA,CAAwC7I,cAAxC,CADS,GAET,IAAIxE,GAAJ,EAHsB;AAAA,GAAD,EAIxB,CAACwE,cAAD,CAJwB,CAA3B;AAKA,MAAMyO,YAAY,GAAGC,aAAO,CAAC;AAAA,WAC3BsnB,aAAa,GACTntB,8BAAA,CAAqC7I,cAArC,CADS,GAET,EAHuB;AAAA,GAAD,EAIzB,CAACA,cAAD,CAJyB,CAA5B;AAKA,MAAMa,YAAY,GAAG6N,aAAO,CAAC;AAAA,WAC3BsnB,aAAa,GACTntB,0BAAA,CAAiClG,mBAAmB,CAAC/B,OAArD,CADS,GAET,IAAIpF,GAAJ,EAHuB;AAAA,GAAD,EAIzB,CAACmH,mBAAmB,CAAC/B,OAArB,CAJyB,CAA5B,CA7F0C;;AAoG1C,MAAMu1B,gBAAgB,GAAG9sB,iBAAiB,CAAC;AACzC1G,IAAAA,mBAAmB,EAAnBA,mBADyC;AACpBE,IAAAA,oBAAoB,EAApBA,oBADoB;AACEiF,IAAAA,0BAA0B,EAA1BA;AADF,GAAD,EAEvC;AACDlF,IAAAA,OAAO,EAAPA,OADC;AAEDwC,IAAAA,MAAM,EAANA,MAFC;AAGDF,IAAAA,kBAAkB,EAAlBA,kBAHC;AAIDC,IAAAA,GAAG,EAAHA;AAJC,GAFuC,CAA1C;AASA,MAAMupB,eAAe,GAAG1e,kBAAkB,CAAC;AACzCG,IAAAA,kBAAkB,EAAlBA,kBADyC;AAEzCC,IAAAA,uBAAuB,EAAvBA,uBAFyC;AAGzCxO,IAAAA,WAAW,EAAXA;AAHyC,GAAD,EAIvC;AAAEwD,IAAAA,MAAM,EAANA;AAAF,GAJuC,CAA1C,CA7G0C;AAoH1C;AACA;;AACA,MAAMgxB,oBAAoB,GAAGzsB,qBAAqB,CAAC;AACjDhH,IAAAA,mBAAmB,EAAnBA,mBADiD;AAEjDI,IAAAA,6BAA6B,EAA7BA,6BAFiD;AAGjD+E,IAAAA,0BAA0B,EAA1BA,0BAHiD;AAIjDhF,IAAAA,eAAe,EAAfA;AAJiD,GAAD,EAK/C;AACDsC,IAAAA,MAAM,EAANA,MADC;AAEDF,IAAAA,kBAAkB,EAAlBA,kBAFC;AAGDC,IAAAA,GAAG,EAAHA;AAHC,GAL+C,CAAlD;AAWA,MAAMqJ,cAAc,GAAGqB,yBAAyB,CAAC;AAAElN,IAAAA,mBAAmB,EAAnBA;AAAF,GAAD,EAA0B;AAAEyC,IAAAA,MAAM,EAANA;AAAF,GAA1B,CAAhD;AAEA,MAAMqsB,sBAAsB,GAAGljB,yBAAyB,CAAC;AACvDvO,IAAAA,cAAc,EAAdA,cADuD;AACvCwO,IAAAA,cAAc,EAAdA;AADuC,GAAD,EAErD;AACDtF,IAAAA,WAAW,EAAE8sB,aADZ;AAED5wB,IAAAA,MAAM,EAANA,MAFC;AAGDrE,IAAAA,MAAM,EAANA,MAHC;AAID0N,IAAAA,YAAY,EAAZA;AAJC,GAFqD,CAAxD,CAnI0C;AA6I1C;;AACA4nB,EAAAA,aAAa,CACX;AAAE33B,IAAAA,UAAU,EAAVA,UAAF;AAAcuG,IAAAA,OAAO,EAAPA;AAAd,GADW,EAEX;AAAEC,IAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBC,IAAAA,GAAG,EAAHA,GAAtB;AAA2BC,IAAAA,MAAM,EAANA;AAA3B,GAFW,CAAb,CA9I0C;;AAoJ1CJ,EAAAA,sBAAsB,CACpB;AAAErC,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBsC,IAAAA,OAAO,EAAPA,OAAvB;AAAgCnC,IAAAA,eAAe,EAAfA;AAAhC,GADoB,EAEpB;AACEoC,IAAAA,kBAAkB,EAAlBA,kBADF;AAEEC,IAAAA,GAAG,EAAHA,GAFF;AAGEC,IAAAA,MAAM,EAANA,MAHF;AAIEC,IAAAA,SAAS,EAATA;AAJF,GAFoB,CAAtB,CApJ0C;AA+J1C;AACA;AACA;;AACAwC,EAAAA,uBAAuB,CAAC;AACtBlF,IAAAA,mBAAmB,EAAnBA,mBADsB;AAEtBmF,IAAAA,0BAA0B,EAA1BA,0BAFsB;AAGtBC,IAAAA,eAAe,EAAfA;AAHsB,GAAD,EAIpB;AACD5C,IAAAA,GAAG,EAAHA,GADC;AAEDC,IAAAA,MAAM,EAANA,MAFC;AAGDF,IAAAA,kBAAkB,EAAlBA;AAHC,GAJoB,CAAvB,CAlK0C;;AA6K1CI,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMgxB,UAAU,GAAGztB,aAAA,CAAoBnK,UAApB,EAAgCC,MAAhC,EAAwCuG,kBAAxC,CAAnB;AACA,WAAO,YAAM;AACX2D,MAAAA,mBAAA,CAA0BytB,UAA1B;AACD,KAFD;AAGD,GALQ,EAKN,CAAC53B,UAAD,EAAauG,OAAb,CALM,CAAT,CA7K0C;;AAqL1C6D,EAAAA,kBAAkB,CAAC;AAAEC,IAAAA,QAAQ,EAARA;AAAF,GAAD,EAAe;AAC/B3D,IAAAA,MAAM,EAANA,MAD+B;AAE/BD,IAAAA,GAAG,EAAHA,GAF+B;AAG/BxC,IAAAA,mBAAmB,EAAnBA,mBAH+B;AAI/BuC,IAAAA,kBAAkB,EAAlBA,kBAJ+B;AAK/B4C,IAAAA,0BAA0B,EAA1BA;AAL+B,GAAf,CAAlB,CArL0C;;AA8L1C,MAAMiC,aAAa,GAAGF,wBAAwB,CAAC;AAAElH,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBuC,IAAAA,kBAAkB,EAAlBA;AAAvB,GAAD,EAC5C;AAAEE,IAAAA,MAAM,EAANA;AAAF,GAD4C,CAA9C;AAEA,MAAMqpB,aAAa,GAAGzkB,wBAAwB,CAC5C;AAAErH,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBuC,IAAAA,kBAAkB,EAAlBA,kBAAvB;AAA2C+E,IAAAA,yBAAyB,EAAzBA;AAA3C,GAD4C,EAE5C;AAAE7E,IAAAA,MAAM,EAANA,MAAF;AAAUD,IAAAA,GAAG,EAAHA,GAAV;AAAexG,IAAAA,MAAM,EAANA;AAAf,GAF4C,CAA9C;AAIA,MAAMwmB,aAAa,GAAGta,wBAAwB,CAC5C;AAAElI,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBuC,IAAAA,kBAAkB,EAAlBA;AAAvB,GAD4C,EAE5C;AAAEE,IAAAA,MAAM,EAANA;AAAF,GAF4C,CAA9C;;AAIA,8BAAyCiG,sBAAsB,CAC7D;AAAE1I,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuB2I,IAAAA,uBAAuB,EAAvBA;AAAvB,GAD6D,EAE7D;AACEnG,IAAAA,GAAG,EAAHA,GADF;AAEEC,IAAAA,MAAM,EAANA,MAFF;AAGEzG,IAAAA,MAAM,EAANA,MAHF;AAIEuG,IAAAA,kBAAkB,EAAlBA;AAJF,GAF6D,CAA/D;AAAA;AAAA,MAAOqG,eAAP;AAAA,MAAwBye,aAAxB;;AASA,8BAA4Bje,0BAA0B,CACpD;AAAEpJ,IAAAA,mBAAmB,EAAnBA,mBAAF;AAAuBqJ,IAAAA,uBAAuB,EAAvBA,uBAAvB;AAAgDC,IAAAA,gBAAgB,EAAhBA;AAAhD,GADoD,EAEpD;AACE9G,IAAAA,GAAG,EAAHA,GADF;AAEEC,IAAAA,MAAM,EAANA,MAFF;AAGEzG,IAAAA,MAAM,EAANA,MAHF;AAIEuG,IAAAA,kBAAkB,EAAlBA;AAJF,GAFoD,CAAtD;AAAA;AAAA,MAAOqxB,iBAAP;;AAUA,MAAI,CAAC73B,UAAL,EAAiB;AACf,wBAAQqQ;AAAK,MAAA,SAAS,EAAC;AAAf,oBAAuCA,wCAACod,mBAAD;AAAa,MAAA,IAAI,EAAEyF,wBAAgB,CAAC4E;AAApC,MAAvC,CAAR;AACD;;AACD,MAAItzB,SAAJ,EAAe;AACb,wBAAQ6L;AAAK,MAAA,SAAS,EAAC;AAAf,oBAAuCA,wCAACod,mBAAD;AAAa,MAAA,IAAI,EAAEyF,wBAAgB,CAAC6E;AAApC,MAAvC,CAAR;AACD;;AACD,MAAIjB,QAAJ,EAAc;AACZ,wBACEzmB;AAAK,MAAA,SAAS,EAAC;AAAf,oBACEA,wCAACod,mBAAD;AACE,MAAA,IAAI,EAAEyF,wBAAgB,CAAC6E,KADzB;AAEE,MAAA,cAAc,EAAE,0BAAM;AACpBrxB,QAAAA,MAAM,CAACM,IAAP,CAAY,uBAAZ;AACAmvB,QAAAA,SAAS;AACV;AALH,MADF,CADF;AAWD;;AACD,sBACE9lB,wCAAC2nB,2BAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,kBAAkB,EAAET,6BAFtB;AAGE,IAAA,iBAAiB,EAAEC;AAHrB,KAMId,gBAAgB,GACZA,gBAAgB,CAAC;AAAEp2B,IAAAA,OAAO,EAAE2D,mBAAX;AAAgCsxB,IAAAA,IAAI,EAAJA;AAAhC,GAAD,CADJ,gBAGZllB,wCAAC4nB,kBAAD;AACE,IAAA,KAAK,EAAE/B,KADT;AAEE,IAAA,mBAAmB,EAAEjyB,mBAFvB;AAGE,IAAA,WAAW,EAAEsxB,IAHf;AAIE,IAAA,cAAc,EAAEiB,cAJlB;AAKE,IAAA,aAAa,EAAEC,aALjB;AAME,IAAA,aAAa,EAAEI,uBANjB;AAOE,IAAA,QAAQ,EAAE5yB,mBAAmB,CAAC/B,OAApB,IAA+B+B,mBAAmB,CAAC/B,OAApB,CAA4BR,MAA5B,KAAuC,CAPlF;AAQE,IAAA,OAAO,EAAE;AARX,IATR,EAsBIR,QAAQ,iBACNmP,wCAAC,kBAAD,OAvBN,EA2BI/L,WAAW,GAAG,CAAd,iBACE+L,wCAAC,YAAD;AACE,IAAA,KAAK,EAAE/L,WADT;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI+E,eAAJ,EAAqB;AACnBoI,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,OAHD,MAGO;AACLvH,QAAAA,cAAA,GADK;;AAGL,YAAIxD,SAAS,CAACO,OAAV,CAAkB5H,SAAlB,KAAgC,CAApC,EAAuC;AACrC2E,UAAAA,mBAAmB,CAACoD,UAApB;AACAb,UAAAA,kBAAkB,CAAC;AACjB/F,YAAAA,IAAI,EAAEgI;AADW,WAAD,CAAlB;AAGD;AACF;AACF,KAhBH;AAiBE,IAAA,IAAI,EAAElE;AAjBR,IA5BN,EAkDIP,OAAO,gBAEHqM;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAACod,mBAAD;AAAa,IAAA,IAAI,EAAEyF,wBAAgB,CAACgF;AAApC,IADF,CAFG,gBAMH7nB,wCAAC,kBAAD;AACE,IAAA,UAAU,EACR5J,GAAG,IAAIA,GAAG,CAACwF,qBAAX,IAAoCxF,GAAG,CAACwF,qBAAJ,EAFxC;AAIE,IAAA,oBAAoB,EAAEikB,oBAJxB;AAKE,IAAA,MAAM,EAAE7tB,MALV;AAME,IAAA,OAAO,EAAE6B,OANX;AAOE,IAAA,QAAQ,EAAE,CAACmG,QAPb;AAQE,IAAA,QAAQ,EAAEotB,gBARZ;AASE,IAAA,YAAY,EAAEC,oBAThB;AAUE,IAAA,SAAS,EAAE/wB,SAVb;AAWE,IAAA,UAAU,EAAEmtB,UAXd;AAYE,IAAA,WAAW,EAAEwD,aAZf;AAaE,IAAA,WAAW,EAAEp0B,WAbf;AAcE,IAAA,eAAe,EAAE8sB,eAdnB;AAeE,IAAA,WAAW,EAAE4C,WAff;AAgBE,IAAA,UAAU,EAAEzwB,YAhBd;AAiBE,IAAA,YAAY,EAAEgI,uBAAA,CAA8BlG,mBAA9B,CAjBhB;AAkBE,IAAA,aAAa,EAAEoH,aAlBjB;AAmBE,IAAA,aAAa,EAAE0kB,aAnBjB;AAoBE,IAAA,aAAa,EAAEtJ,aApBjB;AAqBE,IAAA,cAAc,EAAE3W,cArBlB;AAsBE,IAAA,cAAc,EAAExO,cAtBlB;AAuBE,IAAA,cAAc,EAAEuxB,cAvBlB;AAwBE,IAAA,aAAa,EAAEG,aAxBjB;AAyBE,IAAA,gBAAgB,EAAE,4BAAM;AACtBvhB,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,KA5BH;AA6BE,IAAA,mBAAmB,EAAEye,mBA7BvB;AA8BE,IAAA,kBAAkB,EAAE2C,kBA9BtB;AA+BE,IAAA,kBAAkB,EAAEtsB,kBA/BtB;AAgCE,IAAA,mBAAmB,EAAEvC,mBAhCvB;AAiCE,IAAA,sBAAsB,EAAE8uB;AAjC1B,IAxDR,eA6FE1iB;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC,eAAD;AAAiB,IAAA,UAAU,EAAErQ,UAA7B;AAAyC,IAAA,EAAE,EAAEyG,GAA7C;AAAkD,IAAA,MAAM,EAAEC;AAA1D,IADF,CADF,eAIE2J,wCAACilB,qBAAD;AACE,IAAA,OAAO,EAAErxB,mBADX;AAEE,IAAA,IAAI,EAAEsxB,IAFR;AAGE,IAAA,GAAG,EAAE1oB,eAHP;AAIE,IAAA,aAAa,EAAEye,aAJjB;AAKE,IAAA,YAAY,EAAEuM,iBALhB;AAME,IAAA,kBAAkB,EAAErC,kBANtB;AAOE,IAAA,QAAQ,EAAEnrB,QAPZ;AAQE,IAAA,WAAW,EAAEtG;AARf,IAJF,EAgBI,CAACsG,QAAD,iBACEgG,wCAAC8nB,wBAAD;AAAkB,IAAA,OAAO,EAAE5xB,OAA3B;AAAoC,IAAA,EAAE,EAAEE,GAAxC;AAA6C,IAAA,MAAM,EAAEC;AAArD,IAjBN,CA7FF,CADF;AAqHD,CAnWM;AAqWPmvB,iBAAiB,CAAC7hB,SAAlB,GAA8B;AAC5BhU,EAAAA,UAAU,EAAEiU,6BAAS,CAACE,MADM;AAE5B2hB,EAAAA,MAAM,EAAE7hB,6BAAS,CAAC4K,KAAV,CAAgB;AACtBkX,IAAAA,QAAQ,EAAE9hB,6BAAS,CAAC4K,KAAV,CAAgB;AACxB9a,MAAAA,WAAW,EAAEkQ,6BAAS,CAACkL,IADC;AAExB1Y,MAAAA,GAAG,EAAEwN,6BAAS,CAAC4K,KAAV,CAAgB;AACnB5S,QAAAA,qBAAqB,EAAEgI,6BAAS,CAACoK,IADd;AAEnBjW,QAAAA,oBAAoB,EAAE6L,6BAAS,CAACoK,IAFb;AAGnB/V,QAAAA,YAAY,EAAE2L,6BAAS,CAACO,GAHL;AAInBzN,QAAAA,cAAc,EAAEkN,6BAAS,CAACO,GAJP;AAKnBrM,QAAAA,iBAAiB,EAAE8L,6BAAS,CAACoK,IALV;AAMnBzS,QAAAA,iBAAiB,EAAEqI,6BAAS,CAACO,GANV;AAOnBvG,QAAAA,iBAAiB,EAAEgG,6BAAS,CAACO,GAPV;AAQnB5L,QAAAA,WAAW,EAAEqL,6BAAS,CAACoK,IARJ;AASnB9T,QAAAA,OAAO,EAAE0J,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB;AATU,OAAhB,CAFmB;AAaxBrf,MAAAA,KAAK,EAAEyU,6BAAS,CAACkL;AAbO,KAAhB,CADY;AAgBtB6W,IAAAA,SAAS,EAAE/hB,6BAAS,CAAC4K,KAAV,CAAgB;AACzB0W,MAAAA,IAAI,EAAEthB,6BAAS,CAAC4K,KAAV,CAAgB,EAAhB;AADmB,KAAhB;AAhBW,GAAhB,EAmBLT,UArByB;AAsB5BgY,EAAAA,WAAW,EAAEniB,6BAAS,CAAC4K,KAAV,CAAgB;AAC3BsX,IAAAA,SAAS,EAAEliB,6BAAS,CAACoK;AADM,GAAhB,EAEVD,UAxByB;AAyB5B6X,EAAAA,MAAM,EAAEhiB,6BAAS,CAAC4K,KAAV,CAAgB;AACtB+X,IAAAA,kBAAkB,EAAE3iB,6BAAS,CAACkL,IADR;AAEtBwX,IAAAA,iBAAiB,EAAE1iB,6BAAS,CAACoK,IAFP;AAGtBhc,IAAAA,MAAM,EAAE4R,6BAAS,CAACE,MAAV,CAAiBiK,UAHH;AAItB/T,IAAAA,QAAQ,EAAE4J,6BAAS,CAACkL,IAAV,CAAef,UAJH;AAKtB8X,IAAAA,KAAK,EAAEjiB,6BAAS,CAACE,MALK;AAMtBzN,IAAAA,MAAM,EAAEuN,6BAAS,CAAC4K,KAAV,CAAgB;AACtB7X,MAAAA,IAAI,EAAEiN,6BAAS,CAACoK,IADM;AAEtB7e,MAAAA,KAAK,EAAEyU,6BAAS,CAACoK,IAFK;AAGtB/W,MAAAA,OAAO,EAAE2M,6BAAS,CAACoK;AAHG,KAAhB,CANc;AAWtBpe,IAAAA,MAAM,EAAEgU,6BAAS,CAAC4K,KAAV,CAAgB;AACtB1e,MAAAA,SAAS,EAAE8T,6BAAS,CAACoK,IADC;AAEtBnS,MAAAA,OAAO,EAAE+H,6BAAS,CAACoK;AAFG,KAAhB,CAXc;AAetB9Q,IAAAA,gBAAgB,EAAE0G,6BAAS,CAAC4K,KAAV,CAAgB;AAChCrR,MAAAA,eAAe,EAAEyG,6BAAS,CAACK,MADK;AAEhC7G,MAAAA,aAAa,EAAEwG,6BAAS,CAACC,SAAV,CAAoB,CACjCD,6BAAS,CAACK,MADuB,EAEjCL,6BAAS,CAACE,MAFuB,CAApB,CAFiB;AAMhCzG,MAAAA,cAAc,EAAEuG,6BAAS,CAACC,SAAV,CAAoB,CAClCD,6BAAS,CAACK,MADwB,EAElCL,6BAAS,CAACE,MAFwB,CAApB;AANgB,KAAhB;AAfI,GAAhB,EA0BLiK,UAnDyB;AAoD5BiY,EAAAA,OAAO,EAAEpiB,6BAAS,CAAC4K,KAAV,CAAgB;AACvBpa,IAAAA,iBAAiB,EAAEwP,6BAAS,CAAC4K,KAAV,CAAgB;AACjCuZ,MAAAA,gBAAgB,EAAEnkB,6BAAS,CAACkL,IADK;AAEjCkZ,MAAAA,wBAAwB,EAAEpkB,6BAAS,CAACkL,IAFH;AAGjCxV,MAAAA,eAAe,EAAEsK,6BAAS,CAACkL,IAHM;AAIjCzV,MAAAA,cAAc,EAAEuK,6BAAS,CAACkL,IAJO;AAKjCmZ,MAAAA,iBAAiB,EAAErkB,6BAAS,CAACkL,IALI;AAMjCoZ,MAAAA,KAAK,EAAEtkB,6BAAS,CAACK,MANgB;AAOjCkkB,MAAAA,OAAO,EAAEvkB,6BAAS,CAACkL,IAPc;AAQjCsZ,MAAAA,mBAAmB,EAAExkB,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B;AARY,KAAhB;AADI,GAAhB,CApDmB;AAgE5BmiB,EAAAA,aAAa,EAAEriB,6BAAS,CAACK,MAhEG;AAiE5BiiB,EAAAA,kBAAkB,EAAEtiB,6BAAS,CAACC,SAAV,CAAoB,CACtCD,6BAAS,CAACE,MAD4B,EAEtCF,6BAAS,CAACK,MAF4B,CAApB,CAjEQ;AAqE5B1H,EAAAA,uBAAuB,EAAEqH,6BAAS,CAACoK,IArEP;AAqEa;AACzC/Q,EAAAA,uBAAuB,EAAE2G,6BAAS,CAACoK,IAtEP;AAsEa;AACzC9S,EAAAA,yBAAyB,EAAE0I,6BAAS,CAACoK,IAvET;AAwE5BwU,EAAAA,cAAc,EAAE5e,6BAAS,CAACC,SAAV,CAAoB,CAClCD,6BAAS,CAACM,OADwB,EAElCN,6BAAS,CAACoK,IAFwB,CAApB,CAxEY;AA4E5B8R,EAAAA,mBAAmB,EAAElc,6BAAS,CAACoK,IA5EH;AA6E5BmX,EAAAA,kBAAkB,EAAEvhB,6BAAS,CAACC,SAAV,CAAoB,CACtCD,6BAAS,CAACM,OAD4B,EAEtCN,6BAAS,CAACoK,IAF4B,CAApB,CA7EQ;AAiF5BqY,EAAAA,gBAAgB,EAAEziB,6BAAS,CAACC,SAAV,CAAoB,CACpCD,6BAAS,CAACM,OAD0B,EAEpCN,6BAAS,CAACoK,IAF0B,CAApB,CAjFU;AAqF5BmY,EAAAA,cAAc,EAAEviB,6BAAS,CAACkL,IArFE;AAsF5BsX,EAAAA,aAAa,EAAExiB,6BAAS,CAACoK,IAtFG;AAuF5BwY,EAAAA,uBAAuB,EAAE5iB,6BAAS,CAACoK,IAvFP;AAwF5B7T,EAAAA,WAAW,EAAEyJ,6BAAS,CAACkL,IAxFK;AAyF5ByX,EAAAA,kBAAkB,EAAE3iB,6BAAS,CAACkL,IAzFF;AA0F5BwX,EAAAA,iBAAiB,EAAE1iB,6BAAS,CAACoK,IA1FD;AA2F5ByU,EAAAA,kBAAkB,EAAE7e,6BAAS,CAACkL;AA3FF,CAA9B;AA8FA0W,iBAAiB,CAACnhB,YAAlB,GAAiC;AAC/B1U,EAAAA,UAAU,EAAE,IADmB;AAE/Bq2B,EAAAA,OAAO,EAAE,EAFsB;AAG/BzpB,EAAAA,uBAAuB,EAAE,IAHM;AAI/BU,EAAAA,uBAAuB,EAAE,IAJM;AAK/B/B,EAAAA,yBAAyB,EAAE,IALI;AAM/B+qB,EAAAA,aAAa,EAAE,IANgB;AAO/BC,EAAAA,kBAAkB,EAAE,IAPW;AAQ/B1D,EAAAA,cAAc,EAAE,IARe;AAS/B1C,EAAAA,mBAAmB,EAAE,IATU;AAU/BqF,EAAAA,kBAAkB,EAAE,IAVW;AAW/BkB,EAAAA,gBAAgB,EAAE,IAXa;AAY/BlsB,EAAAA,WAAW,EAAE,IAZkB;AAa/BgsB,EAAAA,cAAc,EAAE,KAbe;AAc/BC,EAAAA,aAAa,EAAEhM,IAdgB;AAe/BmM,EAAAA,kBAAkB,EAAE,KAfW;AAgB/BD,EAAAA,iBAAiB,EAAE,IAhBY;AAiB/B7D,EAAAA,kBAAkB,EAAE,IAjBW;AAkB/B+D,EAAAA,uBAAuB,EAAEpM;AAlBM,CAAjC;AA2BA,YAAeiO,uCAAmB,CAAC7C,iBAAD,CAAlC;;;;;;;;;"}